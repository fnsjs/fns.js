{"Types":[],"Types Check":[{"type":"jsdoc","kind":"function","urlId":"castArray","category":"Types Check","title":"castArray","description":"cast `value` to `array`.","content":{"id":"castArray","longname":"castArray","name":"castArray","kind":"member","scope":"global","description":"cast `value` to `array`.","params":[{"type":{"names":["*"]},"description":"The value to cast.","name":"value"}],"examples":["castArray(\"hello\")\n// => {\"hello\"}\n\ncastArray(1)\n// => [1]"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/castArray"},"summary":"cast `value` to `array`.","returns":[{"type":{"names":["Array"]},"description":"Returns the cast array."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to cast.","name":"value"}],"relatedDocs":{"default":"castArray","fp":"fp/castArray"},"usage":{"commonjs":{"title":"CommonJS","code":"var castArray = require('fns.js/castArray')"},"es2015":{"title":"ES 2015","code":"import castArray from 'fns.js/castArray'"},"esm":{"title":"ESM","code":"import { castArray } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"castArray(value)"},{"type":"jsdoc","kind":"function","urlId":"fromArray","category":"Types Check","title":"fromArray","description":"cast `value` to `array`.","content":{"id":"fromArray","longname":"fromArray","name":"fromArray","kind":"member","scope":"global","description":"Creates a new, shallow-copied Array instance from an array-like or iterable object.","params":[{"type":{"names":["*"]},"description":"An array-like or iterable object to convert to an array.","name":"arrayLike"},{"type":{"names":["*"]},"description":"Map function to call on every element of the array.","name":"mapFn"}],"examples":["fromArray(\"hello\")\n// => {\"hello\"}\n\nfromArray(1)\n// => [1]"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/fromArray"},"summary":"cast `value` to `array`.","returns":[{"type":{"names":["Array"]},"description":"A new Array instance."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"An array-like or iterable object to convert to an array.","name":"arrayLike"},{"type":{"names":["*"]},"description":"Map function to call on every element of the array.","name":"mapFn"}],"relatedDocs":{"default":"fromArray","fp":"fp/fromArray"},"usage":{"commonjs":{"title":"CommonJS","code":"var fromArray = require('fns.js/fromArray')"},"es2015":{"title":"ES 2015","code":"import fromArray from 'fns.js/fromArray'"},"esm":{"title":"ESM","code":"import { fromArray } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"fromArray(arrayLike, mapFn)"},{"type":"jsdoc","kind":"function","urlId":"isArray","category":"Types Check","title":"isArray","description":"Checks if `value` is `Array`.","content":{"id":"isArray","longname":"isArray","name":"isArray","kind":"member","scope":"global","description":"determines whether the passed value is an Array.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isArray([1,2,3])\n// => true\n\nisArray({})\n// => false"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isArray"},"summary":"Checks if `value` is `Array`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `array`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isArray","fp":"fp/isArray"},"usage":{"commonjs":{"title":"CommonJS","code":"var isArray = require('fns.js/isArray')"},"es2015":{"title":"ES 2015","code":"import isArray from 'fns.js/isArray'"},"esm":{"title":"ESM","code":"import { isArray } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isArray(value)"},{"type":"jsdoc","kind":"function","urlId":"isBoolean","category":"Types Check","title":"isBoolean","description":"Checks if `value` is `boolean`.","content":{"id":"isBoolean","longname":"isBoolean","name":"isBoolean","kind":"member","scope":"global","description":"Checks if `value` is `null`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isBoolean(false)\n// => true\n\nisBoolean([])\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isBoolean"},"summary":"Checks if `value` is `boolean`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `boolean`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isBoolean","fp":"fp/isBoolean"},"usage":{"commonjs":{"title":"CommonJS","code":"var isBoolean = require('fns.js/isBoolean')"},"es2015":{"title":"ES 2015","code":"import isBoolean from 'fns.js/isBoolean'"},"esm":{"title":"ESM","code":"import { isBoolean } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isBoolean(value)"},{"type":"jsdoc","kind":"function","urlId":"isDate","category":"Types Check","title":"isDate","description":"Checks if `value` is `date`.","content":{"id":"isDate","longname":"isDate","name":"isDate","kind":"member","scope":"global","description":"Checks if `value` is `null`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isDate(new Date)\n// => true\n\nisDate(\"Thu Jun 18 2020\")\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isDate"},"summary":"Checks if `value` is `date`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `date`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isDate","fp":"fp/isDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var isDate = require('fns.js/isDate')"},"es2015":{"title":"ES 2015","code":"import isDate from 'fns.js/isDate'"},"esm":{"title":"ESM","code":"import { isDate } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isDate(value)"},{"type":"jsdoc","kind":"function","urlId":"isError","category":"Types Check","title":"isError","description":"Checks if `value` is `Error`.","content":{"id":"isError","longname":"isError","name":"isError","kind":"member","scope":"global","description":"Checks if `value` is `Error`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isError(new Error)\n// => true\n\nisError(Error)\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isError"},"summary":"Checks if `value` is `Error`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `Error`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isError","fp":"fp/isError"},"usage":{"commonjs":{"title":"CommonJS","code":"var isError = require('fns.js/isError')"},"es2015":{"title":"ES 2015","code":"import isError from 'fns.js/isError'"},"esm":{"title":"ESM","code":"import { isError } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isError(value)"},{"type":"jsdoc","kind":"function","urlId":"isFunction","category":"Types Check","title":"isFunction","description":"Checks if `value` is `function`.","content":{"id":"isFunction","longname":"isFunction","name":"isFunction","kind":"member","scope":"global","description":"Checks if `value` is `function`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isFunction(()=>{})\n// => true\n\n * isFunction({})\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isFunction"},"summary":"Checks if `value` is `function`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `function`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isFunction","fp":"fp/isFunction"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFunction = require('fns.js/isFunction')"},"es2015":{"title":"ES 2015","code":"import isFunction from 'fns.js/isFunction'"},"esm":{"title":"ESM","code":"import { isFunction } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isFunction(value)"},{"type":"jsdoc","kind":"function","urlId":"isLength","category":"Types Check","title":"isLength","description":"Checks if `value` is a valid array-like length.","content":{"id":"isLength","longname":"isLength","name":"isLength","kind":"member","scope":"global","description":"Checks if `value` is a valid array-like length.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isLength(3)\n// => true\n\nisLength(Number.MIN_VALUE)\n// => false\n\nisLength(Infinity)\n// => false\n\nisLength('3')\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isLength"},"summary":"Checks if `value` is a valid array-like length.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is a valid length, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isLength","fp":"fp/isLength"},"usage":{"commonjs":{"title":"CommonJS","code":"var isLength = require('fns.js/isLength')"},"es2015":{"title":"ES 2015","code":"import isLength from 'fns.js/isLength'"},"esm":{"title":"ESM","code":"import { isLength } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isLength(value)"},{"type":"jsdoc","kind":"function","urlId":"isNull","category":"Types Check","title":"isNull","description":"Checks if `value` is `null`.","content":{"id":"isNull","longname":"isNull","name":"isNull","kind":"member","scope":"global","description":"Checks if `value` is `null`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isNull(null)\n// => true\n\nisNull(\"\")\n// => false"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isNull"},"summary":"Checks if `value` is `null`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `null`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isNull","fp":"fp/isNull"},"usage":{"commonjs":{"title":"CommonJS","code":"var isNull = require('fns.js/isNull')"},"es2015":{"title":"ES 2015","code":"import isNull from 'fns.js/isNull'"},"esm":{"title":"ESM","code":"import { isNull } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isNull(value)"},{"type":"jsdoc","kind":"function","urlId":"isNumber","category":"Types Check","title":"isNumber","description":"Checks if `value` is `Number`.","content":{"id":"isNumber","longname":"isNumber","name":"isNumber","kind":"member","scope":"global","description":"determines whether the passed value is an Number.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isNumber(123)\n// => true\n\nisNumber({})\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isNumber"},"summary":"Checks if `value` is `Number`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `Number`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isNumber","fp":"fp/isNumber"},"usage":{"commonjs":{"title":"CommonJS","code":"var isNumber = require('fns.js/isNumber')"},"es2015":{"title":"ES 2015","code":"import isNumber from 'fns.js/isNumber'"},"esm":{"title":"ESM","code":"import { isNumber } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isNumber(value)"},{"type":"jsdoc","kind":"function","urlId":"isObject","category":"Types Check","title":"isObject","description":"Checks if `value` is `object`.","content":{"id":"isObject","longname":"isObject","name":"isObject","kind":"member","scope":"global","description":"Checks if `value` is `object`. It doesn't consider `null` as an object.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isObject({})\n// => true\n\n * isObject({})\n// => true\n\nisObject(null)\n// => false"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isObject"},"summary":"Checks if `value` is `object`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `object`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isObject","fp":"fp/isObject"},"usage":{"commonjs":{"title":"CommonJS","code":"var isObject = require('fns.js/isObject')"},"es2015":{"title":"ES 2015","code":"import isObject from 'fns.js/isObject'"},"esm":{"title":"ESM","code":"import { isObject } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isObject(value)"},{"type":"jsdoc","kind":"function","urlId":"isObjectLike","category":"Types Check","title":"isObjectLike","description":"Checks if `value` is `object`.","content":{"id":"isObjectLike","longname":"isObjectLike","name":"isObjectLike","kind":"member","scope":"global","description":"Checks if `value` is `object-like`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isObjectLike({})\n// => true\n\nisObjectLike([1, 2, 3])\n// => true\n\nisObjectLike(null)\n// => false"],"category":"Types Check","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isObjectLike"},"summary":"Checks if `value` is `object`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `object-like`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isObjectLike","fp":"fp/isObjectLike"},"usage":{"commonjs":{"title":"CommonJS","code":"var isObjectLike = require('fns.js/isObjectLike')"},"es2015":{"title":"ES 2015","code":"import isObjectLike from 'fns.js/isObjectLike'"},"esm":{"title":"ESM","code":"import { isObjectLike } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isObjectLike(value)"},{"type":"jsdoc","kind":"function","urlId":"isPlainObject","category":"Types Check","title":"isPlainObject","description":"Checks if `value` is `object`.","content":{"id":"isPlainObject","longname":"isPlainObject","name":"isPlainObject","kind":"member","scope":"global","description":"Checks if `value` is `plain object`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isPlainObject({a:1, b:2})\n// => true\n\n * isPlainObject(Object.create(null))\n// => true\n\nisPlainObject([1, 2, 3])\n// => false"],"category":"Types Check","meta":{"lineno":12,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isPlainObject"},"summary":"Checks if `value` is `object`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `plain object`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isPlainObject","fp":"fp/isPlainObject"},"usage":{"commonjs":{"title":"CommonJS","code":"var isPlainObject = require('fns.js/isPlainObject')"},"es2015":{"title":"ES 2015","code":"import isPlainObject from 'fns.js/isPlainObject'"},"esm":{"title":"ESM","code":"import { isPlainObject } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isPlainObject(value)"},{"type":"jsdoc","kind":"function","urlId":"isRegExp","category":"Types Check","title":"isRegExp","description":"Checks if `value` is `RegExp`.","content":{"id":"isRegExp","longname":"isRegExp","name":"isRegExp","kind":"member","scope":"global","description":"Checks if `value` is `RegExp`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isRegExp(/a/)\n// => true\n\n * isRegExp(\"hello\")\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isRegExp"},"summary":"Checks if `value` is `RegExp`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `RegExp`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isRegExp","fp":"fp/isRegExp"},"usage":{"commonjs":{"title":"CommonJS","code":"var isRegExp = require('fns.js/isRegExp')"},"es2015":{"title":"ES 2015","code":"import isRegExp from 'fns.js/isRegExp'"},"esm":{"title":"ESM","code":"import { isRegExp } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isRegExp(value)"},{"type":"jsdoc","kind":"function","urlId":"isString","category":"Types Check","title":"isString","description":"Checks if `value` is `string`.","content":{"id":"isString","longname":"isString","name":"isString","kind":"member","scope":"global","description":"Checks if `value` is `string`.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isString(\"hello\")\n// => true\n\nisObject({a:1})\n// => false"],"category":"Types Check","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isString"},"summary":"Checks if `value` is `string`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `string`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isString","fp":"fp/isString"},"usage":{"commonjs":{"title":"CommonJS","code":"var isString = require('fns.js/isString')"},"es2015":{"title":"ES 2015","code":"import isString from 'fns.js/isString'"},"esm":{"title":"ESM","code":"import { isString } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isString(value)"}],"Casting":[],"Array":[{"type":"jsdoc","kind":"function","urlId":"filter","category":"Array","title":"filter","description":"Gets the value at path of object.","content":{"id":"filter","longname":"filter","name":"filter","kind":"member","scope":"global","description":"creates a new array populated with the results of calling a provided function on every element in the calling array.","params":[{"type":{"names":["Array"]},"description":"The array to iterate over.","name":"array"},{"type":{"names":["function"]},"description":"that is called for every element of arr. Each time callback executes, the returned value is added to new_array.","name":"callback"}],"examples":["const array = [1, 4, 9, 16];\n\nmap(array,x => x * 2);\n// => [2, 8, 18, 32]"],"category":"Array","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/filter"},"summary":"Gets the value at path of object.","returns":[{"type":{"names":["Array"]},"description":"A new array with each element being the result of the callback function."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Array"]},"description":"The array to iterate over.","name":"array"},{"type":{"names":["function"]},"description":"that is called for every element of arr. Each time callback executes, the returned value is added to new_array.","name":"callback"}],"relatedDocs":{"default":"filter","fp":"fp/filter"},"usage":{"commonjs":{"title":"CommonJS","code":"var filter = require('fns.js/filter')"},"es2015":{"title":"ES 2015","code":"import filter from 'fns.js/filter'"},"esm":{"title":"ESM","code":"import { filter } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"filter(array, callback)"},{"type":"jsdoc","kind":"function","urlId":"last","category":"Array","title":"last","description":"Checks if `value` is `Error`.","content":{"id":"last","longname":"last","name":"last","kind":"member","scope":"global","description":"Checks if `value` is `Error`.","params":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"examples":["isError(new Error)\n// => true\n\nisError(Error)\n// => false"],"category":"Array","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/last"},"summary":"Checks if `value` is `Error`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `Error`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"relatedDocs":{"default":"last","fp":"fp/last"},"usage":{"commonjs":{"title":"CommonJS","code":"var last = require('fns.js/last')"},"es2015":{"title":"ES 2015","code":"import last from 'fns.js/last'"},"esm":{"title":"ESM","code":"import { last } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"last(array)"},{"type":"jsdoc","kind":"function","urlId":"map","category":"Array","title":"map","description":"Iterate over array and return a new array.","content":{"id":"map","longname":"map","name":"map","kind":"member","scope":"global","description":"creates a new array populated with the results of calling a provided function on every element in the calling array.","params":[{"type":{"names":["Array"]},"description":"The array to iterate over.","name":"array"},{"type":{"names":["function"]},"description":"that is called for every element of arr. Each time callback executes, the returned value is added to new_array.","name":"callback"}],"meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/map"},"summary":"Iterate over array and return a new array.","returns":[{"type":{"names":["Array"]},"description":"A new array with each element being the result of the callback function."}],"category":"Array","customTags":[{"tag":"exampleåå","value":"const array = [1, 4, 9, 16];\n\nmap(array,x => x * 2);\n// => [2, 8, 18, 32]"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Array"]},"description":"The array to iterate over.","name":"array"},{"type":{"names":["function"]},"description":"that is called for every element of arr. Each time callback executes, the returned value is added to new_array.","name":"callback"}],"relatedDocs":{"default":"map","fp":"fp/map"},"usage":{"commonjs":{"title":"CommonJS","code":"var map = require('fns.js/map')"},"es2015":{"title":"ES 2015","code":"import map from 'fns.js/map'"},"esm":{"title":"ESM","code":"import { map } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"map(array, callback)"},{"type":"jsdoc","kind":"function","urlId":"pull","category":"Array","title":"pull","description":"Checks if `value` is `Error`.","content":{"id":"pull","longname":"pull","name":"pull","kind":"member","scope":"global","description":"Checks if `value` is `Error`.","params":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"examples":["isError(new Error)\n// => true\n\nisError(Error)\n// => false"],"category":"Array","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/pull"},"summary":"Checks if `value` is `Error`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `Error`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"relatedDocs":{"default":"pull","fp":"fp/pull"},"usage":{"commonjs":{"title":"CommonJS","code":"var pull = require('fns.js/pull')"},"es2015":{"title":"ES 2015","code":"import pull from 'fns.js/pull'"},"esm":{"title":"ESM","code":"import { pull } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"pull(array)"},{"type":"jsdoc","kind":"function","urlId":"reverse","category":"Array","title":"reverse","description":"Checks if `value` is `Error`.","content":{"id":"reverse","longname":"reverse","name":"reverse","kind":"member","scope":"global","description":"Checks if `value` is `Error`.","params":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"examples":["isError(new Error)\n// => true\n\nisError(Error)\n// => false"],"category":"Array","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/reverse"},"summary":"Checks if `value` is `Error`.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is `Error`, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The array to get last element.","name":"array"}],"relatedDocs":{"default":"reverse","fp":"fp/reverse"},"usage":{"commonjs":{"title":"CommonJS","code":"var reverse = require('fns.js/reverse')"},"es2015":{"title":"ES 2015","code":"import reverse from 'fns.js/reverse'"},"esm":{"title":"ESM","code":"import { reverse } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"reverse(array)"},{"type":"jsdoc","kind":"function","urlId":"takeRight","category":"Array","title":"takeRight","description":"Creates a slice of array with n elements taken from the end.","content":{"id":"takeRight","longname":"takeRight","name":"takeRight","kind":"member","scope":"global","description":"Creates a slice of array with n elements taken from the end.","params":[{"type":{"names":["Array"]},"description":"The array to get slice.","name":"array"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of elements to take.","name":"n"}],"examples":["_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]"],"category":"Array","exceptions":[{"type":{"names":["TypeError"]},"description":"should be Array-like value."}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/takeRight"},"summary":"Creates a slice of array with n elements taken from the end.","returns":[{"type":{"names":["Array"]},"description":"Returns the slice of `array`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Array"]},"description":"The array to get slice.","name":"array"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of elements to take.","name":"n"}],"relatedDocs":{"default":"takeRight","fp":"fp/takeRight"},"usage":{"commonjs":{"title":"CommonJS","code":"var takeRight = require('fns.js/takeRight')"},"es2015":{"title":"ES 2015","code":"import takeRight from 'fns.js/takeRight'"},"esm":{"title":"ESM","code":"import { takeRight } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"takeRight(array, [n])"}],"Typing":[{"type":"jsdoc","kind":"function","urlId":"isArrayLike","category":"Typing","title":"isArrayLike","description":"Checks if `value` is array-like.","content":{"id":"isArrayLike","longname":"isArrayLike","name":"isArrayLike","kind":"member","scope":"global","description":"Checks if `value` is array-like.","params":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"examples":["isArrayLike([1, 2, 3])\n// => {\"hello\"}\n\nisArrayLike(document.body.children)\n// => true\n\nisArrayLike('abc')\n// => true\n\nisArrayLike(Function)\n// => false"],"category":"Typing","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/fns.js/src/isArrayLike"},"summary":"Checks if `value` is array-like.","returns":[{"type":{"names":["boolean"]},"description":"Returns `true` if `value` is array-like, else `false`."}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"The value to check.","name":"value"}],"relatedDocs":{"default":"isArrayLike","fp":"fp/isArrayLike"},"usage":{"commonjs":{"title":"CommonJS","code":"var isArrayLike = require('fns.js/isArrayLike')"},"es2015":{"title":"ES 2015","code":"import isArrayLike from 'fns.js/isArrayLike'"},"esm":{"title":"ESM","code":"import { isArrayLike } from 'fns.js'","text":"See [ECMAScript Modules guide](https://fnsjs.dev/docs/) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isArrayLike(value)"}]}