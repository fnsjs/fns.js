{"General":[{"content":"# Getting Started\n\n## Table of Contents\n\n- [Introduction](#introduction)\n\n- [Submodules](#submodules)\n\n- [Installation](#installation)\n\n## Introduction\n\n**date-fns** provides the most comprehensive, yet simple and consistent toolset\nfor manipulating **JavaScript dates** in **a browser** & **Node.js**.\n\n**date-fns** is like [lodash](https://lodash.com) for dates. It has\n[**140+ functions** for all occasions](https://date-fns.org/docs/).\n\n```js\nimport { format, compareAsc } from 'date-fns'\n\nformat(new Date(2014, 1, 11), 'MM/dd/yyyy')\n//=> '02/11/2014'\n\nconst dates = [new Date(1995, 6, 2), new Date(1987, 1, 11), new Date(1989, 6, 10)]\ndates.sort(compareAsc)\n//=> [\n//   Wed Feb 11 1987 00:00:00,\n//   Mon Jul 10 1989 00:00:00,\n//   Sun Jul 02 1995 00:00:00\n// ]\n```\n\n## Submodules\n\n**date-fns** includes some optional features as submodules in the npm package.\nHere is the list of them, in order of nesting:\n\n- FP — functional programming-friendly variations of the functions. See [FP Guide](https://date-fns.org/docs/FP-Guide);\n\n- UTC (in development) — variations of the functions which calculate dates in UTC±00:00 timezone.\n\nThe later submodules are also included inside the former if you want to use multiple features from the list.\n\nTo use submodule features, [install the npm package](#npm) and then import a function from a submodule:\n\n```js\n// The main submodule:\nimport addDays from 'date-fns/addDays'\n\n// FP variation:\nimport addDays from 'date-fns/fp/addDays'\n\n// UTC variation:\nimport addDays from 'date-fns/utc/addDays'\n\n// Both FP and UTC:\nimport addDays from 'date-fns/fp/utc/addDays'\n\n// With tree-shaking enabled:\nimport { addDays, format } from 'date-fns/fp'\n```\n\n## Installation\n\nThe library is available as an [npm package](https://www.npmjs.com/package/date-fns).\n\nTo install the package, run:\n\n```bash\nnpm install date-fns --save\n# or\nyarn add date-fns\n```\n\nStart using:\n\n```js\nimport { formatDistance, subDays } from 'date-fns'\n\nformatDistance(subDays(new Date(), 3), new Date())\n//=> \"3 days ago\"\n```\n","type":"markdown","urlId":"Getting-Started","category":"General","title":"Getting Started","description":"Introduction & installation instructions","path":"/Users/jalal/Projects/date-fns/docs/gettingStarted.md"},{"content":"# Change Log\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning].\n\nThis change log follows the format documented in [Keep a CHANGELOG].\n\n[semantic versioning]: http://semver.org/\n[keep a changelog]: http://keepachangelog.com/\n\n## [2.14.0] - 2020-05-18\n\nKudos to [@julamb](https://github.com/julamb), [@JacobSoderblom](https://github.com/JacobSoderblom), [@justingrant](http://github.com/justingrant), [@dragunoff](https://github.com/dragunoff), [@jmate0321](https://github.com/jmate0321), [@gbhasha](https://github.com/gbhasha), [@rasck](https://github.com/rasck), [@AlbertoPdRF](https://github.com/AlbertoPdRF), [@sebastianhaberey](https://github.com/sebastianhaberey) and [@giogonzo](https://github.com/giogonzo) for working on the release!\n\n### Fixed\n\n- [Fixed DST issues with `add`, `addDays` and `addMonths`](https://github.com/date-fns/date-fns/pull/1760).\n- [Fixed \"quarter\" translation in the Bulgarian locale](https://github.com/date-fns/date-fns/pull/1763).\n- [Fixed `formatDistance` strings in the Hungarian locale](https://github.com/date-fns/date-fns/pull/1765).\n- [Fixed Danish month abbreviations](https://github.com/date-fns/date-fns/pull/1774).\n- [Fixed parsing of mei in the Dutch locale](https://github.com/date-fns/date-fns/pull/1774).\n- [Fixed missing preposition in `formatLong` in the Spanish locale](https://github.com/date-fns/date-fns/pull/1775).\n- [Fixed `formatRelative` in the Italian locale](https://github.com/date-fns/date-fns/pull/1777).\n\n### Added\n\n- [Added `eachQuarterOfInterval`](https://github.com/date-fns/date-fns/pull/1715).\n- [Added Basque (`eu`) locale](https://github.com/date-fns/date-fns/pull/1759).\n- [Added Indian English (`en-IN`) locale](https://github.com/date-fns/date-fns/pull/1767).\n- [Added `eachHourOfInterval`](https://github.com/date-fns/date-fns/pull/1776).\n\n## [2.13.0] - 2020-05-06\n\nThanks to [@JorenVos](https://github.com/JorenVos), [@developergouli](https://github.com/developergouli), [@rhlowe](https://github.com/rhlowe) and [@justingrant](http://github.com/justingrant) for working on the release!\n\n### Fixed\n\n- [Fixed mei abbreviation in the Dutch locale](https://github.com/date-fns/date-fns/pull/1752).\n- [Fixed `differenceInDays` DST behavior broken in 2.12.0](https://github.com/date-fns/date-fns/pull/1754).\n\n### Added\n\n- [Added Kannada locale support](https://github.com/date-fns/date-fns/pull/1747).\n- [Added `formatISODuration` function](https://github.com/date-fns/date-fns/pull/1713).\n- [Added `intervalToDuration` function](https://github.com/date-fns/date-fns/pull/1713).\n\n## [2.12.0] - 2020-04-09\n\nKudos to [@leshakoss](http://github.com/leshakoss), [@skyuplam](https://github.com/skyuplam), [@so99ynoodles](https://github.com/so99ynoodles), [@dkozickis](https://github.com/dkozickis), [@belgamo](https://github.com/belgamo), [@akgondber](https://github.com/akgondber), [@dcousens](https://github.com/dcousens) and [@BoomDev](https://github.com/BoomDev) for working on the release!\n\n### Fixed\n\n- [Fixed minulý štvrtok in Slovak locale](https://github.com/date-fns/date-fns/pull/1701).\n- Fixed date ordinalNumber for [ja/zh-CN/zh-TW](https://github.com/date-fns/date-fns/pull/1690) and [ko](https://github.com/date-fns/date-fns/pull/1696).\n- [Fixed quarters parsing](https://github.com/date-fns/date-fns/pull/1694).\n- [Fixed `setDay` with `weekStartsOn` != 0](https://github.com/date-fns/date-fns/pull/1639).\n- [Fixed differenceInDays across DST](https://github.com/date-fns/date-fns/pull/1630).\n- [Fixed required arguments exception message](https://github.com/date-fns/date-fns/pull/1674).\n\n### Added\n\n- [Added new function `formatDistanceToNowStrict`](https://github.com/date-fns/date-fns/pull/1679).\n\n## [2.11.1] - 2020-03-26\n\n### Fixed\n\n- Rebuilt TypeScript and flow types.\n\n## [2.11.0] - 2020-03-13\n\nKudos to [@oakhan3](https://github.com/oakhan3), [@Mukhammadali](https://github.com/Mukhammadali), [@altrim](https://github.com/altrim), [@leepowellcouk](https://github.com/leepowellcouk), [@amatzon](@https://github.com/amatzon), [@bryanMt](https://github.com/bryanMt), [@kalekseev](https://github.com/kalekseev), [@eugene-platov](https://github.com/eugene-platov) and [@tjrobinson](https://github.com/tjrobinson) for working on the release.\n\n### Fixed\n\n- [Fixed a bug in `differenceInYears` causing incorrect results when the left date is a leap day](https://github.com/date-fns/date-fns/pull/1654).\n- [Fixed `parseISO` to work correctly around time shift dates](https://github.com/date-fns/date-fns/pull/1667).\n- [Fixed `format` to work correctly with GMT-0752/GMT-0456 and similar timezones](https://github.com/date-fns/date-fns/pull/1666).\n\n### Changed\n\n- [Changed `getDay` typings to return `0|1|2|3|4|5|6` instead of `number`](https://github.com/date-fns/date-fns/pull/1668).\n- [Improved Chinese locale](https://github.com/date-fns/date-fns/pull/1664):\n  - Change date format to meet the national standard (GB/T 7408-2005).\n  - Improve `ordinalNumber` function behavior.\n  - Add prefix in `formatRelative` depending on if it's a current week or not.\n\n### Added\n\n- [Added Uzbek `uz` locale](https://github.com/date-fns/date-fns/pull/1648).\n- [Updated Macedonian locale for v2](https://github.com/date-fns/date-fns/pull/1649).\n- [Added Maltese `mt` locale](https://github.com/date-fns/date-fns/pull/1658).\n\n## [2.10.0] - 2020-02-25\n\n### Fixed\n\n- [Fixed `formatISO` when formatting time with timezones with minute offsets > 0](https://github.com/date-fns/date-fns/pull/1599). Kudos to [@dcRUSTy](https://github.com/dcRUSTy).\n\n### Fixed\n\n- Fixed a bug in setDay when using weekStartsOn that is not 0\n\n### Added\n\n- [Added `weeks` to `Duration`](https://github.com/date-fns/date-fns/pull/1592).\n- [Added `weeks` support to `add` and `sub`](https://github.com/date-fns/date-fns/pull/1592).\n\n## [2.9.0] - 2020-01-08\n\nThanks to [@mborgbrant](https://github.com/mborgbrant), [@saintplay](https://github.com/saintplay), [@mrenty](https://github.com/mrenty), [@kibertoad](https://github.com/kibertoad), [@levibuzolic](https://github.com/levibuzolic), [@Anshuman71](https://github.com/Anshuman71), [@talgautb](https://github.com/talgautb), [@filipjuza](https://github.com/filipjuza), [@tobyzerner](https://github.com/tobyzerner), [@emil9453](https://github.com/emil9453), [@fintara](https://github.com/fintara), [@pascaliske](https://github.com/pascaliske), [@rramiachraf](https://github.com/rramiachraf), [@marnusw](https://github.com/marnusw) and [@Imballinst](https://github.com/Imballinst) for working on the release.\n\n### Fixed\n\n- [Fixed a bug with addBusinessDays returning the Tuesday when adding 1 day on weekends. Now it returns the Monday](https://github.com/date-fns/date-fns/pull/1588).\n- [Added missing timezone to `formatISO`](https://github.com/date-fns/date-fns/pull/1576).\n- [Removed dots from short day period names in the Kazakh locale](https://github.com/date-fns/date-fns/pull/1512).\n- [Fixed typo in formatDistance in the Czech locale](https://github.com/date-fns/date-fns/pull/1540).\n- [Fixed shortenings in the Bulgarian locale](https://github.com/date-fns/date-fns/pull/1560).\n- [Fixed regex for the May in the Portuguese locale](https://github.com/date-fns/date-fns/pull/1565).\n\n### Added\n\n- [Added `eachMonthOfInterval` and `eachYearOfInterval`](https://github.com/date-fns/date-fns/pull/618).\n- [Added `inclusive` option to `areIntervalsOverlapping](https://github.com/date-fns/date-fns/pull/643).\n- [Added `isExists` function that checks if the given date is exists](https://github.com/date-fns/date-fns/pull/682).\n- [Added `add` function to add seconds, minutes, hours, weeks, years in single call](https://github.com/date-fns/date-fns/pull/1581).\n- [Added `sub` function, the opposite of `add`](https://github.com/date-fns/date-fns/pull/1583).\n- [Added `Duration` type used in `add` and `sub`](https://github.com/date-fns/date-fns/pull/1583).\n- [Added Azerbaijani (az) locale](https://github.com/date-fns/date-fns/pull/1547).\n- [Added Moroccan Arabic (ar-MA) locale](https://github.com/date-fns/date-fns/pull/1578).\n\n### Changed\n\n- [Reduced the total minified build size by 1Kb/4%](https://github.com/date-fns/date-fns/pull/1563).\n- [Made all properties in `Locale` type optional](https://github.com/date-fns/date-fns/pull/1542).\n- [Added missing properties to `Locale` type](https://github.com/date-fns/date-fns/pull/1542).\n- [Add the locale code to `Locale` type](https://github.com/date-fns/date-fns/pull/1580).\n- [Added support of space time separator to `parseJSON`](https://github.com/date-fns/date-fns/pull/1579).\n- [Allowed up to 7 digits in milliseconds in `parseJSON`](https://github.com/date-fns/date-fns/pull/1579).\n\n## [2.8.1] - 2019-11-22\n\nThanks to [@Imballinst](https://github.com/Imballinst) for the bug fix!\n\n### Fixed\n\n- [Add colon between the hour and minutes for `formatRFC3339`](https://github.com/date-fns/date-fns/pull/1549). [See #1548](https://github.com/date-fns/date-fns/issues/1548).\n\n## [2.8.0] - 2019-11-19\n\nKudos to [@NaridaL](https://github.com/NaridaL), [@Zyten](https://github.com/Zyten), [@Imballinst](https://github.com/Imballinst), [@leshakoss](https://github.com/leshakoss) and [@Neorth](https://github.com/Neorth) for working on the release.\n\n### Fixed\n\n- [Remove the next week preposition in the Swedish locale](https://github.com/date-fns/date-fns/pull/1538).\n\n### Added\n\n- [Added Malay (ms) locale](https://github.com/date-fns/date-fns/pull/1537).\n- [Added `formatISO`, `formatISO9075`, `formatRFC3339`, and `formatRFC7231` functions](https://github.com/date-fns/date-fns/pull/1536).\n\n## [2.7.0] - 2019-11-07\n\nThanks to [@mzgajner](https://github.com/mzgajner), [@NaridaL](https://github.com/NaridaL), [@Zyten](https://github.com/Zyten), [@leshakoss](https://github.com/leshakoss), [@fintara](https://github.com/fintara), [@kpr-hellofresh](https://github.com/kpr-hellofresh) for contributing to the release.\n\n### Fixed\n\n- [Fixed a mistake in the Slovenian locale](https://github.com/date-fns/date-fns/pull/1529).\n- [Fixed incorrect behavior of `parseISO` in Firefox caused by differences in `getTimezoneOffset`](https://github.com/date-fns/date-fns/pull/1495).\n\n### Changed\n\n- [Make object arguments types more elaborate in Flow type definitions](https://github.com/date-fns/date-fns/pull/1519).\n- [Get rid of deprecated Function in Flow type definitions](https://github.com/date-fns/date-fns/pull/1520).\n- [Allow `parseJSON` to accept strings without trailing 'Z' symbol and with up to 6 digits in the milliseconds' field](https://github.com/date-fns/date-fns/pull/1499).\n\n### Added\n\n- [Added Bulgarian (bg) locale](https://github.com/date-fns/date-fns/pull/1522).\n\n## [2.6.0] - 2019-10-22\n\nKudos to [@marnusw](https://github.com/marnusw), [@cdrikd](https://github.com/cdrikd) and [@rogyvoje](https://github.com/rogyvoje) for working on the release!\n\n### Added\n\n- [Added `parseJSON` - lightweight function (just 411 B) that parses dates formatted with `toJSON`](https://github.com/date-fns/date-fns/pull/1463).\n- [Added the language code to each locale](https://github.com/date-fns/date-fns/pull/1489).\n- [Added `subBusinessDays` function](https://github.com/date-fns/date-fns/pull/1491).\n- [Added both Serbian - cyrillic (sr) and latin (sr-Latn) locales](https://github.com/date-fns/date-fns/pull/1494).\n\n## [2.5.1] - 2019-10-18\n\nThanks to [@mitchellbutler](https://github.com/mitchellbutler) for the bug fix!\n\n### Fixed\n\n- [Fixed infinite loop in `addBusinessDays`](https://github.com/date-fns/date-fns/pull/1486).\n\n## [2.5.0] - 2019-10-16\n\nKudos to [@dkozickis](https://github.com/dkozickis), [@drugoi](https://github.com/drugoi), [@kranthilakum](https://github.com/kranthilakum), [@102](https://github.com/102), [@gpetrioli](https://github.com/gpetrioli) and [@JulienMalige](https://github.com/JulienMalige) for making the release happen.\n\n### Fixed\n\n- [Fixed compatibility with IE11 by removing `findIndex` from the code](https://github.com/date-fns/date-fns/pull/1457).\n- [Fixed Greek locale patterns](https://github.com/date-fns/date-fns/pull/1480).\n\n### Added\n\n- [Added Kazakh (kk) locale](https://github.com/date-fns/date-fns/pull/1460).\n- [Added Telugu (te) locale](https://github.com/date-fns/date-fns/pull/1464).\n- [Added Canadian French (fr-CA) locale](https://github.com/date-fns/date-fns/issues/1465).\n- [Added Australian English (en-AU) locale](https://github.com/date-fns/date-fns/pull/1470).\n- [Exported `Interval` and `Locale` types from Flow typings](https://github.com/date-fns/date-fns/pull/1475).\n\n## [2.4.1] - 2019-09-28\n\nThanks to [@mrclayman](https://github.com/mrclayman) for reporting the issue and [@leshakoss](https://github.com/leshakoss) for fixing it.\n\n### Fixed\n\n- [Fixed am/pm mixup in the Czech locale](https://github.com/date-fns/date-fns/pull/1453).\n\n## [2.4.0] - 2019-09-27\n\nThis release brought to you by these amazing people: [@lovelovedokidoki](https://github.com/lovelovedokidoki), [@alexigityan](https://github.com/alexigityan), [@kalekseev](https://github.com/kalekseev) and [@andybangs](https://github.com/andybangs). You rock!\n\n### Fixed\n\n- [Fixed Vietnamese parsing patterns](https://github.com/date-fns/date-fns/pull/1445).\n- [Fixed Czech parsing regexes](https://github.com/date-fns/date-fns/pull/1446).\n- [Fixed offset for Eastern Hemisphere in `parseISO`](https://github.com/date-fns/date-fns/pull/1450).\n\n### Added\n\n- [Added Armenian locale support](https://github.com/date-fns/date-fns/pull/1448).\n\n## [2.3.0] - 2019-09-24\n\nHuge thanks to [@lovelovedokidoki](https://github.com/lovelovedokidoki) who improved 8 (!) locales in an unstoppable open-source rampage and [@VesterDe](https://github.com/VesterDe) for fixing Slovenian locale 👏\n\n### Fixed\n\n- [Fixed the translation of \"yesterday\" in the Slovenian locale](https://github.com/date-fns/date-fns/pull/1420).\n- [Fixed French parsing issues with June and August](https://github.com/date-fns/date-fns/pull/1430).\n- [Improved Turkish parsing](https://github.com/date-fns/date-fns/pull/1432).\n- [Fixed \"March\" in Dutch parsing patterns](https://github.com/date-fns/date-fns/pull/1433).\n- [Fixed Hindi parsing patterns](https://github.com/date-fns/date-fns/pull/1434).\n\n### Added\n\n- [Added Finnish matching patterns](https://github.com/date-fns/date-fns/pull/1425).\n- [Accept abbreviated March, June, July in Norwegian locales](https://github.com/date-fns/date-fns/pull/1431).\n- [Added parsing for Greek months with long formatting](https://github.com/date-fns/date-fns/pull/1435).\n\n## [2.2.1] - 2019-09-12\n\nKudos to date-fns contributors: [@mzgajner](https://github.com/mzgajner), [@sibiraj-s](https://github.com/sibiraj-s), [@mukeshmandiwal](https://github.com/mukeshmandiwal), [@SneakyFish5](https://github.com/SneakyFish5) and [@CarterLi](https://github.com/CarterLi).\n\n### Added\n\n- [Added new `set` function](https://github.com/date-fns/date-fns/pull/1398).\n- [Updated Slovenian (sl) locale for v2](https://github.com/date-fns/date-fns/pull/1418).\n- [Added Tamil (ta) locale](https://github.com/date-fns/date-fns/pull/1411).\n- [Added Hindi (hi) locale](https://github.com/date-fns/date-fns/pull/1409).\n- [Added support of `\\n` in `format`, `lightFormat` and `parse`](https://github.com/date-fns/date-fns/pull/1417).\n\n## [2.1.0] - 2019-09-06\n\nThanks to date-fns contributors: [@ManadayM](https://github.com/ManadayM), [@illuminist](https://github.com/illuminist), [@visualfanatic](https://github.com/visualfanatic), [@vsaarinen](https://github.com/vsaarinen) and at least but not least [@leshakoss](https://github.com/leshakoss)!\n\n### Fixed\n\n- [Set start of the week to the Sunday for Thai locale](https://github.com/date-fns/date-fns/pull/1402).\n- [Fixed month matching in Polish locale](https://github.com/date-fns/date-fns/pull/1404).\n- [Fixed `eachWeekendOfInterval` skipping the first date in the supplied interval](https://github.com/date-fns/date-fns/pull/1407).\n\n### Added\n\n- [Added Gujarati locale](https://github.com/date-fns/date-fns/pull/1400).\n\n## [2.0.1] - 2019-08-23\n\n### Fixed\n\n- [Fix](https://github.com/date-fns/date-fns/pull/1046) `getWeekOfMonth` with `options.weekStartsOn` set to 1 [not working for Sundays](https://github.com/date-fns/date-fns/issues/1040). Kudos to [@waseemahmad31](https://github.com/waseemahmad31)!\n\n## [2.0.0] - 2019-08-20\n\nIf you're upgrading from v2 alpha or beta, [see the pre-release changelog](https://gist.github.com/kossnocorp/a307a464760b405bb78ef5020a4ab136).\n\n### Fixed\n\n- Fix the `toDate` bug occurring when parsing ISO-8601 style dates (but not valid ISO format)\n  with a trailing Z (e.g `2012-01Z`), it returned Invalid Date for FireFox/IE11 [#510](https://github.com/date-fns/date-fns/issue/510)\n\n- Fix `differenceIn...` functions returning negative zero in some cases:\n  [#692](https://github.com/date-fns/date-fns/issues/692)\n\n- `isDate` now works properly with dates passed across iframes [#754](https://github.com/date-fns/date-fns/pull/754).\n\n- Fix a few bugs that appear in timezones with offsets that include seconds (e.g. GMT+00:57:44).\n  See PR [#789](https://github.com/date-fns/date-fns/pull/789).\n\n- [Fixed DST issue](https://github.com/date-fns/date-fns/pull/1003). See [#972](https://github.com/date-fns/date-fns/issues/972) and [#992](https://github.com/date-fns/date-fns/issues/992) for more details.\n\n- Fixed DST issue in `eachDayOfInterval` that caused time in the days\n  after DST change to have the shift as well.\n\n- Fix bug in Galician locale caused by incorrect usage of `getHours`\n  instead of `getUTCHours`.\n\n### Changed\n\n- **BREAKING**: now functions don't accept string arguments, but only\n  numbers or dates. When a string is passed, it will result in\n  an unexpected result (`Invalid Date`, `NaN`, etc).\n\n  From now on a string should be parsed using `parseISO` (ISO 8601)\n  or `parse`.\n\n  In v1 we've used `new Date()` to parse strings, but it resulted in many\n  hard-to-track bugs caused by inconsistencies in different browsers.\n  To address that we've implemented our ISO 8601 parser but that made\n  library to significantly grow in size. To prevent inevitable bugs\n  and keep the library tiny, we made this trade-off.\n\n  See [this post](https://blog.date-fns.org/post/we-cut-date-fns-v2-minimal-build-size-down-to-300-bytes-and-now-its-the-smallest-date-library-18f2nvh2z0yal) for more details.\n\n  ```javascript\n  // Before v2.0.0\n  addDays('2016-01-01', 1)\n\n  // v2.0.0 onward\n  addDays(parseISO('2016-01-01'), 1)\n  ```\n\n- **BREAKING**: new format string API for `format` function\n  which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n  See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n\n  | Unit                            | v2 Pattern | v1 Pattern | Result examples                   |\n  | ------------------------------- | ---------- | ---------- | --------------------------------- |\n  | Era                             | G..GGG     |            | AD, BC                            |\n  |                                 | GGGG       |            | Anno Domini, Before Christ        |\n  |                                 | GGGGG      |            | A, B                              |\n  | Calendar year                   | y          |            | 44, 1, 1900, 2017                 |\n  |                                 | yo         |            | 44th, 1st, 0th, 17th              |\n  |                                 | yy         | YY         | 44, 01, 00, 17                    |\n  |                                 | yyy        |            | 044, 001, 1900, 2017              |\n  |                                 | yyyy       | YYYY       | 0044, 0001, 1900, 2017            |\n  |                                 | yyyyy      |            | ...                               |\n  | Local week-numbering year       | Y          |            | 44, 1, 1900, 2017                 |\n  |                                 | Yo         |            | 44th, 1st, 1900th, 2017th         |\n  |                                 | YY         |            | 44, 01, 00, 17                    |\n  |                                 | YYY        |            | 044, 001, 1900, 2017              |\n  |                                 | YYYY       |            | 0044, 0001, 1900, 2017            |\n  |                                 | YYYYY      |            | ...                               |\n  | ISO week-numbering year         | R          |            | -43, 0, 1, 1900, 2017             |\n  |                                 | RR         | GG         | -43, 00, 01, 1900, 2017           |\n  |                                 | RRR        |            | -043, 000, 001, 1900, 2017        |\n  |                                 | RRRR       | GGGG       | -0043, 0000, 0001, 1900, 2017     |\n  |                                 | RRRRR      |            | ...                               |\n  | Extended year                   | u          |            | -43, 0, 1, 1900, 2017             |\n  |                                 | uu         |            | -43, 01, 1900, 2017               |\n  |                                 | uuu        |            | -043, 001, 1900, 2017             |\n  |                                 | uuuu       |            | -0043, 0001, 1900, 2017           |\n  |                                 | uuuuu      |            | ...                               |\n  | Quarter (formatting)            | Q          |            | 1, 2, 3, 4                        |\n  |                                 | Qo         |            | 1st, 2nd, 3rd, 4th                |\n  |                                 | QQ         |            | 01, 02, 03, 04                    |\n  |                                 | QQQ        |            | Q1, Q2, Q3, Q4                    |\n  |                                 | QQQQ       |            | 1st quarter, 2nd quarter, ...     |\n  |                                 | QQQQQ      |            | 1, 2, 3, 4                        |\n  | Quarter (stand-alone)           | q          | Q          | 1, 2, 3, 4                        |\n  |                                 | qo         | Qo         | 1st, 2nd, 3rd, 4th                |\n  |                                 | qq         |            | 01, 02, 03, 04                    |\n  |                                 | qqq        |            | Q1, Q2, Q3, Q4                    |\n  |                                 | qqqq       |            | 1st quarter, 2nd quarter, ...     |\n  |                                 | qqqqq      |            | 1, 2, 3, 4                        |\n  | Month (formatting)              | M          |            | 1, 2, ..., 12                     |\n  |                                 | Mo         |            | 1st, 2nd, ..., 12th               |\n  |                                 | MM         |            | 01, 02, ..., 12                   |\n  |                                 | MMM        |            | Jan, Feb, ..., Dec                |\n  |                                 | MMMM       |            | January, February, ..., December  |\n  |                                 | MMMMM      |            | J, F, ..., D                      |\n  | Month (stand-alone)             | L          | M          | 1, 2, ..., 12                     |\n  |                                 | Lo         |            | 1st, 2nd, ..., 12th               |\n  |                                 | LL         | MM         | 01, 02, ..., 12                   |\n  |                                 | LLL        | MMM        | Jan, Feb, ..., Dec                |\n  |                                 | LLLL       | MMMM       | January, February, ..., December  |\n  |                                 | LLLLL      |            | J, F, ..., D                      |\n  | Local week of year              | w          |            | 1, 2, ..., 53                     |\n  |                                 | wo         |            | 1st, 2nd, ..., 53th               |\n  |                                 | ww         |            | 01, 02, ..., 53                   |\n  | ISO week of year                | I          | W          | 1, 2, ..., 53                     |\n  |                                 | Io         | Wo         | 1st, 2nd, ..., 53th               |\n  |                                 | II         | WW         | 01, 02, ..., 53                   |\n  | Day of month                    | d          | D          | 1, 2, ..., 31                     |\n  |                                 | do         | Do         | 1st, 2nd, ..., 31st               |\n  |                                 | dd         | DD         | 01, 02, ..., 31                   |\n  | Day of year                     | D          | DDD        | 1, 2, ..., 365, 366               |\n  |                                 | Do         | DDDo       | 1st, 2nd, ..., 365th, 366th       |\n  |                                 | DD         |            | 01, 02, ..., 365, 366             |\n  |                                 | DDD        | DDDD       | 001, 002, ..., 365, 366           |\n  |                                 | DDDD       |            | ...                               |\n  | Day of week (formatting)        | E..EEE     |            | Mon, Tue, Wed, ..., Su            |\n  |                                 | EEEE       |            | Monday, Tuesday, ..., Sunday      |\n  |                                 | EEEEE      |            | M, T, W, T, F, S, S               |\n  |                                 | EEEEEE     |            | Mo, Tu, We, Th, Fr, Su, Sa        |\n  | ISO day of week (formatting)    | i          | E          | 1, 2, 3, ..., 7                   |\n  |                                 | io         | do         | 1st, 2nd, ..., 7th                |\n  |                                 | ii         |            | 01, 02, ..., 07                   |\n  |                                 | iii        | ddd        | Mon, Tue, Wed, ..., Su            |\n  |                                 | iiii       | dddd       | Monday, Tuesday, ..., Sunday      |\n  |                                 | iiiii      |            | M, T, W, T, F, S, S               |\n  |                                 | iiiiii     | dd         | Mo, Tu, We, Th, Fr, Su, Sa        |\n  | Local day of week (formatting)  | e          |            | 2, 3, 4, ..., 1                   |\n  |                                 | eo         |            | 2nd, 3rd, ..., 1st                |\n  |                                 | ee         |            | 02, 03, ..., 01                   |\n  |                                 | eee        |            | Mon, Tue, Wed, ..., Su            |\n  |                                 | eeee       |            | Monday, Tuesday, ..., Sunday      |\n  |                                 | eeeee      |            | M, T, W, T, F, S, S               |\n  |                                 | eeeeee     |            | Mo, Tu, We, Th, Fr, Su, Sa        |\n  | Local day of week (stand-alone) | c          |            | 2, 3, 4, ..., 1                   |\n  |                                 | co         |            | 2nd, 3rd, ..., 1st                |\n  |                                 | cc         |            | 02, 03, ..., 01                   |\n  |                                 | ccc        |            | Mon, Tue, Wed, ..., Su            |\n  |                                 | cccc       |            | Monday, Tuesday, ..., Sunday      |\n  |                                 | ccccc      |            | M, T, W, T, F, S, S               |\n  |                                 | cccccc     |            | Mo, Tu, We, Th, Fr, Su, Sa        |\n  | AM, PM                          | a..aaa     | A          | AM, PM                            |\n  |                                 | aaaa       | aa         | a.m., p.m.                        |\n  |                                 | aaaaa      |            | a, p                              |\n  | AM, PM, noon, midnight          | b..bbb     |            | AM, PM, noon, midnight            |\n  |                                 | bbbb       |            | a.m., p.m., noon, midnight        |\n  |                                 | bbbbb      |            | a, p, n, mi                       |\n  | Flexible day period             | B..BBB     |            | at night, in the morning, ...     |\n  |                                 | BBBB       |            | at night, in the morning, ...     |\n  |                                 | BBBBB      |            | at night, in the morning, ...     |\n  | Hour [1-12]                     | h          |            | 1, 2, ..., 11, 12                 |\n  |                                 | ho         |            | 1st, 2nd, ..., 11th, 12th         |\n  |                                 | hh         |            | 01, 02, ..., 11, 12               |\n  | Hour [0-23]                     | H          |            | 0, 1, 2, ..., 23                  |\n  |                                 | Ho         |            | 0th, 1st, 2nd, ..., 23rd          |\n  |                                 | HH         |            | 00, 01, 02, ..., 23               |\n  | Hour [0-11]                     | K          |            | 1, 2, ..., 11, 0                  |\n  |                                 | Ko         |            | 1st, 2nd, ..., 11th, 0th          |\n  |                                 | KK         |            | 1, 2, ..., 11, 0                  |\n  | Hour [1-24]                     | k          |            | 24, 1, 2, ..., 23                 |\n  |                                 | ko         |            | 24th, 1st, 2nd, ..., 23rd         |\n  |                                 | kk         |            | 24, 01, 02, ..., 23               |\n  | Minute                          | m          |            | 0, 1, ..., 59                     |\n  |                                 | mo         |            | 0th, 1st, ..., 59th               |\n  |                                 | mm         |            | 00, 01, ..., 59                   |\n  | Second                          | s          |            | 0, 1, ..., 59                     |\n  |                                 | so         |            | 0th, 1st, ..., 59th               |\n  |                                 | ss         |            | 00, 01, ..., 59                   |\n  | Fraction of second              | S          |            | 0, 1, ..., 9                      |\n  |                                 | SS         |            | 00, 01, ..., 99                   |\n  |                                 | SSS        |            | 000, 0001, ..., 999               |\n  |                                 | SSSS       |            | ...                               |\n  | Timezone (ISO-8601 w/ Z)        | X          |            | -08, +0530, Z                     |\n  |                                 | XX         |            | -0800, +0530, Z                   |\n  |                                 | XXX        |            | -08:00, +05:30, Z                 |\n  |                                 | XXXX       |            | -0800, +0530, Z, +123456          |\n  |                                 | XXXXX      |            | -08:00, +05:30, Z, +12:34:56      |\n  | Timezone (ISO-8601 w/o Z)       | x          |            | -08, +0530, +00                   |\n  |                                 | xx         | ZZ         | -0800, +0530, +0000               |\n  |                                 | xxx        | Z          | -08:00, +05:30, +00:00            |\n  |                                 | xxxx       |            | -0800, +0530, +0000, +123456      |\n  |                                 | xxxxx      |            | -08:00, +05:30, +00:00, +12:34:56 |\n  | Timezone (GMT)                  | O...OOO    |            | GMT-8, GMT+5:30, GMT+0            |\n  |                                 | OOOO       |            | GMT-08:00, GMT+05:30, GMT+00:00   |\n  | Timezone (specific non-locat.)  | z...zzz    |            | GMT-8, GMT+5:30, GMT+0            |\n  |                                 | zzzz       |            | GMT-08:00, GMT+05:30, GMT+00:00   |\n  | Seconds timestamp               | t          | X          | 512969520                         |\n  |                                 | tt         |            | ...                               |\n  | Milliseconds timestamp          | T          | x          | 512969520900                      |\n  |                                 | TT         |            | ...                               |\n  | Long localized date             | P          |            | 5/29/53                           |\n  |                                 | PP         |            | May 29, 1453                      |\n  |                                 | PPP        |            | May 29th, 1453                    |\n  |                                 | PPPP       |            | Sunday, May 29th, 1453            |\n  | Long localized time             | p          |            | 12:00 AM                          |\n  |                                 | pp         |            | 12:00:00 AM                       |\n  |                                 | ppp        |            | 12:00:00 AM GMT+2                 |\n  |                                 | pppp       |            | 12:00:00 AM GMT+02:00             |\n  | Combination of date and time    | Pp         |            | 5/29/53, 12:00 AM                 |\n  |                                 | PPpp       |            | May 29, 1453, 12:00 AM            |\n  |                                 | PPPppp     |            | May 29th, 1453 at ...             |\n  |                                 | PPPPpppp   |            | Sunday, May 29th, 1453 at ...     |\n\n  Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n  `format` now throws RangeError if it encounters an unescaped latin character\n  that isn't a valid formatting token.\n\n  To use `YY` and `YYYY` tokens that represent week-numbering years,\n  you should set `useAdditionalWeekYearTokens` option:\n\n  ```javascript\n  format(Date.now(), 'YY', { useAdditionalWeekYearTokens: true })\n  //=> '86'\n  ```\n\n  To use `D` and `DD` tokens which represent days of the year,\n  set `useAdditionalDayOfYearTokens` option:\n\n  ```javascript\n  format(Date.now(), 'D', { useAdditionalDayOfYearTokens: true })\n  //=> '364'\n  ```\n\n- **BREAKING**: function submodules now use camelCase naming schema:\n\n  ```javascript\n  // Before v2.0.0\n  import differenceInCalendarISOYears from 'date-fns/difference_in_calendar_iso_years'\n\n  // v2.0.0 onward\n  import differenceInCalendarISOYears from 'date-fns/differenceInCalendarISOYears'\n  ```\n\n- **BREAKING**: min and max functions now accept an array of dates\n  rather than spread arguments.\n\n  ```javascript\n  // Before v2.0.0\n  var date1 = new Date(1989, 6 /* Jul */, 10)\n  var date2 = new Date(1987, 1 /* Feb */, 11)\n\n  var minDate = min(date1, date2)\n  var maxDate = max(date1, date2)\n\n  // v2.0.0 onward:\n  var dates = [new Date(1989, 6 /* Jul */, 10), new Date(1987, 1 /* Feb */, 11)]\n\n  var minDate = min(dates)\n  var maxDate = max(dates)\n  ```\n\n- **BREAKING**: make the second argument of `format` required for the sake of explicitness.\n\n  ```javascript\n  // Before v2.0.0\n  format(new Date(2016, 0, 1))\n\n  // v2.0.0 onward\n  format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n  ```\n\n- **BREAKING** renamed ISO week-numbering year helpers:\n\n  - `addISOYears` → `addISOWeekYears`\n  - `differenceInCalendarISOYears` → `differenceInCalendarISOWeekYears`\n  - `differenceInISOYears` → `differenceInISOWeekYears`\n  - `endOfISOYear` → `endOfISOWeekYear`\n  - `getISOYear` → `getISOWeekYear`\n  - `isSameISOYear` → `isSameISOWeekYear`\n  - `lastDayOfISOYear` → `lastDayOfISOWeekYear`\n  - `setISOYear` → `setISOWeekYear`\n  - `subISOYears` → `subISOWeekYears`\n\n  i.e. \"ISO year\" renamed to \"ISO week year\", which is short for\n  [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  It makes them consistent with locale-dependent week-numbering year helpers,\n  e.g., `startOfWeekYear`.\n\n- **BREAKING**: functions renamed:\n\n  - `areRangesOverlapping` → `areIntervalsOverlapping`\n  - `eachDay` → `eachDayOfInterval`\n  - `getOverlappingDaysInRanges` → `getOverlappingDaysInIntervals`\n  - `isWithinRange` → `isWithinInterval`\n\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also these functions now accept an object with `start` and `end` properties\n  instead of two arguments as an interval. All these functions\n  throw `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  areRangesOverlapping(\n    new Date(2014, 0, 10),\n    new Date(2014, 0, 20),\n    new Date(2014, 0, 17),\n    new Date(2014, 0, 21)\n  )\n\n  eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n\n  getOverlappingDaysInRanges(\n    new Date(2014, 0, 10),\n    new Date(2014, 0, 20),\n    new Date(2014, 0, 17),\n    new Date(2014, 0, 21)\n  )\n\n  isWithinRange(\n    new Date(2014, 0, 3),\n    new Date(2014, 0, 1),\n    new Date(2014, 0, 7)\n  )\n\n  // v2.0.0 onward\n\n  areIntervalsOverlapping(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n\n  eachDayOfInterval({\n    start: new Date(2014, 0, 10),\n    end: new Date(2014, 0, 20)\n  })\n\n  getOverlappingDaysInIntervals(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n\n  isWithinInterval(new Date(2014, 0, 3), {\n    start: new Date(2014, 0, 1),\n    end: new Date(2014, 0, 7)\n  })\n  ```\n\n- **BREAKING**: functions renamed:\n\n  - `distanceInWords` → `formatDistance`\n  - `distanceInWordsStrict` → `formatDistanceStrict`\n  - `distanceInWordsToNow` → `formatDistanceToNow`\n\n  to make them consistent with `format` and `formatRelative`.\n\n- **BREAKING**: The order of arguments of `distanceInWords` and `distanceInWordsStrict`\n  is swapped to make them consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWords(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 11, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n\n  // v2.0.0 onward\n\n  formatDistance(\n    new Date(1986, 3, 4, 11, 32, 0),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n  ```\n\n- **BREAKING**: `partialMethod` option in `formatDistanceStrict` is renamed to `roundingMethod`.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { partialMethod: 'ceil' }\n  ) //=> '2 minutes'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { roundingMethod: 'ceil' }\n  ) //=> '2 minutes'\n  ```\n\n- **BREAKING**: in `formatDistanceStrict`, if `roundingMethod` is not specified,\n  it now defaults to `round` instead of `floor`.\n\n- **BREAKING**: `unit` option in `formatDistanceStrict` now accepts one of the strings:\n  'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { unit: 'm' }\n  )\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { unit: 'minute' }\n  )\n  ```\n\n- **BREAKING**: `parse` that previously used to convert strings and\n  numbers to dates now parse only strings in an arbitrary format\n  specified as an argument. Use `toDate` to coerce numbers and `parseISO`\n  to parse ISO 8601 strings.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n  parse(1547005581366)\n  parse(new Date()) // Clone the date\n\n  // v2.0.0 onward\n  parse('2016-01-01', 'yyyy-MM-dd', new Date())\n  parseISO('2016-01-01')\n  toDate(1547005581366)\n  toDate(new Date()) // Clone the date\n  ```\n\n- **BREAKING**: `toDate` (previously `parse`) now doesn't accept string\n  arguments but only numbers and dates. `toDate` called with an invalid\n  argument will return `Invalid Date`.\n\n- **BREAKING**: new locale format.\n  See [docs/Locale](https://date-fns.org/docs/Locale).\n  Locales renamed:\n\n  - `en` → `en-US`\n  - `zh_cn` → `zh-CN`\n  - `zh_tw` → `zh-TW`\n\n  ```javascript\n  // Before v2.0.0\n  import locale from 'date-fns/locale/zh_cn'\n\n  // v2.0.0 onward\n  import locale from 'date-fns/locale/zh-CN'\n  ```\n\n- **BREAKING**: now `closestTo` and `closestIndexTo` don't throw an exception\n  when the second argument is not an array, and return Invalid Date instead.\n\n- **BREAKING**: now `isValid` doesn't throw an exception\n  if the first argument is not an instance of Date.\n  Instead, argument is converted beforehand using `toDate`.\n\n  Examples:\n\n  | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n  | ------------------------- | ------------- | ------------- |\n  | `new Date()`              | `true`        | `true`        |\n  | `new Date('2016-01-01')`  | `true`        | `true`        |\n  | `new Date('')`            | `false`       | `false`       |\n  | `new Date(1488370835081)` | `true`        | `true`        |\n  | `new Date(NaN)`           | `false`       | `false`       |\n  | `'2016-01-01'`            | `TypeError`   | `false`       |\n  | `''`                      | `TypeError`   | `false`       |\n  | `1488370835081`           | `TypeError`   | `true`        |\n  | `NaN`                     | `TypeError`   | `false`       |\n\n  We introduce this change to make _date-fns_ consistent with ECMAScript behavior\n  that try to coerce arguments to the expected type\n  (which is also the case with other _date-fns_ functions).\n\n- **BREAKING**: functions now throw `RangeError` if optional values passed to `options`\n  are not `undefined` or have expected values.\n  This change is introduced for consistency with ECMAScript standard library which does the same.\n\n- **BREAKING**: `format`, `formatDistance` (previously `distanceInWords`) and\n  `formatDistanceStrict` (previously `distanceInWordsStrict`) now throw\n  `RangeError` if one the passed arguments is invalid. It reflects behavior of\n  `toISOString` and Intl API. See [#1032](https://github.com/date-fns/date-fns/pull/1032).\n\n- **BREAKING**: all functions now implicitly convert arguments by following rules:\n\n  |           | date         | number | string      | boolean |\n  | --------- | ------------ | ------ | ----------- | ------- |\n  | 0         | new Date(0)  | 0      | '0'         | false   |\n  | '0'       | Invalid Date | 0      | '0'         | false   |\n  | 1         | new Date(1)  | 1      | '1'         | true    |\n  | '1'       | Invalid Date | 1      | '1'         | true    |\n  | true      | Invalid Date | NaN    | 'true'      | true    |\n  | false     | Invalid Date | NaN    | 'false'     | false   |\n  | null      | Invalid Date | NaN    | 'null'      | false   |\n  | undefined | Invalid Date | NaN    | 'undefined' | false   |\n  | NaN       | Invalid Date | NaN    | 'NaN'       | false   |\n\n  Notes:\n\n  - as before, arguments expected to be `Date` are converted to `Date` using _date-fns'_ `toDate` function;\n  - arguments expected to be numbers are converted to integer numbers using our custom `toInteger` implementation\n    (see [#765](https://github.com/date-fns/date-fns/pull/765));\n  - arguments expected to be strings are converted to strings using JavaScript's `String` function;\n  - arguments expected to be booleans are converted to boolean using JavaScript's `Boolean` function.\n\n  `null` and `undefined` passed to optional arguments (i.e. properties of `options` argument)\n  are ignored as if no argument was passed.\n\n  If any resulting argument is invalid (i.e. `NaN` for numbers and `Invalid Date` for dates),\n  an invalid value will be returned:\n\n  - `false` for functions that return booleans (expect `isValid`);\n  - `Invalid Date` for functions that return dates;\n  - and `NaN` for functions that return numbers.\n\n  See tests and PRs [#460](https://github.com/date-fns/date-fns/pull/460) and\n  [#765](https://github.com/date-fns/date-fns/pull/765) for exact behavior.\n\n- **BREAKING**: all functions now check if the passed number of arguments is less\n  than the number of required arguments and throw `TypeError` exception if so.\n\n- **BREAKING**: all functions that accept numbers as arguments, now coerce\n  values using `Number()` and also round decimals. Positive decimals are\n  rounded using `Math.floor`, decimals less than zero are rounded using\n  `Math.ceil`.\n\n- **BREAKING**: The Bower & UMD/CDN package versions are no longer supported.\n\n- **BREAKING**: `null` now is not a valid date. `isValid(null)` returns `false`;\n  `toDate(null)` returns an invalid date. Since `toDate` is used internally\n  by all the functions, operations over `null` will also return an invalid date.\n  [See #537](https://github.com/date-fns/date-fns/issues/537) for the reasoning.\n\n- `toDate` (previously `parse`) and `isValid` functions now accept `any` type\n  as the first argument.\n\n- [Exclude `docs.json` from the npm package](https://github.com/date-fns/date-fns/pull/837). Kudos to [@hawkrives](https://github.com/hawkrives).\n\n### Added\n\n- FP functions like those in [lodash](https://github.com/lodash/lodash/wiki/FP-Guide),\n  that support [currying](https://en.wikipedia.org/wiki/Currying), and, as a consequence,\n  functional-style [function composing](https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba).\n\n  Functions with options (`format`, `parse`, etc.) have two FP counterparts:\n  one that has the options object as its first argument and one that hasn't.\n  The name of the former has `WithOptions` added to the end of its name.\n\n  In FP functions, the order of arguments is reversed.\n\n  See [FP Guide](docs/fp) for more information.\n\n  ```javascript\n  import addYears from 'date-fns/fp/addYears'\n  import formatWithOptions from 'date-fns/fp/formatWithOptions'\n  import eo from 'date-fns/locale/eo'\n\n  // If FP function has not received enough arguments, it returns another function\n  const addFiveYears = addYears(5)\n\n  // Several arguments can be curried at once\n  const dateToString = formatWithOptions({ locale: eo }, 'd MMMM yyyy')\n\n  const dates = [\n    new Date(2017, 0 /* Jan */, 1),\n    new Date(2017, 1 /* Feb */, 11),\n    new Date(2017, 6 /* Jul */, 2)\n  ]\n\n  const formattedDates = dates.map(date => dateToString(addFiveYears(date)))\n  //=> ['1 januaro 2022', '11 februaro 2022', '2 julio 2022']\n  ```\n\n- Added support for [ECMAScript Modules](http://www.ecma-international.org/ecma-262/6.0/#sec-modules).\n\n  It allows usage with bundlers that support tree-shaking,\n  like [rollup.js](http://rollupjs.org) and [webpack](https://webpack.js.org):\n\n  ```javascript\n  // Without tree-shaking:\n  import format from 'date-fns/format'\n  import parse from 'date-fns/parse'\n\n  // With tree-shaking:\n  import { format, parse } from 'date-fns'\n  ```\n\n  Also, ESM functions provide default export, they can be used with TypeScript\n  to import functions in more idiomatic way:\n\n  ```typescript\n  // Before\n  import * as format from 'date-fns/format'\n\n  // Now\n  import format from 'date-fns/format'\n  ```\n\n- `formatRelative` function. See [formatRelative](https://date-fns.org/docs/formatRelative)\n\n- Flow typings for `index.js`, `fp/index.js`, `locale/index.js`, and their ESM equivalents.\n  See PR [#558](https://github.com/date-fns/date-fns/pull/558)\n\n- New locale-dependent week-numbering year helpers:\n\n  - `getWeek`\n\n  - `getWeekYear`\n\n  - `setWeek`\n\n  - `setWeekYear`\n\n  - `startOfWeekYear`\n\n- Added `eachWeekOfInterval`, the weekly equivalent of `eachDayOfInterval`\n\n- [Added `getUnixTime` function](https://github.com/date-fns/date-fns/pull/870). Kudos to [@Kingwl](https://github.com/Kingwl).\n\n- [New decade helpers](https://github.com/date-fns/date-fns/pull/839). Thanks to [@y-nk](https://github.com/y-nk)!\n\n  - `getDecade`\n\n  - `startOfDecade`\n\n  - `endOfDecade`\n\n  - `lastDayOfDecade`\n\n- [New `roundToNearestMinutes` function](https://github.com/date-fns/date-fns/pull/928). Kudos to [@xkizer](https://github.com/xkizer).\n\n- Added new function `fromUnixTime`. Thansk to [@xkizer](https://github.com/xkizer).\n\n- New interval, month, and year helpers to fetch a list of all Saturdays and Sundays (weekends) for a given date interval. `eachWeekendOfInterval` is the handler function while the other two are wrapper functions. Kudos to [@laekettavong](https://github.com/laekettavong)!\n\n  - `eachWeekendOfInterval`\n\n  - `eachWeekendOfMonth`\n\n  - `eachWeekendOfYear`\n\n- Build-efficient `lightFormat` that only supports the popular subset of tokens. See [#1050](https://github.com/date-fns/date-fns/pull/1015).\n\n- `parseISO` function that parses ISO 8601 strings. See [#1023](https://github.com/date-fns/date-fns/pull/1023).\n\n- Add constants that can be imported directly from `date-fns` or the submodule `date-fns/constants`:\n\n  - `maxTime`\n\n  - `minTime`\n\n- New locales:\n\n  - [Norwegian Nynorsk locale (nn)](https://github.com/date-fns/date-fns/pull/1172)\n    by [@draperunner](https://github.com/draperunner).\n\n  - [Ukrainian locale (ua)](https://github.com/date-fns/date-fns/pull/532)\n    by [@korzhyk](https://github.com/korzhyk).\n\n  - [Vietnamese locale (vi)](https://github.com/date-fns/date-fns/pull/546)\n    by [@trongthanh](https://github.com/trongthanh).\n\n  - [Persian locale (fa-IR)](https://github.com/date-fns/date-fns/pull/1113)\n    by [@mort3za](https://github.com/mort3za).\n\n  - [Latvian locale (lv)](https://github.com/date-fns/date-fns/pull/1175)\n    by [@prudolfs](https://github.com/prudolfs).\n\n  - [Bengali locale (bb)](https://github.com/date-fns/date-fns/pull/845)\n    by [@nutboltu](https://github.com/nutboltu) and [@touhidrahman](https://github.com/touhidrahman).\n\n  - [Hungarian (hu) and Lithuanian (lt) locales](https://github.com/date-fns/date-fns/pull/864)\n    by [@izifortune](https://github.com/izifortune) and [pardoeryanair](https://github.com/pardoeryanair).\n\n  - [Canadian English locale (en-CA)](https://github.com/date-fns/date-fns/pull/688)\n    by [@markowsiak](https://github.com/markowsiak).\n\n  - [Great Britain English locale (en-GB)](https://github.com/date-fns/date-fns/pull/563)\n    by [@glintik](https://github.com/glintik).\n\n  - [Uighur locale (ug)](https://github.com/date-fns/date-fns/pull/1080)\n    by [@abduwaly](https://github.com/abduwaly).\n\n- [Add new function `differenceInBusinessDays`](https://github.com/date-fns/date-fns/pull/1194)\n  which calculates the difference in business days. Kudos to [@ThorrStevens](https://github.com/ThorrStevens)!\n\n- [Add new function `addBusinessDays`](https://github.com/date-fns/date-fns/pull/1154),\n  similar to `addDays` but ignoring weekends. Thanks to [@ThorrStevens](https://github.com/ThorrStevens)!\n\n## [1.30.1] - 2018-12-10\n\n### Fixed\n\n- [Fixed DST issue](https://github.com/date-fns/date-fns/pull/1005). See [#972](https://github.com/date-fns/date-fns/issues/972) and [#992](https://github.com/date-fns/date-fns/issues/992) for more details. This fix was backported from v2.\n\n- Fix a few bugs that appear in timezones with offsets that include seconds (e.g. GMT+00:57:44). See PR [#789](https://github.com/date-fns/date-fns/issues/789). This fix was backported from v2.\n\n- [Fix misspelled January in the Thai locale](https://github.com/date-fns/date-fns/pull/913). Thanks to [@ratchapol-an](https://github.com/ratchapol-an)!\n\n### Added\n\n- [Added Serbian locale](https://github.com/date-fns/date-fns/pull/717). Kudos to [@mawi12345](https://github.com/mawi12345)!\n\n- [Added Belarusian locale](https://github.com/date-fns/date-fns/pull/716). Kudos to [@mawi12345](https://github.com/mawi12345) again!\n\n### Changed\n\n- [Improve ja translation of distanceInWords](https://github.com/date-fns/date-fns/pull/880). Thanks to [@kudohamu](https://github.com/kudohamu)!\n\n## [1.30.0] - 2018-12-10\n\n⚠️ The release got failed.\n\n## [1.29.0] - 2017-10-11\n\n### Fixed\n\n- Fix Italian translations for `formatDistance`. ([see the issue: #550](https://github.com/date-fns/date-fns/issues/550); [see the PR: #552](https://github.com/date-fns/date-fns/pull/552))\n  Thanks to [@giofilo](https://github.com/giofilo)!\n\n### Added\n\n- [Hungarian locale (hu)](https://github.com/date-fns/date-fns/pull/503)\n  (thanks to László Horváth [@horvathlg](https://github.com/horvathlg))\n\n- [Slovenian locale (sl)](https://github.com/date-fns/date-fns/pull/505)\n  (thanks to Adam Stradovnik [@Neoglyph](https://github.com/Neoglyph))\n\n- Add `step` to `eachDay` function. Thanks to [@BDav24](https://github.com/BDav24).\n  See PR [#487](https://github.com/date-fns/date-fns/pull/487).\n\n## [1.28.5] - 2017-05-19\n\n### Fixed\n\n- Fix a.m./p.m. formatters in Chinese Simplified locale.\n  Thanks to [@fnlctrl](https://github.com/fnlctrl).\n  See PR [#486](https://github.com/date-fns/date-fns/pull/486)\n\n## [1.28.4] - 2017-04-26\n\n### Fixed\n\n- Fix accents on weekdays in the Italian locale.\n  See PR [#481](https://github.com/date-fns/date-fns/pull/481).\n  Thanks to [@albertorestifo](https://github.com/albertorestifo)\n\n- Fix typo in `ddd` format token in Spanish language locale.\n  Kudos to [@fjaguero](https://github.com/fjaguero).\n  See PR [#482](https://github.com/date-fns/date-fns/pull/482)\n\n## [1.28.3] - 2017-04-14\n\n### Fixed\n\n- Fix ordinal numbers for Danish language locale. Thanks to [@kgram](https://github.com/kgram).\n  See PR [#474](https://github.com/date-fns/date-fns/pull/474)\n\n## [1.28.2] - 2017-03-27\n\n### Fixed\n\n- Fix `dd` and `ddd` formatters in Polish language locale. Kudos to [@justrag](https://github.com/justrag).\n  See PR: [#467](https://github.com/date-fns/date-fns/pull/467)\n\n## [1.28.1] - 2017-03-19\n\n### Fixed\n\n- Fix DST border bug in `addMilliseconds`, `addSeconds`, `addMinutes`, `addHours`,\n  `subMilliseconds`, `subSeconds`, `subMinutes` and `subHours`.\n  See issue [#465](https://github.com/date-fns/date-fns/issues/465)\n\n- Minor fix for Indonesian locale. Thanks to [@bentinata](https://github.com/bentinata).\n  See PR: [#458](https://github.com/date-fns/date-fns/pull/458)\n\n## [1.28.0] - 2017-02-27\n\n### Added\n\n- [Romanian locale (ro)](https://github.com/date-fns/date-fns/pull/446)\n  (thanks to Sergiu Munteanu [@jsergiu](https://github.com/jsergiu))\n\n### Fixed\n\n- All functions now convert all their arguments to the respective types.\n  See PR: [#443](https://github.com/date-fns/date-fns/pull/443)\n\n- Fixes for ordinals (1er, 2, 3, …) in French locale.\n  Thanks to [@fbonzon](https://github.com/fbonzon).\n  See PR: [#449](https://github.com/date-fns/date-fns/pull/449)\n\n## [1.27.2] - 2017-02-01\n\n### Fixed\n\n- Various fixes for Dutch locale. See PR: [#416](https://github.com/date-fns/date-fns/pull/416).\n  Thanks to Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)\n\n## [1.27.1] - 2017-01-20\n\n### Fixed\n\n- Added generation of TypeScript locale sub-modules, allowing import of locales in TypeScript.\n\n## [1.27.0] - 2017-01-19\n\n### Added\n\n- [Macedonian locale (mk)](https://github.com/date-fns/date-fns/pull/398)\n  (thanks to Petar Vlahu [@vlahupetar](https://github.com/vlahupetar))\n\n## [1.26.0] - 2017-01-15\n\n### Added\n\n- `getTime`\n\n### Fixed\n\n- Various fixes for Japanese locale. See PR: [395](https://github.com/date-fns/date-fns/pull/395).\n  Thanks to Yamagishi Kazutoshi [@ykzts](https://github.com/ykzts)\n\n## [1.25.0] - 2017-01-11\n\n### Added\n\n- [Bulgarian locale (bg)](https://github.com/date-fns/date-fns/pull/357)\n  (thanks to Nikolay Stoynov [@arvigeus](https://github.com/arvigeus))\n\n- [Czech locale (cs)](https://github.com/date-fns/date-fns/pull/386)\n  (thanks to David Rus [@davidrus](https://github.com/davidrus))\n\n## [1.24.0] - 2017-01-06\n\n### Added\n\n- [Modern Standard Arabic locale (ar)](https://github.com/date-fns/date-fns/pull/367)\n  (thanks to Abdallah Hassan [@AbdallahAHO](https://github.com/AbdallahAHO))\n\n## [1.23.0] - 2017-01-05\n\n### Added\n\n- Auto generate TypeScript and flow typings from documentation on release.\n  Thanks to [@mattlewis92](https://github.com/mattlewis92).\n  See related PRs: [#355](https://github.com/date-fns/date-fns/pull/355),\n  [#370](https://github.com/date-fns/date-fns/pull/370)\n\n- [Croatian locale (hr)](https://github.com/date-fns/date-fns/pull/365)\n  (thanks to Matija Marohnić [@silvenon](https://github.com/silvenon))\n\n- [Thai locale (th)](https://github.com/date-fns/date-fns/pull/362)\n  (thanks to Athiwat Hirunworawongkun [@athivvat](https://github.com/athivvat))\n\n- [Finnish locale (fi)](https://github.com/date-fns/date-fns/pull/361)\n  (thanks to Pyry-Samuli Lahti [@Pyppe](https://github.com/Pyppe))\n\n## [1.22.0] - 2016-12-28\n\n### Added\n\n- [Icelandic locale (is)](https://github.com/date-fns/date-fns/pull/356)\n  (thanks to Derek Blank [@derekblank](https://github.com/derekblank))\n\n## [1.21.1] - 2016-12-18\n\n### Fixed\n\n- Fix `isBefore` and `isAfter` documentation mistakes.\n\n## [1.21.0] - 2016-12-16\n\n### Added\n\n- [Filipino locale (fil)](https://github.com/date-fns/date-fns/pull/339)\n  (thanks to Ian De La Cruz [@RIanDeLaCruz](https://github.com/RIanDeLaCruz))\n\n- [Danish locale (da)](https://github.com/date-fns/date-fns/pull/343)\n  (kudos to Anders B. Hansen [@Andersbiha](https://github.com/Andersbiha))\n\n## [1.20.1] - 2016-12-14\n\n### Fixed\n\n- Fix documentation for `getOverlappingDaysInRanges`.\n\n## [1.20.0] - 2016-12-13\n\n### Added\n\n- `areRangesOverlapping` and `getOverlappingDaysInRanges`\n  Thanks to Joanna T [@asia-t](https://github.com/asia-t).\n  See PR: [#331](https://github.com/date-fns/date-fns/pull/331)\n\n## [1.19.0] - 2016-12-13\n\n### Added\n\n- [Greek locale (el)](https://github.com/date-fns/date-fns/pull/334)\n  (kudos to Theodoros Orfanidis [@teoulas](https://github.com/teoulas))\n\n- [Slovak locale (sk)](https://github.com/date-fns/date-fns/pull/336)\n  (kudos to Marek Suscak [@mareksuscak](https://github.com/mareksuscak))\n\n- Add yarn support.\n  Thanks to Uladzimir Havenchyk [@havenchyk](https://github.com/havenchyk).\n  See PR: [#288](https://github.com/date-fns/date-fns/pull/288)\n\n## [1.18.0] - 2016-12-12\n\n### Added\n\n- [Turkish locale (tr)](https://github.com/date-fns/date-fns/pull/329)\n  (kudos to Alpcan Aydın [@alpcanaydin](https://github.com/alpcanaydin))\n\n- [Korean locale (ko)](https://github.com/date-fns/date-fns/pull/327)\n  (thanks to Hong Chulju [@angdev](https://github.com/angdev))\n\n### Fixed\n\n- `SS` and `SSS` formats in `format` are now correctly displayed with leading zeros.\n  Thanks to Paul Dijou [@pauldijou](https://github.com/pauldijou).\n  See PR: [#330](https://github.com/date-fns/date-fns/pull/330)\n\n## [1.17.0] - 2016-12-10\n\n### Added\n\n- [Polish locale (pl)](https://github.com/date-fns/date-fns/pull/294)\n  (thanks to Mateusz Derks [@ertrzyiks](https://github.com/ertrzyiks))\n\n- [Portuguese locale (pt)](https://github.com/date-fns/date-fns/pull/316)\n  (thanks to Dário Freire [@dfreire](https://github.com/dfreire))\n\n- [Swedish locale (sv)](https://github.com/date-fns/date-fns/pull/311)\n  (thanks to Johannes Ulén [@ejulen](https://github.com/ejulen))\n\n- [French locale (fr)](https://github.com/date-fns/date-fns/pull/281)\n  (thanks to Jean Dupouy [@izeau](https://github.com/izeau))\n\n- Performance tests. See PR: [#289](https://github.com/date-fns/date-fns/pull/289)\n\n### Fixed\n\n- Fix TypeScript and flow typings for `isValid`.\n  See PR: [#310](https://github.com/date-fns/date-fns/pull/310)\n\n- Fix incorrect locale tests that could potentially lead to `format` bugs.\n  Kudos to Mateusz Derks [@ertrzyiks](https://github.com/ertrzyiks).\n  See related PRs: [#312](https://github.com/date-fns/date-fns/pull/312),\n  [#320](https://github.com/date-fns/date-fns/pull/320)\n\n- Minor language fixes in the documentation.\n  Thanks to Vedad Šoše [@vedadsose](https://github.com/vedadsose) ([#314](https://github.com/date-fns/date-fns/pull/314))\n  and Asia [@asia-t](https://github.com/asia-t) ([#318](https://github.com/date-fns/date-fns/pull/318))\n\n### Changed\n\n- `format` now returns `String('Invalid Date')` if the passed date is invalid.\n  See PR: [#323](https://github.com/date-fns/date-fns/pull/323)\n\n- `distanceInWords`, `distanceInWordsToNow`, `distanceInWordsStrict` and `format` functions now\n  check if the passed locale is valid, and fallback to English locale otherwise.\n  See PR: [#321](https://github.com/date-fns/date-fns/pull/321)\n\n- _Internal_: use a loop instead of `Object.keys` in `buildFormattingTokensRegExp`\n  to improve compatibility with older browsers.\n  See PR: [#322](https://github.com/date-fns/date-fns/pull/322)\n\n## [1.16.0] - 2016-12-08\n\n### Added\n\n- [Italian locale (it)](https://github.com/date-fns/date-fns/pull/298)\n  (thanks to Alberto Restifo [@albertorestifo](https://github.com/albertorestifo))\n\n- For German `buildDistanceInWordsLocale`, add nominative case translations (for distances without a suffix).\n  Kudos to Asia [@asia-t](https://github.com/asia-t).\n  See related PR: [#295](https://github.com/date-fns/date-fns/pull/295)\n\n## [1.15.1] - 2016-12-07\n\n### Fixed\n\n- Fixed TypeScript imports from individual modules.\n  Thanks to [@mattlewis92](https://github.com/mattlewis92).\n  See related PR: [#287](https://github.com/date-fns/date-fns/pull/287)\n\n## [1.15.0] - 2016-12-07\n\n### Added\n\n- [Indonesian locale (id)](https://github.com/date-fns/date-fns/pull/299)\n  (thanks to Rahmat Budiharso [@rbudiharso](https://github.com/rbudiharso))\n\n- [Catalan locale (ca)](https://github.com/date-fns/date-fns/pull/300)\n  (thanks to Guillermo Grau [@guigrpa](https://github.com/guigrpa))\n\n### Fixed\n\n- Fix some inaccuracies in Spanish locale.\n  Kudos to [@guigrpa](https://github.com/guigrpa).\n  See related PR: [#302](https://github.com/date-fns/date-fns/pull/302)\n\n## [1.14.1] - 2016-12-06\n\n### Fixed\n\n- Fixed broken test for Norwegian Bokmål locale.\n\n## [1.14.0] - 2016-12-06\n\n### Added\n\n- [Norwegian Bokmål locale (nb)](https://github.com/date-fns/date-fns/pull/291)\n  (thanks to Hans-Kristian Koren [@Hanse](https://github.com/Hanse))\n\n## [1.13.0] - 2016-12-06\n\n### Added\n\n- [Chinese Traditional locale (zh_tw)](https://github.com/date-fns/date-fns/pull/283)\n  (thanks to tonypai [@tpai](https://github.com/tpai)).\n\n- [Dutch language locale (nl)](https://github.com/date-fns/date-fns/pull/278)\n  (kudos to Jorik Tangelder [@jtangelder](https://github.com/jtangelder))\n\n## [1.12.1] - 2016-12-05\n\n### Fixed\n\n- Added `distanceInWordsStrict` to the list of supported functions in I18n doc.\n\n## [1.12.0] - 2016-12-05\n\n### Added\n\n- [Spanish language locale (es)](https://github.com/date-fns/date-fns/pull/269)\n  (thanks to Juan Angosto [@juanangosto](https://github.com/juanangosto)).\n\n### Fixed\n\n- Fix flow typings for some of the functions.\n  See PR: [#273](https://github.com/date-fns/date-fns/pull/273)\n\n## [1.11.2] - 2016-11-28\n\n### Fixed\n\n- Bug in `parse` when it sometimes parses ISO week-numbering dates incorrectly.\n  See PR: [#262](https://github.com/date-fns/date-fns/pull/262)\n\n- Bug in some functions which caused them to handle dates earlier than 100 AD incorrectly.\n  See PR: [#263](https://github.com/date-fns/date-fns/pull/263)\n\n## [1.11.1] - 2016-11-24\n\n### Fixed\n\n- Include TypeScript typings with npm package.\n\n## [1.11.0] - 2016-11-23\n\n### Added\n\n- `distanceInWordsStrict`.\n  Kudos to [@STRML](https://github.com/STRML).\n  See related PR: [#254](https://github.com/date-fns/date-fns/pull/254)\n\n- [TypeScript](https://www.typescriptlang.org/) typings for all functions.\n  Kudos to [@mattlewis92](https://github.com/mattlewis92).\n  See related PR: [#255](https://github.com/date-fns/date-fns/pull/255)\n\n## [1.10.0] - 2016-11-01\n\n### Added\n\n- `parse` now can parse dates that are ISO 8601 centuries (e.g., `19` and `+0019`).\n\n  ```javascript\n  var result = parse('19')\n  //=> Mon Jan 01 1900 00:00:00\n  ```\n\n- In `parse`, added ability to specify the number of additional digits\n  for extended year or century format (possible values are 0, 1 or 2; default is 2).\n\n  ```javascript\n  parse('+002016-11-01')\n  parse('+02016-11-01', { additionalDigits: 1 })\n  parse('+2016-11-01', { additionalDigits: 0 })\n  ```\n\n## [1.9.0] - 2016-10-25\n\n### Added\n\n- Got index.js imports to work with SystemJS.\n\n## [1.8.1] - 2016-10-24\n\n### Fixed\n\n- Added Japanese and German language locales to the list in I18n doc.\n\n## [1.8.0] - 2016-10-23\n\n### Added\n\n- [Japanese language locale (ja)](https://github.com/date-fns/date-fns/pull/241)\n  (thanks to Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu) again!)\n\n- `getISODay`\n\n- `setISODay`\n\n## [1.7.0] - 2016-10-20\n\n### Added\n\n- [German language locale (de)](https://github.com/date-fns/date-fns/pull/237)\n  (thanks to Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)).\n\n## [1.6.0] - 2016-10-16\n\n### Added\n\n- [Chinese Simplified locale (zh_cn)](https://github.com/date-fns/date-fns/pull/235)\n  (kudos to Changyu [@KingMario](https://github.com/KingMario) Geng).\n\n## [1.5.2] - 2016-10-13\n\n### Fixed\n\n- Incorrectly generated docs for `format`.\n\n- Fixed typo in I18n doc.\n\n## [1.5.1] - 2016-10-12\n\n### Fixed\n\n- A change log entry for [1.5.0] is added.\n\n## [1.5.0] - 2016-10-12\n\n### Added\n\n- [The initial I18n support](https://date-fns.org/docs/I18n)\n\n## [1.4.0] - 2016-10-09\n\n### Added\n\n- Basic [SystemJS](https://github.com/systemjs/systemjs) support.\n\n### Fixed\n\n- Fix incorrect behaviour of `YYYY` and `YY` for years prior to 1000:\n  now `format(new Date('0001-01-01'), 'YYYY-MM-DD')` returns `0001-01-01`\n  instead of `1-01-01`.\n\n## [1.3.0] - 2016-05-26\n\n### Added\n\n- `closestIndexTo`\n\n## [1.2.0] - 2016-05-23\n\n### Added\n\n- Add an ability to pass negative numbers to `setDay`.\n\n## [1.1.1] - 2016-05-19\n\n### Fixed\n\n- Fix [Flow](http://flowtype.org/) declarations for some of the functions.\n\n## [1.1.0] - 2016-05-19\n\n### Added\n\n- [Flow](http://flowtype.org/) declarations for each function\n  in [the \".js.flow\" style](http://flowtype.org/docs/declarations.html#declaration-files).\n  Kudos to [@JohnyDays](https://github.com/JohnyDays). See related PRs:\n\n  - [#205](https://github.com/date-fns/date-fns/pull/205)\n\n  - [#207](https://github.com/date-fns/date-fns/pull/207)\n\n## [1.0.0] - 2016-05-18\n\n### Fixed\n\n- `format` now returns the correct result for key `E`.\n\n- Prevent `startOf...`, `endOf...` and `lastDayOf...` functions\n  to return dates with an incorrect time when the date is modifying\n  into another time zone.\n\n- `parse` now parses years from 1 AD to 99 AD correctly.\n\n- Fix a bug in `getISOWeek` appearing because of a changing time zone\n  (e.g., when the given date is in DST and the start of the ISO year is not).\n\n### Changed\n\n- **BREAKING**: all functions are moved to the root of the library, so they\n  are now accessible with `require('date-fns/name_of_function')` or\n  `import nameOfFunction from 'date-fns/name_of_function'`.\n\n  ```javascript\n  // Before v1.0.0\n  var addMonths = require('date-fns/src/add_months')\n\n  // v1.0.0 onward\n  var addMonths = require('date-fns/add_months')\n  ```\n\n- **BREAKING**: functions that had the last optional argument `weekStartsAt`\n  (i.e. `endOfWeek`, `isSameWeek`, `lastDayOfWeek`, `setDay`, `startOfWeek`)\n  now instead receive the object `options` with the property `options.weekStartsOn`\n  as the last argument.\n\n  ```javascript\n  // Before v1.0.0\n  var result = endOfWeek(new Date(2014, 8, 2), 1)\n\n  // v1.0.0 onward\n  var result = endOfWeek(new Date(2014, 8, 2), { weekStartsOn: 1 })\n  ```\n\n- **BREAKING**: remove the function `getTimeSinceMidnight` that was used inside\n  the other functions.\n\n- **BREAKING**: `differenceInDays` now returns the number of full days instead\n  of calendar days.\n\n- **BREAKING**: `eachDay` and `isWithinRange` now throw an exception\n  when the given range boundaries are invalid.\n\n- Faster `isLeapYear`.\n\n- _Internal_: make the documentation more verbose.\n\n- _Internal_: convert the tests from Chai to power-assert allowing them\n  to run against IE8.\n\n### Added\n\n- `addISOYears`\n\n- `closestTo`\n\n- `differenceInCalendarDays`\n\n- `differenceInCalendarISOWeeks`\n\n- `differenceInCalendarISOYears`\n\n- `differenceInCalendarMonths`\n\n- `differenceInCalendarQuarters`\n\n- `differenceInCalendarWeeks`\n\n- `differenceInCalendarYears`\n\n- `differenceInHours`\n\n- `differenceInISOYears`\n\n- `differenceInMilliseconds`\n\n- `differenceInMinutes`\n\n- `differenceInMonths`\n\n- `differenceInQuarters`\n\n- `differenceInSeconds`\n\n- `differenceInWeeks`\n\n- `differenceInYears`\n\n- `distanceInWords`\n\n- `distanceInWordsToNow`\n\n- `endOfISOWeek`\n\n- `endOfISOYear`\n\n- `endOfToday`\n\n- `endOfTomorrow`\n\n- `endOfYesterday`\n\n- `getDaysInYear`\n\n- `isDate`\n\n- `isFriday`\n\n- `isMonday`\n\n- `isSameISOWeek`\n\n- `isSameISOYear`\n\n- `isSaturday`\n\n- `isSunday`\n\n- `isThisHour`\n\n- `isThisISOWeek`\n\n- `isThisISOYear`\n\n- `isThisMinute`\n\n- `isThisMonth`\n\n- `isThisQuarter`\n\n- `isThisSecond`\n\n- `isThisWeek`\n\n- `isThisYear`\n\n- `isThursday`\n\n- `isTomorrow`\n\n- `isTuesday`\n\n- `isValid`\n\n- `isWednesday`\n\n- `isYesterday`\n\n- `lastDayOfISOWeek`\n\n- `lastDayOfISOYear`\n\n- `startOfISOWeek`\n\n- `startOfToday`\n\n- `startOfTomorrow`\n\n- `startOfYesterday`\n\n- `subISOYears`\n\n- Add `Qo`, `W`, `Wo`, `WW`, `GG`, `GGGG`, `Z`, `ZZ`, `X`, `x` keys to `format`.\n\n## [0.17.0] - 2015-09-29\n\n### Fixed\n\n- Fix a lot of bugs appearing when date is modifying into other time zone\n  (e.g., when adding months and original date is in DST but new date is not).\n\n- Prevent instances of Date to lose milliseconds value when passed to.\n  `parse` in IE10.\n\n### Changed\n\n- `setISOWeek` now keeps time from original date.\n\n- _Internal_: reuse `getDaysInMonth` inside of `addMonths`.\n\n### Added\n\n- `differenceInDays`\n\n- `getTimeSinceMidnight`\n\n- `format` now has new format key `aa`, which returns `a.m.`/`p.m.`\n  as opposed to `a` that returns `am`/`pm`.\n\n- Complete UMD package (for Bower and CDN).\n\n## [0.16.0] - 2015-09-01\n\n### Changed\n\n- Use `parse` to clean date arguments in all functions.\n\n- `parse` now fallbacks to `new Date` when the argument\n  is not an ISO formatted date.\n\n- _Internal_: reuse `getDaysInMonth` inside of `setMonth`.\n\n### Added\n\n- `addQuarters`\n\n- `addWeeks`\n\n- `endOfQuarter`\n\n- `getDate`\n\n- `getDay`\n\n- `getDaysInMonth`\n\n- `getHours`\n\n- `getISOWeeksInYear`\n\n- `getMilliseconds`\n\n- `getMinutes`\n\n- `getMonth`\n\n- `getSeconds`\n\n- `getYear`\n\n- `isLeapYear`\n\n- `isSameHour`\n\n- `isSameMinute`\n\n- `isSameQuarter`\n\n- `isSameSecond`\n\n- `lastDayOfQuarter`\n\n- `lastDayOfWeek`\n\n- `max`\n\n- `min`\n\n- `setDate`\n\n- `setDay`\n\n- `setHours`\n\n- `setMilliseconds`\n\n- `setMinutes`\n\n- `setSeconds`\n\n- `startOfQuarter`\n\n- `subQuarters`\n\n- `subWeeks`\n\n## [0.15.0] - 2015-08-26\n\n### Changed\n\n- `format` now returns `a.m.`/`p.m.` instead of `am`/`pm`.\n\n- `setMonth` now sets last day of month if original date was last day\n  of longer month.\n\n- _Internal_: Fix code style according to ESLint.\n\n- _Internal_: Make tests run through all time zones.\n\n### Added\n\n- `getQuarter`\n\n- `setQuarter`\n\n- `getDayOfYear`\n\n- `setDayOfYear`\n\n- `isPast`\n\n- `addSeconds`\n\n- `subSeconds`\n\n- `startOfSecond`\n\n- `endOfSecond`\n\n- `startOfMinute`\n\n- `endOfMinute`\n\n- `addMilliseconds`\n\n- `subMilliseconds`\n\n- `endOfYear`\n\n- `addYears`\n\n- `subYears`\n\n- `lastDayOfYear`\n\n- `lastDayOfMonth`\n\n## [0.14.11] - 2015-08-21\n\n### Fixed\n\n- `format` now uses `parse` to avoid time zone bugs.\n\n### Changed\n\n- `setIsoWeek` now sets time to the start of the day.\n\n## [0.14.10] - 2015-07-29\n\n### Fixed\n\n- `format` now behaves correctly with 12:00 am.\n\n- `format` now behaves correctly with ordinal numbers.\n\n### Added\n\n- `compareAsc`\n\n- `compareDesc`\n\n- `addHours`\n\n- `subHours`\n\n- `isSameDay`\n\n- `parse`\n\n- `getISOYear`\n\n- `setISOYear`\n\n- `startOfISOYear`\n\n- `getISOWeek`\n\n- `setISOWeek`\n\n## [0.14.9] - 2015-01-14\n\n### Fixed\n\n- `addMonths` now correctly behaves with February\n  (see [#18](https://github.com/js-fns/date-fns/pull/18)).\n\n## [0.14.8] - 2014-12-25\n\n### Fixed\n\n- `format` function now behaves correctly with `pm`/`am`.\n\n## [0.14.6] - 2014-12-04\n\n### Fixed\n\n- Fix broken Bower support.\n\n## [0.14.0] - 2014-11-05\n\n### Added\n\n- Bower package.\n\n## [0.13.0] - 2014-10-22\n\n### Added\n\n- `addMinutes`\n\n- `subMinutes`\n\n- `isEqual`\n\n- `isBefore`\n\n- `isAfter`\n\n## [0.12.1] - 2014-10-19\n\n### Fixed\n\n- Incorrect rounding in `DDD` formatter.\n\n## [0.12.0] - 2014-10-15\n\n### Added\n\n- `isSameYear`\n\n## [0.11.0] - 2014-10-15\n\n### Added\n\n- `isWithinRange`\n\n## [0.10.0] - 2014-10-13\n\n### Added\n\n- `format`\n\n- `startOfYear`\n\n## [0.9.0] - 2014-10-10\n\n### Changed\n\n- _Internal_: simplify `isWeekend`\n\n### Added\n\n- `isFuture`\n\n## [0.8.0] - 2014-10-09\n\n### Changed\n\n- _Internal_: reuse `addDays` inside of `subDays`.\n\n### Added\n\n- `addMonths`\n\n- `subMonths`\n\n- `setMonth`\n\n- `setYear`\n\n## [0.7.0] - 2014-10-08\n\n### Added\n\n- `isSameWeek`\n\n## [0.6.0] - 2014-10-07\n\n### Fixed\n\n- Inconsistent behavior of `endOfMonth`.\n\n### Added\n\n- `isFirstDayOfMonth`\n\n- `isLastDayOfMonth`\n\n- `isSameMonth`\n\n## [0.5.0] - 2014-10-07\n\n### Added\n\n- `addDays`\n\n- `subDays`\n\n## [0.4.0] - 2014-10-07\n\n### Added\n\n- `startOfWeek`\n\n- `endOfWeek`\n\n- `eachDay`\n\n## [0.3.0] - 2014-10-06\n\n### Changed\n\n- `startOfDay` now sets milliseconds as well.\n\n### Added\n\n- `endOfDay`\n\n- `startOfMonth`\n\n- `endOfMonth`\n\n## [0.2.0] - 2014-10-06\n\n### Added\n\n- `isToday`\n\n- `isWeekend`\n\n## 0.1.0 - 2014-10-06\n\n### Added\n\n- `startOfDay`\n\n[unreleased]: https://github.com/date-fns/date-fns/compare/v2.14.0...HEAD\n[2.14.0]: https://github.com/date-fns/date-fns/compare/v2.13.0...v2.14.0\n[2.13.0]: https://github.com/date-fns/date-fns/compare/v2.12.0...v2.13.0\n[2.12.0]: https://github.com/date-fns/date-fns/compare/v2.11.1...v2.12.0\n[2.11.1]: https://github.com/date-fns/date-fns/compare/v2.11.0...v2.11.1\n[2.11.0]: https://github.com/date-fns/date-fns/compare/v2.10.0...v2.11.0\n[2.10.0]: https://github.com/date-fns/date-fns/compare/v2.9.0...v2.10.0\n[2.9.0]: https://github.com/date-fns/date-fns/compare/v2.8.1...v2.9.0\n[2.8.1]: https://github.com/date-fns/date-fns/compare/v2.8.0...v2.8.1\n[2.8.0]: https://github.com/date-fns/date-fns/compare/v2.7.0...v2.8.0\n[2.7.0]: https://github.com/date-fns/date-fns/compare/v2.6.0...v2.7.0\n[2.6.0]: https://github.com/date-fns/date-fns/compare/v2.5.1...v2.6.0\n[2.5.1]: https://github.com/date-fns/date-fns/compare/v2.5.0...v2.5.1\n[2.5.0]: https://github.com/date-fns/date-fns/compare/v2.4.1...v2.5.0\n[2.4.1]: https://github.com/date-fns/date-fns/compare/v2.4.0...v2.4.1\n[2.4.0]: https://github.com/date-fns/date-fns/compare/v2.3.0...v2.4.0\n[2.3.0]: https://github.com/date-fns/date-fns/compare/v2.2.1...v2.3.0\n[2.2.1]: https://github.com/date-fns/date-fns/compare/v2.1.0...v2.2.1\n[2.1.0]: https://github.com/date-fns/date-fns/compare/v2.0.1...v2.1.0\n[2.0.1]: https://github.com/date-fns/date-fns/compare/v2.0.0...v2.0.1\n[2.0.0]: https://github.com/date-fns/date-fns/compare/v1.28.5...v2.0.0\n[1.28.5]: https://github.com/date-fns/date-fns/compare/v1.28.4...v1.28.5\n[1.28.4]: https://github.com/date-fns/date-fns/compare/v1.28.3...v1.28.4\n[1.28.3]: https://github.com/date-fns/date-fns/compare/v1.28.2...v1.28.3\n[1.28.2]: https://github.com/date-fns/date-fns/compare/v1.28.1...v1.28.2\n[1.28.1]: https://github.com/date-fns/date-fns/compare/v1.28.0...v1.28.1\n[1.28.0]: https://github.com/date-fns/date-fns/compare/v1.27.2...v1.28.0\n[1.27.2]: https://github.com/date-fns/date-fns/compare/v1.27.1...v1.27.2\n[1.27.1]: https://github.com/date-fns/date-fns/compare/v1.27.0...v1.27.1\n[1.27.0]: https://github.com/date-fns/date-fns/compare/v1.26.0...v1.27.0\n[1.26.0]: https://github.com/date-fns/date-fns/compare/v1.25.0...v1.26.0\n[1.25.0]: https://github.com/date-fns/date-fns/compare/v1.24.0...v1.25.0\n[1.24.0]: https://github.com/date-fns/date-fns/compare/v1.23.0...v1.24.0\n[1.23.0]: https://github.com/date-fns/date-fns/compare/v1.22.0...v1.23.0\n[1.22.0]: https://github.com/date-fns/date-fns/compare/v1.21.1...v1.22.0\n[1.21.1]: https://github.com/date-fns/date-fns/compare/v1.21.0...v1.21.1\n[1.21.0]: https://github.com/date-fns/date-fns/compare/v1.20.1...v1.21.0\n[1.20.1]: https://github.com/date-fns/date-fns/compare/v1.20.0...v1.20.1\n[1.20.0]: https://github.com/date-fns/date-fns/compare/v1.19.0...v1.20.0\n[1.19.0]: https://github.com/date-fns/date-fns/compare/v1.18.0...v1.19.0\n[1.18.0]: https://github.com/date-fns/date-fns/compare/v1.17.0...v1.18.0\n[1.17.0]: https://github.com/date-fns/date-fns/compare/v1.16.0...v1.17.0\n[1.16.0]: https://github.com/date-fns/date-fns/compare/v1.15.1...v1.16.0\n[1.15.1]: https://github.com/date-fns/date-fns/compare/v1.15.0...v1.15.1\n[1.15.0]: https://github.com/date-fns/date-fns/compare/v1.14.1...v1.15.0\n[1.14.1]: https://github.com/date-fns/date-fns/compare/v1.14.0...v1.14.1\n[1.14.0]: https://github.com/date-fns/date-fns/compare/v1.13.0...v1.14.0\n[1.13.0]: https://github.com/date-fns/date-fns/compare/v1.12.1...v1.13.0\n[1.12.1]: https://github.com/date-fns/date-fns/compare/v1.12.0...v1.12.1\n[1.12.0]: https://github.com/date-fns/date-fns/compare/v1.11.2...v1.12.0\n[1.11.2]: https://github.com/date-fns/date-fns/compare/v1.11.1...v1.11.2\n[1.11.1]: https://github.com/date-fns/date-fns/compare/v1.11.0...v1.11.1\n[1.11.0]: https://github.com/date-fns/date-fns/compare/v1.10.0...v1.11.0\n[1.10.0]: https://github.com/date-fns/date-fns/compare/v1.9.0...v1.10.0\n[1.9.0]: https://github.com/date-fns/date-fns/compare/v1.8.1...v1.9.0\n[1.8.1]: https://github.com/date-fns/date-fns/compare/v1.8.0...v1.8.1\n[1.8.0]: https://github.com/date-fns/date-fns/compare/v1.7.0...v1.8.0\n[1.7.0]: https://github.com/date-fns/date-fns/compare/v1.6.0...v1.7.0\n[1.6.0]: https://github.com/date-fns/date-fns/compare/v1.5.2...v1.6.0\n[1.5.2]: https://github.com/date-fns/date-fns/compare/v1.5.1...v1.5.2\n[1.5.1]: https://github.com/date-fns/date-fns/compare/v1.5.0...v1.5.1\n[1.5.0]: https://github.com/date-fns/date-fns/compare/v1.4.0...v1.5.0\n[1.4.0]: https://github.com/date-fns/date-fns/compare/v1.3.0...v1.4.0\n[1.3.0]: https://github.com/date-fns/date-fns/compare/v1.2.0...v1.3.0\n[1.2.0]: https://github.com/date-fns/date-fns/compare/v1.1.1...v1.2.0\n[1.1.1]: https://github.com/date-fns/date-fns/compare/v1.1.0...v1.1.1\n[1.1.0]: https://github.com/date-fns/date-fns/compare/v1.0.0...v1.1.0\n[1.0.0]: https://github.com/date-fns/date-fns/compare/v0.17.0...v1.0.0\n[0.17.0]: https://github.com/date-fns/date-fns/compare/v0.16.0...v0.17.0\n[0.16.0]: https://github.com/date-fns/date-fns/compare/v0.15.0...v0.16.0\n[0.15.0]: https://github.com/date-fns/date-fns/compare/v0.14.11...v0.15.0\n[0.14.11]: https://github.com/date-fns/date-fns/compare/v0.14.10...v0.14.11\n[0.14.10]: https://github.com/date-fns/date-fns/compare/v0.14.9...v0.14.10\n[0.14.9]: https://github.com/date-fns/date-fns/compare/v0.14.8...v0.14.9\n[0.14.8]: https://github.com/date-fns/date-fns/compare/v0.14.6...v0.14.8\n[0.14.6]: https://github.com/date-fns/date-fns/compare/v0.14.0...v0.14.6\n[0.14.0]: https://github.com/date-fns/date-fns/compare/v0.13.0...v0.14.0\n[0.13.0]: https://github.com/date-fns/date-fns/compare/v0.12.1...v0.13.0\n[0.12.1]: https://github.com/date-fns/date-fns/compare/v0.12.0...v0.12.1\n[0.12.0]: https://github.com/date-fns/date-fns/compare/v0.11.0...v0.12.0\n[0.11.0]: https://github.com/date-fns/date-fns/compare/v0.10.0...v0.11.0\n[0.10.0]: https://github.com/date-fns/date-fns/compare/v0.9.0...v0.10.0\n[0.9.0]: https://github.com/date-fns/date-fns/compare/v0.8.0...v0.9.0\n[0.8.0]: https://github.com/date-fns/date-fns/compare/v0.7.0...v0.8.0\n[0.7.0]: https://github.com/date-fns/date-fns/compare/v0.6.0...v0.7.0\n[0.6.0]: https://github.com/date-fns/date-fns/compare/v0.5.0...v0.6.0\n[0.5.0]: https://github.com/date-fns/date-fns/compare/v0.4.0...v0.5.0\n[0.4.0]: https://github.com/date-fns/date-fns/compare/v0.3.0...v0.4.0\n[0.3.0]: https://github.com/date-fns/date-fns/compare/v0.2.0...v0.3.0\n[0.2.0]: https://github.com/date-fns/date-fns/compare/v0.1.0...v0.2.0\n","type":"markdown","urlId":"Change-Log","category":"General","title":"Change Log","description":"Changes for each version of the library","path":"/Users/jalal/Projects/date-fns/CHANGELOG.md"},{"content":"# Contributing Guide\n\n## Table of Contents\n\n- [How to Help?](#how-to-help)\n\n- [Contribution Guidelines](#contribution-guidelines)\n\n- [Getting Started](#getting-started)\n\n- [Testing](#testing)\n\n- [Before Sending a Pull Request](#before-sending-a-pull-request)\n\n- [Code Style Guide](#code-style-guide)\n\n  - [Lint the Code](#lint-the-code)\n\n  - [Use EditorConfig](#use-editorconfig)\n\n- [Documentation](#documentation)\n\n  - [JSDoc](#jsdoc)\n\n## How to Help?\n\nHelp is always welcome. There are areas where you can help:\n\n- The core functionality (performance improvements, bug fixes,\n  new features, etc.).\n\n- Documentation ([markdown documents](https://github.com/date-fns/date-fns/search?l=markdown),\n  inline JSDoc comments).\n\n- Test suite & development environment improvements.\n\n- The [website](https://github.com/date-fns/date-fns.org).\n\nIf you see a gap, but don't have time, experience, or you just need help\nwith the library, don't hesitate to [shoot an issue](https://github.com/date-fns/date-fns/issues/new).\n\nThe date-fns functionality is comprehensive and covers most of the use cases,\nhowever it doesn't have extended time zone support. Please leave a comment\nto the [Extended time zones support issue](https://github.com/date-fns/date-fns/issues/180)\nif you are interested in the functionality or want to help with development.\n\nIf you are interested in Elm/ClojureScript/etc. wrappers,\nplease [file an issue](https://github.com/date-fns/date-fns/issues/new).\n\n## Contribution Guidelines\n\nDue to the modular nature of date-fns, it's more than open to new features.\nHowever, when a new function duplicates the existing functionality, native API\nor causes significant build size increase, a PR might be rejected or\nthe author can be asked to move the code to a new or another package.\n\nPlease follow the main contributing rules, to maintain date-fns' top quality:\n\n- Follow style guides:\n\n  - [Lint the code](#lint-the-code).\n\n  - [Use EditorConfig](#use-editorconfig).\n\n- Write tests.\n\n- [Write documentation](#documentation).\n\n- Don't update the changelog.\n\n- Don't change the library version.\n\n## Getting Started\n\n1. Install [Node.js](https://nodejs.org/en/download) and [Yarn](https://yarnpkg.com/en/docs/install).\n\n2. Fork the project and clone the fork repo.\n\n3. Run `yarn` to install the application dependencies.\n\n## Testing\n\nRun all tests:\n\n```sh\nyarn test\n```\n\nRun tests once:\n\n```sh\nyarn test --single-run\n```\n\nTo test a function in REPL, use `babel-node` located in `./node_modules/.bin`:\n\n```sh\n./node_modules/.bin/babel-node\n\n> const toDate = require('./src/toDate')\nundefined\n> toDate(1392098430000).toString()\n'Tue Feb 11 2014 01:00:30 GMT-0500 (Eastern Standard Time)'\n>\n```\n\nBuild date-fns to test in in your project:\n\n```sh\nenv PACKAGE_OUTPUT_PATH=\"$(pwd)/../PATH-TO-YOUR-MODULE/node_modules/date-fns\" ./scripts/build/package.sh\n```\n\n## Before Sending a Pull Request\n\nRebuild FP functions, typings and indices by using the following script. It could take around a minute:\n\n```sh\n./scripts/build/build.sh\n```\n\n## Code Style Guide\n\n### Lint the Code\n\nThe project follows [Prettier] code style and uses [ESLint] as the linter.\nTo lint the code, run:\n\n```bash\nyarn lint\n```\n\n[prettier]: https://prettier.io/\n[eslint]: https://eslint.org/\n\n### Use EditorConfig\n\nThe project uses [EditorConfig] to define basic coding style guides.\nPlease install a plugin for your editor of choice or manually enforce\nthe rules listed in [.editorconfig].\n\n[editorconfig]: http://editorconfig.org\n[.editorconfig]: https://github.com/date-fns/date-fns.org/blob/master/.editorconfig\n\n## Documentation\n\n### JSDoc\n\n[JSDoc](http://usejsdoc.org) is used for the code documentation. Along with\nstandard JSDoc tags, date-fns uses `@category` tag that allows\nto group functions.\n\n[jsdoc-parse](https://github.com/jsdoc2md/jsdoc-parse) is used to parse\nJSDoc annotations.\n","type":"markdown","urlId":"Contributing","category":"General","title":"Contributing","description":"Contribution manual","path":"/Users/jalal/Projects/date-fns/CONTRIBUTING.md"},{"content":"# Constants\n\ndate-fns provides with a number of useful constants.\n\n## Usage\n\nThe constants could be imported from `date-fns/constants` or directly\nfrom `date-fns`:\n\n```js\nimport { maxTime } from 'date-fns/constants'\nimport { minTime } from 'date-fns'\n\nfunction isAllowedTime(time) {\n  return time <= maxTime && time >= minTime\n}\n```\n\n## Constants\n\n### `maxTime`\n\nMaximum allowed time:\n\n```js\nimport { maxTime } from 'date-fns'\n\nconst isValid = 8640000000000001 <= maxTime\n//=> false\n\nnew Date(8640000000000001)\n//=> Invalid Date\n```\n\n### `minTime`\n\nMinimum allowed time:\n\n```js\nimport { minTime } from 'date-fns'\n\nconst isValid = -8640000000000001 >= minTime\n//=> false\n\nnew Date(-8640000000000001)\n//=> Invalid Date\n```\n","type":"markdown","urlId":"Constants","category":"General","title":"Constants","description":"Useful constants","path":"/Users/jalal/Projects/date-fns/docs/constants.md"},{"content":"# Internationalization\n\n## Table of Contents\n\n- [Usage](#usage)\n\n- [Adding New Language](#adding-new-language)\n\n## Usage\n\nThere are just a few functions that support I18n:\n\n- [`format`](https://date-fns.org/docs/format)\n- [`formatDistance`](https://date-fns.org/docs/formatDistance)\n- [`formatDistanceStrict`](https://date-fns.org/docs/formatDistanceStrict)\n- [`formatRelative`](https://date-fns.org/docs/formatRelative)\n\nTo use a locale, you need to require it and then pass\nas an option to a function:\n\n```js\nimport { formatDistance } from 'date-fns'\n// Require Esperanto locale\nimport { eo } from 'date-fns/locale'\n\nconst result = formatDistance(\n  new Date(2016, 7, 1),\n  new Date(2015, 0, 1),\n  {locale: eo} // Pass the locale as an option\n)\n//=> 'pli ol 1 jaro'\n```\n\nIt might seem complicated to require and pass locales as options,\nbut unlike Moment.js which bloats your build with all the locales\nby default date-fns forces developer to manually require locales when needed.\nTo make API simple, we encourage you to write tiny wrappers and use those\ninstead of original functions:\n\n```js\n// app/_lib/format.js\n\nimport { format } from 'date-fns'\nimport { enGB, eo, ru } from 'date-fns/locale'\n\nconst locales = {enGB, eo, ru}\n\n// by providing a default string of 'PP' or any of its variants for `formatStr`\n// it will format dates in whichever way is appropriate to the locale\nexport default function (date, formatStr = 'PP') {\n  return format(date, formatStr, {\n    locale: locales[window.__localeId__] // or global.__localeId__\n  })\n}\n\n// Later:\n\nimport format from 'app/_lib/format'\n\nwindow.__localeId__ = 'en'\nformat(friday13, 'EEEE d')\n//=> 'Friday 13'\n\nwindow.__localeId__ = 'eo'\nformat(friday13, 'EEEE d')\n//=> 'vendredo 13'\n\n// If the format string is omitted, it will take the default for the locale.\nwindow.__localeId__ = 'en'\nformat(friday13)\n//=> Jul 13, 2019\n\nwindow.__localeId__ = 'eo'\nformat(friday13)\n//=> 2019-jul-13\n\n```\n\n## Adding New Language\n\nAt the moment there is no definitive guide, so if you feel brave enough,\nuse this quick guide:\n\n- First of all, [create an issue](https://github.com/date-fns/date-fns/issues/new?title=XXX%20language%20support)\n  so you won't overlap with others.\n- A detailed explanation of how to [add a new locale](https://github.com/date-fns/date-fns/blob/master/docs/i18nContributionGuide.md#adding-a-new-locale).\n- Use [English locale](https://github.com/date-fns/date-fns/tree/master/src/locale/en-US)\n  as the basis and then incrementally adjust the tests and the code.\n- Directions on [adding a locale with the same language as another locale](https://github.com/date-fns/date-fns/blob/master/docs/i18nContributionGuide.md#creating-a-locale-with-the-same-language-as-another-locale).\n- If you have questions or need guidance, leave a comment in the issue.\n\nThank you for your support!\n","type":"markdown","urlId":"I18n","category":"General","title":"I18n","description":"Internationalization","path":"/Users/jalal/Projects/date-fns/docs/i18n.md"},{"content":"# I18n Contribution Guide\n\n## Table of Contents\n\n- [Adding a new locale](#adding-a-new-locale)\n\n  - [Choosing a directory name for a locale](#choosing-a-directory-name-for-a-locale)\n\n  - [index.js](#index.js)\n\n  - [localize](#localize)\n\n    - [localize.ordinalNumber](#localize.ordinalnumber)\n\n    - [localize.era and using buildLocalizeFn function](#localize.era-and-using-buildlocalizefn-function)\n\n    - [Formatting localizers](#formatting-localizers)\n\n    - [localize.quarter](#localize.quarter)\n\n    - [localize.month](#localize.month)\n\n    - [localize.day](#localize.day)\n\n    - [localize.dayPeriod](#localize.dayperiod)\n\n  - [formatLong](#formatlong)\n\n    - [formatLong.dateFormats](#formatlong.dateformats)\n\n    - [formatLong.timeFormats](#formatlong.timeformats)\n\n    - [formatLong.dateTimeFormats](#formatlong.datetimeformats)\n\n  - [formatRelative](#formatrelative)\n\n  - [match](#match)\n\n  - [formatDistance](#formatdistance)\n\n  - [Tests](#tests)\n\n- [Creating a locale with the same language as another locale](#creating-a-locale-with-the-same-language-as-another-locale)\n\n## Adding a new locale\n\nTo add a new locale:\n\n- [Choose a directory name for it](#choosing-a-directory-name-for-a-locale).\n\n- Copy the content of an existing locale (e.g. `en-US`) into the newly created directory.\n\n- Replace the values in the content with yours file-by-file.\n  Use [CLDR data](https://www.unicode.org/cldr/charts/32/summary/root.html)\n  as a point of reference which values to choose.\n\nAll locales contain a number of properties:\n\n- [`formatDistance`](#formatdistance) — distance localizer function used by `formatDistance` and `formatDistanceStrict`.\n- [`formatLong`](#formatlong) — contains long date localizer functions used by `format` and `formatRelative`.\n- [`formatRelative`](#formatrelative) — relative date localizer function used by `formatRelative`.\n- [`localize`](#localize) — contains functions, which localize the various date values. Required by `format` and `formatRelative`.\n- [`match`](#match) — contains functions to parse date values. Required by `parse`.\n- [`options`](#indexjs) — contains the index of the first day of the week for functions such as `startOfWeek`,\n  and the value which determines the first week of the year\n  for functions like `setWeek`.\n\n### Choosing a directory name for a locale\n\nUse the four letter code for the directory name (e.g. `en-GB`),\n\nUse the two/three letter code:\n\n- if the language code and the country code are the same (e.g. `pt` instead of `pt-PT`).\n\n- if the language is used in only one country (e.g. `fil` instead of `fil-PH`).\n\n- if all countries who use the language\nalso use the same regional standards: the first day of the week,\nthe week numbering (see: https://en.wikipedia.org/wiki/Week#Week_numbering),\ncalendar date format (see: https://en.wikipedia.org/wiki/Calendar_date)\nand date representation (see: https://en.wikipedia.org/wiki/Date_and_time_representation_by_country\nand: https://en.wikipedia.org/wiki/Date_format_by_country)\n(e.g. `ca` instead of `ca-ES` and `ca-AD`).\n\n### index.js\n\nLocale's `index.js` is where all the properties of the locale are combined in a single file,\ndocumented in JSDoc format.\n\n```javascript\nimport formatDistance from './_lib/formatDistance/index.js'\nimport formatLong from './_lib/formatLong/index.js'\nimport formatRelative from './_lib/formatRelative/index.js'\nimport localize from './_lib/localize/index.js'\nimport match from './_lib/match/index.js'\n\n/**\n * @type {Locale}\n * @category Locales\n *\n * // Name of the locale.\n * // Inside the parentheses - name of the country - if the locale uses the four letter code, e.g. en-US, fr-CA or pt-BR.\n * @summary English locale (United States).\n *\n * // Name of the language (used by https://date-fns.org/ website)\n * @language English\n *\n * // ISO 639-2 code. See the list here:\n * // https://www.loc.gov/standards/iso639-2/php/code_list.php\n * // Used by https://date-fns.org/ to detect the list of the countries that uses the language.\n * @iso-639-2 eng\n *\n * // Authors of the locale (including anyone who corrected or fixed the locale)\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    // Index of the first day of the week.\n    // Sunday is 0, Monday is 1, Saturday is 6.\n    weekStartsOn: 0,\n\n    // Nth of January which is always in the first week of the year. See:\n    // https://en.wikipedia.org/wiki/Week#Week_numbering\n    // http://www.pjh2.de/datetime/weeknumber/wnd.php?l=en\n    firstWeekContainsDate: 1\n  }\n}\n\nexport default locale\n```\n\n### localize\n\nPut this object in `_lib/localize/index.js` inside your locale directory.\nContains a number of functions for used by `format`:\n\n```js\nvar localize = {\n  ordinalNumber,\n  era,\n  quarter,\n  month,\n  day,\n  dayPeriod\n}\n\nexport default localize\n```\n\n#### localize.ordinalNumber\n\nFunction that takes a numeric argument and returns a string with ordinal number:\n\n```js\n// In `en-US` locale:\nfunction ordinalNumber (dirtyNumber, dirtyOptions) {\n  var number = Number(dirtyNumber)\n\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  // ...\n}\n```\n\nIf the form of the ordinal number depends on the grammatical case (or other grammatical structures),\nuse `options.unit` argument which could be one of the values 'year', 'quarter', 'month', 'week',\n'date', 'dayOfYear', 'day', 'hour', 'minute' or 'second':\n\n```js\n// In `ru` locale:\nfunction ordinalNumber (dirtyNumber, dirtyOptions) {\n  var options = dirtyOptions || {}\n  var unit = String(options.unit)\n  var suffix\n\n  if (unit === 'date') {\n    suffix = '-е'\n  } else if (unit === 'week' || unit === 'minute' || unit === 'second') {\n    suffix = '-я'\n  } else {\n    suffix = '-й'\n  }\n\n  return dirtyNumber + suffix\n}\n```\n\n#### localize.era and using buildLocalizeFn function\n\nLocalizes a numeric era. Takes either 0 or 1 as the first argument.\nAs with many of the `localize` functions, they can be generated by built-in\n`buildLocalizeFn` function.\n\nFrom CLDR chart, use ['Date & Time'/'Gregorian'/'Eras'](https://www.unicode.org/cldr/charts/32/summary/en.html#1771) values.\n\n```js\n// In `en-US` locale:\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n}\n\nvar localize = {\n  // ...\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  // ...\n}\n\nexport default localize\n```\n\nGeneral usage of the function:\n\n```js\nvar result = locale.localize.era(1, {width: 'abbreviated'})\n//=> 'AD'\n```\n\nIf `width` is not provided or the `values` object does not contain values for the provided width,\n`defaultWidth` will be used. `defaultWidth` should indicate the longest form of the localized value.\nThe same is true for all other `localize` functions.\n`width` for `localize.era` function could be either 'narrow', 'abbreviated' or 'wide'.\n\n```js\nvar result = locale.localize.era(1, {width: 'foobar'})\n//=> 'Anno Domini'\n```\n\n#### Formatting localizers\n\nFor some languages, there is a difference for \"stand-alone\" localizers and \"formatting\" localizers.\n\"Stand-alone\" means that the resulting value should make grammatical sense without context.\n\"Formatting\" means that the resulting value should be declined using the grammar rules of the language\nas if the value was a part of a date.\nFor example, for languages with grammatical cases, stand-alone month could be in the nominative case (\"January\"),\nand formatting month could decline as a part of phrase \"1st of January\".\nIn this case, use parameters `formattingValues` and `defaultFormattingWidth` of `buildLocalizeFn` function.\n\nAny localizer could be stand-alone and formatting.\nCheck the CLDR chart for the unit to see if stand-alone and formatting values are different for a certain unit.\nIf there's no difference (usually it happens in languages without grammatical cases),\nparameters `formattingValues` and `defaultFormattingWidth` are not needed.\n\nIn this example, in Russian language a stand-alone month is in the nominative case (\"январь\"),\nand formatting month is in the genitive case (\"января\" as in \"1-е января\"). Notice the different endings:\n\n```js\n// In `ru` locale:\nvar monthValues = {\n  narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д'],\n  abbreviated: ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.'],\n  wide: ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']\n}\nvar formattingMonthValues = {\n  narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д'],\n  abbreviated: ['янв.', 'фев.', 'мар.', 'апр.', 'мая', 'июн.', 'июл.', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.'],\n  wide: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n}\n\nvar localize = {\n  // ...\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  // ...\n}\n\nexport default localize\n```\n\n#### localize.quarter\n\nLocalizes a quarter. Takes 1, 2, 3 or 4 as the first argument.\n`width` could be either 'narrow', 'abbreviated' or 'wide'.\nFrom CLDR chart, use ['Date & Time'/'Gregorian'/'Quarters'](https://www.unicode.org/cldr/charts/32/summary/en.html#1781) values.\n\n```js\n// In `en-US` locale:\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}\n\nvar localize = {\n  // ...\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1\n    }\n  }),\n  // ...\n}\n\nexport default localize\n```\n\nNote the usage of `argumentCallback` here. It converts the value passed into `localize.quarter` function\n(one of 1, 2, 3 or 4) into the index of the values array inside `quarterValues` (one of 0, 1, 2 or 3).\n\n#### localize.month\n\nLocalizes a month. Takes numbers between 0 (for January) and 11 (for December).\n`width` could be either 'narrow', 'abbreviated' or 'wide'.\nFrom CLDR chart, use ['Date & Time'/'Gregorian'/'Months'](https://www.unicode.org/cldr/charts/32/summary/en.html#1793) values.\n\n```js\n// In `en-US` locale:\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n}\n\nvar localize = {\n  // ...\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  // ...\n}\n\nexport default localize\n```\n\n**NOTE**: in English, the names of days of the week and months are capitalized.\nCheck if the same is true for the language you're working on.\nGenerally, formatted dates should look like they are in the middle of a sentence,\ne.g. in Spanish language the weekdays and months should be in the lowercase:\n\n```js\n// In `es` locale:\nvar monthValues = {\n  narrow: ['E', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['ene.', 'feb.', 'mar.', 'abr.', 'may.', 'jun.', 'jul.', 'ago.', 'sep.', 'oct.', 'nov.', 'dic.'],\n  wide: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre']\n}\n```\n\n`monthValues.narrow` are usually capitalized in every language. Check the CLDR chart for your language.\n\n#### localize.day\n\nLocalizes a week day. Takes numbers between 0 (for Sunday) and 6 (for Saturday).\n`width` could be either 'narrow', 'short', 'abbreviated' or 'wide'.\nFrom CLDR chart, use ['Date & Time'/'Gregorian'/'Days'](https://www.unicode.org/cldr/charts/32/summary/en.html#1829) values.\n\n```js\n// In `en-US` locale:\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n}\n\nvar localize = {\n  // ...\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  // ...\n}\n\nexport default localize\n```\n\n**NOTE**: the rules of capitalization from `localize.month` are also true for `localize.day`.\n\n#### localize.dayPeriod\n\nLocalizes a certain day period.\nCould take of these strings as the argument: 'am', 'pm', 'midnight', 'noon', 'morning', 'afternoon', 'evening', 'night'.\n`width` could be either 'narrow', 'abbreviated' or 'wide'.\nFrom CLDR chart, use ['Date & Time'/'Gregorian'/'Day periods'](https://www.unicode.org/cldr/charts/32/summary/en.html#1857) values.\n\n```js\n// In `en-US` locale:\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n}\n\nvar localize = {\n  // ...\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n}\n\nexport default localize\n```\n\n### formatLong\n\nPut this object in `_lib/formatLong/index.js` inside your locale directory.\nLocale date formats written in `format` token string format.\nSee the list of tokens: https://date-fns.org/docs/format\nUse https://en.wikipedia.org/wiki/Date_format_by_country and CLDR chart as the reference.\n\n#### formatLong.dateFormats\n\nUse ['Date & Time'/'Gregorian'/'Formats - Standard - Date Formats'](https://www.unicode.org/cldr/charts/32/summary/en.html#1901) values\nfrom the CLDR chart as a reference.\n\n```js\n// In `en-US` locale\nimport buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'\n\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n}\n\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  // ...\n}\n\nexport default formatLong\n```\n\n`dateFormats.long` usually contains the longest form of writing the year, the month, and the day of the month.\nUse ordinal day of the month ('do' token) where applicable (date-fns, unlike CLDR supports ordinal numbers).\n\n`dateFormats.full` contains the same but with the day of the week.\n\n`dateFormats.medium` contains the same values as `dateFormats.long`, but with short form of month and non-ordinal day.\n\n`dateFormats.short` usually contains strictly numerical form of the date.\nPay attention to the order of units (big-, little- or middle-endian)\n\n#### formatLong.timeFormats\n\nUse ['Date & Time'/'Gregorian'/'Formats - Standard - Time Formats'](https://www.unicode.org/cldr/charts/32/summary/en.html#1906) values\nfrom the CLDR chart as a reference.\n\nUse some variation of 'h:mm aa' for 12-hour clock locales or 'H:mm' for 24-hour clock locales. Use the local time separator.\n\n```js\n// In `en-US` locale\nimport buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'\n\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n}\n\nvar formatLong = {\n  // ...\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  // ...\n}\n\nexport default formatLong\n```\n\n#### formatLong.dateTimeFormats\n\nUse\n['Date & Time'/'Gregorian'/'Formats - Standard - Date & Time Combination Formats'](https://www.unicode.org/cldr/charts/32/summary/en.html#1910)\nvalues from the CLDR chart.\n\n```js\n// In `en-US` locale\nimport buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'\n\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n}\n\nvar formatLong = {\n  // ...\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n}\n\nexport default formatLong\n```\n\n'{{date}}' and '{{time}}' from the strings will be replaced with the date and time respectively.\n\n### formatRelative\n\nPut this function in `_lib/formatRelative/index.js` inside your locale directory.\nRelative date formats written in `format` token string format.\nSee the list of tokens: https://date-fns.org/docs/format.\nHas to process `lastWeek`, `yesterday`, `today`, `tomorrow`, `nextWeek` and `other` tokens.\n\n```javascript\n// In `en-US` locale\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n}\n\nexport default function formatRelative (token, date, baseDate, options) {\n  return formatRelativeLocale[token]\n}\n```\n\nYou can use `date` and `baseDate` supplied to the function for the difficult situations\n(e.g. grammatical genders and cases of the days of the week)\nBoth `date` and `baseDate` are converted to UTC timezone, which means\nthat you should use UTC methods to take the date values (i.e. `date.getUTCDay()` instead of `date.getDay()`).\nYou can use UTC functions from `src/_lib` in date-fns root directory if they are available.\nDon't forget to pass `options` object to them!\nExample is below. Note the different grammatical case for weekdays (accusative instead of nominative)\nand declension of word \"прошлый\" which depends on the grammatical gender of the weekday:\n\n```javascript\n// In `ru` locale\nimport isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js'\n\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу']\n\nfunction lastWeek (day) {\n  var weekday = accusativeWeekdays[day]\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\"\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\"\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\"\n  }\n}\n\nfunction thisWeek (day) {\n  // ...\n}\n\nfunction nextWeek (day) {\n  // ...\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay()\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day)\n    } else {\n      return lastWeek(day)\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay()\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day)\n    } else {\n      return nextWeek(day)\n    }\n  },\n  other: 'P'\n}\n\nexport default function formatRelative (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token]\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options)\n  }\n\n  return format\n}\n```\n\n### match\n\nPut this object in `_lib/match/index.js` inside your locale directory.\nContains the functions used by `parse` to parse a localized value:\n\n```js\n// In `en-US` locale:\nimport buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js'\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js'\n\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i\nvar parseOrdinalNumberPattern = /\\d+/i\n\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n}\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n}\n\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n}\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n}\n\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n}\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n}\n\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n}\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n}\n\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n}\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n}\n\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10)\n    }\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1\n    }\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n}\n\nexport default match\n```\n\nThese functions mirror those in `localize`.\n\nFor `matchPatterns` the patterns should match the whole meaningful word for the parsed value\n(which will be cut from the string in the process of parsing).\n`parsePatterns` contains patterns to detect one of the values from the result of `matchPatterns`\nNote that the patterns for `parsePatterns` don't necessary contain the whole word:\n\n```javascript\n// In `en-US` locale:\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n}\n```\n\nbut only the bare minimum to parse the value.\n\nAlso note that all patterns have \"case-insensitive\" flags\nto match as much arbitrary user input as possible. For the same reason, try to match\nany variation of diacritical marks:\n\n```javascript\n// In `eo` locale:\nvar matchDayPatterns = {\n  narrow: /^[dlmĵjvs]/i,\n  short: /^(di|lu|ma|me|(ĵ|jx|jh|j)a|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)|ven|sab)/i,\n  wide: /^(diman(ĉ|cx|ch|c)o|lundo|mardo|merkredo|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)do|vendredo|sabato)/i\n}\nvar parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|ĵ)/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|ĵ)/i, /^v/i, /^s/i]\n}\n```\n\nHere, for the word \"dimanĉo\" the functions will match also \"dimancxo\", \"dimancho\"\nand even grammatically incorrect \"dimanco\".\n\nTry to match any possible way of writing the word. Don't forget the grammatical cases:\n\n```javascript\n// In `ru` locale:\nvar matchMonthPatterns = {\n  narrow: /^[яфмаисонд]/i,\n  abbreviated: /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)/i,\n  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i\n}\n```\n\nand variations of short weekdays and months:\n\n```javascript\n// In `ru` locale:\nvar matchDayPatterns = {\n  narrow: /^[впсч]/i,\n  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\\.?/i,\n  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,\n  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i\n}\n```\n\n(here, the `abbreviated` pattern will match both `вск` and `вос` as the short of `воскресенье` {Sunday})\n\nIn `match.ordinalNumber` match ordinal numbers as well as non-ordinal numbers:\n\n```javascript\n// In `en-US` locale:\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i\n```\n\nDon't forget the grammatical genders:\n\n```javascript\n// In `ru` locale:\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i\n```\n\n### formatDistance\n\n`formatDistance` property of locale is a function which takes three arguments:\ntoken passed by date-fns' `formatDistance` function (e.g. 'lessThanXMinutes'),\na number of units to be displayed by the function\n(e.g. `locale.formatDistance('lessThanXMinutes', 5)` would display localized 'less than 5 minutes')\nand object with options.\n\nYour best guess is to copy `formatDistance` property from another locale and change the values.\n\n### Tests\n\nTo test locales we use snapshots. See [`en-US` snapshot](https://github.com/date-fns/date-fns/blob/master/src/locale/en-US/snapshot.md) for an example.\n\nTo generate snapshots, run `yarn locale-snapshots`. The snapshot for the locale\nyou're working on will appear in the root locale directory (e.g. `src/locales/ru/snapshot.md`).\n\nOnce you are done with the locale, generate the snapshot and review the output values.\n\n## Creating a locale with the same language as another locale\n\nImport the locale properties already implemented for the language,\nbut replace unique properties.\n\n```javascript\n// Same as en-US\nimport formatDistance from '../en-US/_lib/formatDistance/index.js'\nimport formatRelative from '../en-US/_lib/formatRelative/index.js'\nimport localize from '../en-US/_lib/localize/index.js'\nimport match from '../en-US/_lib/match/index.js'\n\n// Unique for en-GB\nimport formatLong from './_lib/formatLong/index.js'\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author John Doe [@example]{@link https://github.com/example}\n */\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n\n  // Unique for en-GB\n  options: {\n    weekStartsOn: 1,\n    firstWeekContainsDate: 4\n  }\n}\n\nexport default locale\n```\n","type":"markdown","urlId":"I18n-Contribution-Guide","category":"General","title":"I18n Contribution Guide","description":"Locales manual","path":"/Users/jalal/Projects/date-fns/docs/i18nContributionGuide.md"},{"content":"# Time Zones\n\n## Table of Contents\n\n- [Overview](#overview)\n\n- [`date-fns-tz`](#date-fns-tz)\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, other than the current system's, like showing the local time of an event in LA\nat 8pm PST on a Node server in Europe or a user's machine set to EST.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/Los_Angeles`).\n\nLibraries like Moment and Luxon, which provide their own date time classes, manage these timestamp and time\nzone values internally. Since `date-fns` always returns a plain JS Date, which implicitly has the current\nsystem's time zone, helper functions are needed for handling common time zone related use cases.\n\n## [`date-fns-tz`](https://www.npmjs.com/package/date-fns-tz)\n\nDependency free IANA time zone support is implemented via the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to keep\nactual time zone data out of code bundles. Modern browsers all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nFunctions are provided for converting to and from a Date instance which will have the internal UTC time\nadjusted so it prints to the correct time value in the associated time zone, regardless of the current\nsystem time zone. The `date-fns` `format` function is extended with support for the `z...zzzz` tokens to\nformat long and short time zone names.\n\nCompatible with `date-fns` version 2\n\nLicense: MIT\n\n### Synopsis\n\n```js\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\n\n// Set the date to \"2018-09-01T16:01:36.386Z\"\nconst utcDate = zonedTimeToUtc('2018-09-01 18:01:36.386', 'Europe/Berlin')\n\n// Obtain a Date instance that will render the equivalent Berlin time for the UTC date\nconst date = new Date('2018-09-01Z16:01:36.386Z')\nconst timeZone = 'Europe/Berlin'\nconst zonedDate = utcToZonedTime(date, timeZone)\n// zonedDate could be used to initialize a date picker or display the formatted local date/time\n\n// Set the output to \"1.9.2018 18:01:36.386 GMT+02:00 (CEST)\"\nconst pattern = 'd.m.yyyy HH:mm:ss.SSS 'GMT' XXX (z)'\nconst output = format(zonedDate, pattern, { timeZone: 'Europe/Berlin' })\n```\n\n### Links\n\n- [API / Usage Scenarios](https://github.com/marnusw/date-fns-tz#time-zone-helpers)\n","type":"markdown","urlId":"Time-Zones","category":"General","title":"Time Zones","description":"Time zone functions","path":"/Users/jalal/Projects/date-fns/docs/timeZones.md"},{"content":"# ECMAScript Modules\n\n**date-fns** v2.x provides support for\n[ECMAScript Modules](http://www.ecma-international.org/ecma-262/6.0/#sec-modules)\nthat enables tree-shaking for bundlers, like [rollup.js](http://rollupjs.org)\nand [webpack](https://webpack.js.org).\n\nIf you have tree-shaking enabled in your bundler, just import functions normally:\n\n```javascript\nimport { format, parse } from 'date-fns'\nimport { enUS, eo } from 'date-fns/locale'\nimport { addDays, addHours } from 'date-fns/fp'\n```\n\nIn TypeScript, now you can import individual functions in more idiomatic way:\n\n```typescript\n// Before\nimport * as format from 'date-fns/format'\n\n// Now\nimport format from 'date-fns/format'\n```\n","type":"markdown","urlId":"ECMAScript-Modules","category":"General","title":"ECMAScript Modules","description":"Tree-shaking guide","path":"/Users/jalal/Projects/date-fns/docs/esm.md"},{"content":"# webpack\n\n## Removing unused languages from dynamic import\n\nIf locale is required dynamically all languages in the date-fns are loaded by webpack into bundle (~160kb) or split across the chunks. This prolongs the build process and increases the amount of space taken. However, it is possible to use webpack to trim down languages using [ContextReplacementPlugin].\n\nLet's assume that we have a single point in which supported locales are present:\n\n`config.js`:\n\n```js\nexport const supportedLocales = ['en', 'de', 'pl', 'it']\n```\n\nWe could also have a function that formats the date:\n\n```js\nconst getLocale = locale => require(`date-fns/locale/${locale}/index.js`)\n\nconst formatDate = (date, formatStyle, locale) => {\n  return format(date, formatStyle, {\n    locale: getLocale(locale)\n  })\n}\n```\n\nIn order to exclude unused languages we can use webpacks [ContextReplacementPlugin].\n\n`webpack.config.js`:\n\n```js\nimport webpack from 'webpack'\nimport { supportedLocales } from './config.js'\n\nexport default const config = {\n  plugins: [\n    new webpack.ContextReplacementPlugin(\n      /date\\-fns[\\/\\\\]/,\n      new RegExp(`[/\\\\\\\\\\](${supportedLocales.join('|')})[/\\\\\\\\\\]`)\n    )\n  ]\n}\n```\n\nThis results in a language bundle of ~23kb .\n\n[ContextReplacementPlugin]: https://webpack.js.org/plugins/context-replacement-plugin/","type":"markdown","urlId":"webpack","category":"General","title":"webpack","description":"Using date-fns with webpack","path":"/Users/jalal/Projects/date-fns/docs/webpack.md"},{"content":"# FP Guide\n\n**date-fns** v2.x provides [functional programming](https://en.wikipedia.org/wiki/Functional_programming) (FP)\nfriendly functions, like those in [lodash](https://github.com/lodash/lodash/wiki/FP-Guide),\nthat support [currying](https://en.wikipedia.org/wiki/Currying).\n\n## Table of Contents\n\n- [Usage](#usage)\n\n- [Using Function Composition](#using-function-composition)\n\n## Usage\n\nFP functions are provided via `'date-fns/fp'` submodule.\n\nFunctions with options (`format`, `parse`, etc.) have two FP counterparts:\none that has the options object as its first argument and one that hasn't.\nThe name of the former has `WithOptions` added to the end of its name.\n\nIn **date-fns'** FP functions, the order of arguments is reversed.\n\n```javascript\nimport { addYears, formatWithOptions } from 'date-fns/fp'\nimport { eo } from 'date-fns/locale'\nimport toUpper from 'lodash/fp/toUpper' // 'date-fns/fp' is compatible with 'lodash/fp'!\n\n// If FP function has not received enough arguments, it returns another function\nconst addFiveYears = addYears(5)\n\n// Several arguments can be curried at once\nconst dateToString = formatWithOptions({ locale: eo }, 'd MMMM yyyy')\n\nconst dates = [\n  new Date(2017, 0 /* Jan */, 1),\n  new Date(2017, 1 /* Feb */, 11),\n  new Date(2017, 6 /* Jul */, 2)\n]\n\nconst formattedDates = dates.map(addFiveYears).map(dateToString).map(toUpper)\n//=> ['1 JANUARO 2022', '11 FEBRUARO 2022', '2 JULIO 2022']\n```\n\n## Using Function Composition\n\nThe main advantage of FP functions is support of functional-style\n[function composing](https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba).\n\nIn the example above, you can compose `addFiveYears`, `dateToString` and `toUpper` into a single function:\n\n```javascript\nconst formattedDates = dates.map((date) => toUpper(dateToString(addFiveYears(date))))\n```\n\nOr you can use `compose` function provided by [lodash](https://lodash.com) to do the same in more idiomatic way:\n\n```javascript\nimport compose from 'lodash/fp/compose'\n\nconst formattedDates = dates.map(compose(toUpper, dateToString, addFiveYears))\n```\n\nOr if you prefer natural direction of composing (as opposed to the computationally correct order),\nyou can use lodash' `flow` instead:\n\n```javascript\nimport flow from 'lodash/fp/flow'\n\nconst formattedDates = dates.map(flow(addFiveYears, dateToString, toUpper))\n```","type":"markdown","urlId":"FP-Guide","category":"General","title":"FP Guide","description":"Curried functions","path":"/Users/jalal/Projects/date-fns/docs/fp.md"},{"content":"# Unicode Tokens\n\nStarting with v2 `format` and `parse` uses [Unicode tokens].\n\nThe tokens are different from Moment.js and other libraries that opted to use\ncustom formatting rules. While usage of a standard ensures compatibility and\nthe future of the library it causes confusion that this document intended\nto resolve.\n\n## Popular mistakes\n\nThere are 4 tokens that causes the most of confusion:\n\n- `D` and `DD` that represent the day of a year (1, 2, ..., 365, 366)\n  are often confused with `d` and `dd` that represent the day of a month\n  (1, 2, ..., 31).\n\n- `YY` and `YYYY` that represent the local week-numbering year (44, 01, 00, 17)\n  are often confused with `yy` and `yyyy` that represent the the calendar year.\n\n```js\n// ❌ Wrong!\nformat(new Date(), 'YYYY-MM-DD')\n//=> 2018-10-283\n\n// ✅ Correct\nformat(new Date(), 'yyyy-MM-dd')\n//=> 2018-10-10\n\n// ❌ Wrong!\nparse('11.02.87', 'D.MM.YY', new Date()).toString()\n//=> 'Sat Jan 11 1986 00:00:00 GMT+0200 (EET)'\n\n// ✅ Correct\nparse('11.02.87', 'd.MM.yy', new Date()).toString()\n//=> 'Wed Feb 11 1987 00:00:00 GMT+0200 (EET)'\n```\n\nTo help with the issue, `format` and `parse` functions won't accept\nthese tokens without `useAdditionalDayOfYearTokens` option for `D` and `DD` and\n`useAdditionalWeekYearTokens` options for `YY` and `YYYY`:\n\n```js\nformat(new Date(), 'D', { useAdditionalDayOfYearTokens: true })\n//=> '283'\n\nparse('365+1987', 'DD+YYYY', new Date(), {\n  useAdditionalDayOfYearTokens: true,\n  useAdditionalWeekYearTokens: true\n}).toString()\n//=> 'Wed Dec 31 1986 00:00:00 GMT+0200 (EET)'\n```\n\n[Unicode tokens]: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table","type":"markdown","urlId":"Unicode-Tokens","category":"General","title":"Unicode Tokens","description":"Usage of the Unicode tokens in parse and format","path":"/Users/jalal/Projects/date-fns/docs/unicodeTokens.md"},{"content":"# v2 Upgrade Guide\n\n## Common changes\n\n### Camel case naming schema\n\nFunction submodules now use camelCase naming schema:\n\n```javascript\n// Before v2.0.0\nimport differenceInCalendarISOYears from 'date-fns/difference_in_calendar_iso_years'\n\n// v2.0.0 onward\nimport differenceInCalendarISOYears from 'date-fns/differenceInCalendarISOYears'\n```\n\n### New formatting tokens\n\nStarting with v2 `format` and `parse` uses [Unicode tokens].\n\nSee [Unicode Tokens doc](./unicodeTokens.md) for more details.\n\n### String arguments\n\nFunctions now don't accept strings as arguments. Strings should\nbe parsed using `parseISO` (ISO 8601) or `parse`.\n\nSee [this post](https://blog.date-fns.org/post/we-cut-date-fns-v2-minimal-build-size-down-to-300-bytes-and-now-its-the-smallest-date-library-18f2nvh2z0yal) for more details.\n\n```javascript\n// Before v2.0.0\naddDays('2016-01-01', 1)\n\n// v2.0.0 onward\naddDays(parseISO('2016-01-01'), 1)\n```\n\n### Arguments conversion\n\nAll functions now implicitly convert arguments by following rules:\n\n|           | date         | number | string      | boolean |\n| --------- | ------------ | ------ | ----------- | ------- |\n| 0         | new Date(0)  | 0      | '0'         | false   |\n| '0'       | Invalid Date | 0      | '0'         | false   |\n| 1         | new Date(1)  | 1      | '1'         | true    |\n| '1'       | Invalid Date | 1      | '1'         | true    |\n| true      | Invalid Date | NaN    | 'true'      | true    |\n| false     | Invalid Date | NaN    | 'false'     | false   |\n| null      | Invalid Date | NaN    | 'null'      | false   |\n| undefined | Invalid Date | NaN    | 'undefined' | false   |\n| NaN       | Invalid Date | NaN    | 'NaN'       | false   |\n\nNotes:\n\n- as before, arguments expected to be `Date` are converted to `Date` using _date-fns'_ `toDate` function;\n- arguments expected to be numbers are converted to integer numbers using our custom `toInteger` implementation\n  (see [#765](https://github.com/date-fns/date-fns/pull/765));\n- arguments expected to be strings are converted to strings using JavaScript's `String` function;\n- arguments expected to be booleans are converted to boolean using JavaScript's `Boolean` function.\n\n`null` and `undefined` passed to optional arguments (i.e. properties of `options` argument)\nare ignored as if no argument was passed.\n\nIf any argument is invalid (i.e. `NaN` for numbers and `Invalid Date` for dates),\nan invalid value will be returned:\n\n- `false` for functions that return booleans (expect `isValid`);\n- `Invalid Date` for functions that return dates;\n- `NaN` for functions that return numbers;\n- and `String('Invalid Date')` for functions that return strings.\n\nSee tests and PRs [#460](https://github.com/date-fns/date-fns/pull/460) and\n[#765](https://github.com/date-fns/date-fns/pull/765) for exact behavior.\n\n### `null`\n\n`null` now is not a valid date. `isValid(null)` returns `false`;\n`toDate(null)` returns an invalid date. Since `toDate` is used internally\nby all the functions, operations over `null` will also return an invalid date.\n[See #537](https://github.com/date-fns/date-fns/issues/537) for the reasoning.\n\n### `RangeError`\n\nFunctions now throw `RangeError` if optional values passed to `options`\nare not `undefined` or have expected values.\nThis change is introduced for consistency with ECMAScript standard library which does the same.\n\n### `TypeError`\n\nAll functions now check if the passed number of arguments is less\nthan the number of required arguments and throw `TypeError` exception if so.\n\n### UMD/CDN\n\nThe Bower & UMD/CDN package versions are no longer supported.\n\n### New locale format\n\nSee [docs/Locale](https://date-fns.org/docs/Locale).\n\nLocales renamed:\n\n- `en` → `en-US`\n- `zh_cn` → `zh-CN`\n- `zh_tw` → `zh-TW`\n\n```javascript\n// Before v2.0.0\nimport locale from 'date-fns/locale/zh_cn'\n\n// v2.0.0 onward\nimport locale from 'date-fns/locale/zh-CN'\n```\n\n[unicode tokens]: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n","type":"markdown","urlId":"Upgrade-Guide","category":"General","title":"Upgrade guide","description":"Changes from v1 to v2","path":"/Users/jalal/Projects/date-fns/docs/upgradeGuide.md"},{"content":"# License\n\ndate-fns is licensed under the [MIT license](http://kossnocorp.mit-license.org).\nRead more about MIT at [TLDRLegal](https://tldrlegal.com/license/mit-license).\n","type":"markdown","urlId":"License","category":"General","title":"License","description":"MIT © Sasha Koss","path":"/Users/jalal/Projects/date-fns/LICENSE.md"}],"Types":[{"type":"jsdoc","kind":"typedef","urlId":"Interval","category":"Types","title":"Interval","description":"An object that combines two dates to represent the time interval.","content":{"meta":{"lineno":1,"filename":"Interval.js","path":"/Users/jalal/Projects/date-fns/docs"},"summary":"An object that combines two dates to represent the time interval.","id":"Interval","longname":"Interval","name":"Interval","kind":"typedef","scope":"global","description":"An object that combines two dates to represent the time interval.","type":{"names":["Object"]},"properties":[{"type":{"names":["Date","Number"]},"description":"the start of the interval","name":"start"},{"type":{"names":["Date","Number"]},"description":"the end of the interval","name":"end"}],"category":"Types","exceptions":[{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"order":0},"properties":[{"type":{"names":["Date","Number"]},"description":"the start of the interval","name":"start"},{"type":{"names":["Date","Number"]},"description":"the end of the interval","name":"end"}]},{"type":"jsdoc","kind":"typedef","urlId":"Locale","category":"Types","title":"Locale","description":"A locale object.","content":{"meta":{"lineno":1,"filename":"Locale.js","path":"/Users/jalal/Projects/date-fns/docs"},"summary":"A locale object.","id":"Locale","longname":"Locale","name":"Locale","kind":"typedef","scope":"global","description":"A locale object.\n\nIf you don't specify a locale in options, default locale is `en-US`.","type":{"names":["Object"]},"properties":[{"type":{"names":["string"]},"optional":true,"description":"the locale code (ISO 639-1 + optional country code)","name":"code"},{"type":{"names":["function"]},"optional":true,"description":"the function that takes a token\n  passed by `formatDistance` or `formatDistanceStrict` and payload,\n  and returns localized distance in words.\n  Required by `formatDistance` and `formatDistanceStrict`","name":"formatDistance"},{"type":{"names":["function"]},"optional":true,"description":"the function that takes a token\n  passed by `formatRelative` and two dates and returns the localized relative date format.\n  Required by `formatRelative`","name":"formatRelative"},{"type":{"names":["Object"]},"optional":true,"description":"the object with functions used to localize various values.\n  Required by `format` and `formatRelative`","name":"localize"},{"type":{"names":["function"]},"description":"the function that localizes an ordinal number","name":"localize.ordinalNumber"},{"type":{"names":["function"]},"description":"the function that takes 0 or 1 and returns localized era","name":"localize.era"},{"type":{"names":["function"]},"description":"the function that localizes a quarter","name":"localize.quarter"},{"type":{"names":["function"]},"description":"the function that localizes a month","name":"localize.month"},{"type":{"names":["function"]},"description":"the function that localizes a day of the week","name":"localize.day"},{"type":{"names":["function"]},"description":"the function that takes one of the strings\n  'am', 'pm', 'midnight', 'noon', 'morning', 'afternoon', 'evening' or 'night'\n  and returns localized time of the day","name":"localize.dayPeriod"},{"type":{"names":["Object"]},"optional":true,"description":"the object with functions that return localized formats","name":"formatLong"},{"type":{"names":["function"]},"description":"the function that returns a localized long date format","name":"formatLong.date"},{"type":{"names":["function"]},"description":"the function that returns a localized long time format","name":"formatLong.time"},{"type":{"names":["function"]},"description":"the function that returns a localized format of date and time combined","name":"formatLong.dateTime"},{"type":{"names":["Object"]},"optional":true,"description":"— the object with functions used to match and parse various localized values.\n  Required by `parse`","name":"match"},{"type":{"names":["function"]},"description":"the function that parses a localized ordinal number","name":"match.ordinalNumber"},{"type":{"names":["function"]},"description":"the function that parses a localized era","name":"match.era"},{"type":{"names":["function"]},"description":"the function that parses a localized quarter","name":"match.quarter"},{"type":{"names":["function"]},"description":"the function that parses a localized month","name":"match.month"},{"type":{"names":["function"]},"description":"the function that parses a localized day of the week","name":"match.day"},{"type":{"names":["function"]},"description":"the function that parses a localized time of the day","name":"match.dayPeriod"},{"type":{"names":["Object"]},"optional":true,"description":"an object with locale options.","name":"options"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday).\n  Used by `differenceInCalendarWeeks`, `endOfWeek`, `format`, `getWeek`, `getWeekOfMonth`,\n  `getWeeksInMonth`, `isSameWeek`, `isSameWeek`, `lastDayOfWeek`, `parse`, `setDay`,\n  `setWeek`, `startOfWeek` and `startOfWeekYear`","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January,\n  which is always in the first week of the year.\n  Used by `format`, `getWeek`, `getWeekYear`, `parse`, `setWeek`, `setWeekYear` and `startOfWeekYear`.","name":"options.firstWeekContainsDate"}],"category":"Types","exceptions":[{"type":{"names":["RangeError"]},"description":"`locale` must contain `localize` property. Thrown by `format` and `formatRelative`"},{"type":{"names":["RangeError"]},"description":"`locale` must contain `formatLong` property. Thrown by `format` and `formatRelative`"},{"type":{"names":["RangeError"]},"description":"`locale` must contain `formatRelative` property. Thrown by `formatRelative`"},{"type":{"names":["RangeError"]},"description":"`locale` must contain `formatDistance` property. Thrown by `formatDistance` and `formatDistanceStrict`"},{"type":{"names":["RangeError"]},"description":"`locale` must contain `match` property. Thrown by `parse`"}],"order":0},"properties":[{"type":{"names":["string"]},"optional":true,"description":"the locale code (ISO 639-1 + optional country code)","name":"code"},{"type":{"names":["function"]},"optional":true,"description":"the function that takes a token\n  passed by `formatDistance` or `formatDistanceStrict` and payload,\n  and returns localized distance in words.\n  Required by `formatDistance` and `formatDistanceStrict`","name":"formatDistance"},{"type":{"names":["function"]},"optional":true,"description":"the function that takes a token\n  passed by `formatRelative` and two dates and returns the localized relative date format.\n  Required by `formatRelative`","name":"formatRelative"},{"type":{"names":["Object"]},"optional":true,"description":"the object with functions used to localize various values.\n  Required by `format` and `formatRelative`","name":"localize","props":[{"type":{"names":["function"]},"description":"the function that localizes an ordinal number","name":"ordinalNumber","isProperty":true},{"type":{"names":["function"]},"description":"the function that takes 0 or 1 and returns localized era","name":"era","isProperty":true},{"type":{"names":["function"]},"description":"the function that localizes a quarter","name":"quarter","isProperty":true},{"type":{"names":["function"]},"description":"the function that localizes a month","name":"month","isProperty":true},{"type":{"names":["function"]},"description":"the function that localizes a day of the week","name":"day","isProperty":true},{"type":{"names":["function"]},"description":"the function that takes one of the strings\n  'am', 'pm', 'midnight', 'noon', 'morning', 'afternoon', 'evening' or 'night'\n  and returns localized time of the day","name":"dayPeriod","isProperty":true}]},{"type":{"names":["Object"]},"optional":true,"description":"the object with functions that return localized formats","name":"formatLong","props":[{"type":{"names":["function"]},"description":"the function that returns a localized long date format","name":"date","isProperty":true},{"type":{"names":["function"]},"description":"the function that returns a localized long time format","name":"time","isProperty":true},{"type":{"names":["function"]},"description":"the function that returns a localized format of date and time combined","name":"dateTime","isProperty":true}]},{"type":{"names":["Object"]},"optional":true,"description":"— the object with functions used to match and parse various localized values.\n  Required by `parse`","name":"match","props":[{"type":{"names":["function"]},"description":"the function that parses a localized ordinal number","name":"ordinalNumber","isProperty":true},{"type":{"names":["function"]},"description":"the function that parses a localized era","name":"era","isProperty":true},{"type":{"names":["function"]},"description":"the function that parses a localized quarter","name":"quarter","isProperty":true},{"type":{"names":["function"]},"description":"the function that parses a localized month","name":"month","isProperty":true},{"type":{"names":["function"]},"description":"the function that parses a localized day of the week","name":"day","isProperty":true},{"type":{"names":["function"]},"description":"the function that parses a localized time of the day","name":"dayPeriod","isProperty":true}]},{"type":{"names":["Object"]},"optional":true,"description":"an object with locale options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday).\n  Used by `differenceInCalendarWeeks`, `endOfWeek`, `format`, `getWeek`, `getWeekOfMonth`,\n  `getWeeksInMonth`, `isSameWeek`, `isSameWeek`, `lastDayOfWeek`, `parse`, `setDay`,\n  `setWeek`, `startOfWeek` and `startOfWeekYear`","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January,\n  which is always in the first week of the year.\n  Used by `format`, `getWeek`, `getWeekYear`, `parse`, `setWeek`, `setWeekYear` and `startOfWeekYear`.","name":"firstWeekContainsDate","isProperty":true}]}]},{"type":"jsdoc","kind":"typedef","urlId":"Duration","category":"Types","title":"Duration","description":"Duration object","content":{"meta":{"lineno":1,"filename":"Duration.js","path":"/Users/jalal/Projects/date-fns/docs"},"summary":"Duration object","id":"Duration","longname":"Duration","name":"Duration","kind":"typedef","scope":"global","description":"Duration object.","type":{"names":["Object"]},"properties":[{"type":{"names":["number"]},"optional":true,"name":"years"},{"type":{"names":["number"]},"optional":true,"name":"months"},{"type":{"names":["number"]},"optional":true,"name":"weeks"},{"type":{"names":["number"]},"optional":true,"name":"days"},{"type":{"names":["number"]},"optional":true,"name":"hours"},{"type":{"names":["number"]},"optional":true,"name":"minutes"},{"type":{"names":["number"]},"optional":true,"name":"seconds"}],"category":"Types","order":0},"properties":[{"type":{"names":["number"]},"optional":true,"name":"years"},{"type":{"names":["number"]},"optional":true,"name":"months"},{"type":{"names":["number"]},"optional":true,"name":"weeks"},{"type":{"names":["number"]},"optional":true,"name":"days"},{"type":{"names":["number"]},"optional":true,"name":"hours"},{"type":{"names":["number"]},"optional":true,"name":"minutes"},{"type":{"names":["number"]},"optional":true,"name":"seconds"}]}],"Common Helpers":[{"type":"jsdoc","kind":"function","urlId":"add","category":"Common Helpers","title":"add","description":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","content":{"id":"add","longname":"add","name":"add","kind":"member","scope":"global","description":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n\n| Key            | Description                        |\n|----------------|------------------------------------|\n| years          | Amount of years to be added        |\n| months         | Amount of months to be added       |\n| weeks          | Amount of weeks to be added       |\n| days           | Amount of days to be added         |\n| hours          | Amount of hours to be added        |\n| minutes        | Amount of minutes to be added      |\n| seconds        | Amount of seconds to be added      |\n\nAll values default to 0","name":"duration"}],"examples":["// Add the following duration to 1 September 2014, 10:19:50\nvar result = add(new Date(2014, 8, 1, 10, 19, 50), {\n  years: 2,\n  months: 9,\n  weeks: 1,\n  days: 7,\n  hours: 5,\n  minutes: 9,\n  seconds: 30,\n})\n//=> Thu Jun 15 2017 15:29:20"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/add"},"summary":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n\n| Key            | Description                        |\n|----------------|------------------------------------|\n| years          | Amount of years to be added        |\n| months         | Amount of months to be added       |\n| weeks          | Amount of weeks to be added       |\n| days           | Amount of days to be added         |\n| hours          | Amount of hours to be added        |\n| minutes        | Amount of minutes to be added      |\n| seconds        | Amount of seconds to be added      |\n\nAll values default to 0","name":"duration"}],"relatedDocs":{"default":"add","fp":"fp/add"},"usage":{"commonjs":{"title":"CommonJS","code":"var add = require('date-fns/add')"},"es2015":{"title":"ES 2015","code":"import add from 'date-fns/add'"},"esm":{"title":"ESM","code":"import { add } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"add(date, duration)"},{"type":"jsdoc","kind":"function","urlId":"fp/add","category":"Common Helpers","title":"add","description":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","content":{"id":"add","longname":"add","name":"add","kind":"member","scope":"global","description":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","params":[{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n\n| Key            | Description                        |\n|----------------|------------------------------------|\n| years          | Amount of years to be added        |\n| months         | Amount of months to be added       |\n| weeks          | Amount of weeks to be added       |\n| days           | Amount of days to be added         |\n| hours          | Amount of hours to be added        |\n| minutes        | Amount of minutes to be added      |\n| seconds        | Amount of seconds to be added      |\n\nAll values default to 0","name":"duration"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/add"},"summary":"Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n\n| Key            | Description                        |\n|----------------|------------------------------------|\n| years          | Amount of years to be added        |\n| months         | Amount of months to be added       |\n| weeks          | Amount of weeks to be added       |\n| days           | Amount of days to be added         |\n| hours          | Amount of hours to be added        |\n| minutes        | Amount of minutes to be added      |\n| seconds        | Amount of seconds to be added      |\n\nAll values default to 0","name":"duration"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"add","relatedDocs":{"default":"add","fp":"fp/add"},"usage":{"commonjs":{"title":"CommonJS","code":"var add = require('date-fns/fp/add')"},"es2015":{"title":"ES 2015","code":"import add from 'date-fns/fp/add'"},"esm":{"title":"ESM","code":"import { add } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"add(duration)(date)"},{"type":"jsdoc","kind":"function","urlId":"closestIndexTo","category":"Common Helpers","title":"closestIndexTo","description":"Return an index of the closest date from the array comparing to the given date.","content":{"id":"closestIndexTo","longname":"closestIndexTo","name":"closestIndexTo","kind":"member","scope":"global","description":"Return an index of the closest date from the array comparing to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now, `closestIndexTo` doesn't throw an exception\n  when the second argument is not an array, and returns Invalid Date instead.","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"}],"examples":["// Which date is closer to 6 September 2015?\nvar dateToCompare = new Date(2015, 8, 6)\nvar datesArray = [\n  new Date(2015, 0, 1),\n  new Date(2016, 0, 1),\n  new Date(2017, 0, 1)\n]\nvar result = closestIndexTo(dateToCompare, datesArray)\n//=> 1"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/closestIndexTo"},"summary":"Return an index of the closest date from the array comparing to the given date.","returns":[{"type":{"names":["Number"]},"description":"an index of the date closest to the given date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"}],"relatedDocs":{"default":"closestIndexTo","fp":"fp/closestIndexTo"},"usage":{"commonjs":{"title":"CommonJS","code":"var closestIndexTo = require('date-fns/closestIndexTo')"},"es2015":{"title":"ES 2015","code":"import closestIndexTo from 'date-fns/closestIndexTo'"},"esm":{"title":"ESM","code":"import { closestIndexTo } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"closestIndexTo(dateToCompare, datesArray)"},{"type":"jsdoc","kind":"function","urlId":"fp/closestIndexTo","category":"Common Helpers","title":"closestIndexTo","description":"Return an index of the closest date from the array comparing to the given date.","content":{"id":"closestIndexTo","longname":"closestIndexTo","name":"closestIndexTo","kind":"member","scope":"global","description":"Return an index of the closest date from the array comparing to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now, `closestIndexTo` doesn't throw an exception\n  when the second argument is not an array, and returns Invalid Date instead.","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/closestIndexTo"},"summary":"Return an index of the closest date from the array comparing to the given date.","returns":[{"type":{"names":["Number"]},"description":"an index of the date closest to the given date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"generatedFrom":"closestIndexTo","relatedDocs":{"default":"closestIndexTo","fp":"fp/closestIndexTo"},"usage":{"commonjs":{"title":"CommonJS","code":"var closestIndexTo = require('date-fns/fp/closestIndexTo')"},"es2015":{"title":"ES 2015","code":"import closestIndexTo from 'date-fns/fp/closestIndexTo'"},"esm":{"title":"ESM","code":"import { closestIndexTo } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"closestIndexTo(datesArray)(dateToCompare)"},{"type":"jsdoc","kind":"function","urlId":"closestTo","category":"Common Helpers","title":"closestTo","description":"Return a date from the array closest to the given date.","content":{"id":"closestTo","longname":"closestTo","name":"closestTo","kind":"member","scope":"global","description":"Return a date from the array closest to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now, `closestTo` doesn't throw an exception\n  when the second argument is not an array, and returns Invalid Date instead.","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"}],"examples":["// Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\nvar dateToCompare = new Date(2015, 8, 6)\nvar result = closestTo(dateToCompare, [\n  new Date(2000, 0, 1),\n  new Date(2030, 0, 1)\n])\n//=> Tue Jan 01 2030 00:00:00"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/closestTo"},"summary":"Return a date from the array closest to the given date.","returns":[{"type":{"names":["Date"]},"description":"the date from the array closest to the given date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"}],"relatedDocs":{"default":"closestTo","fp":"fp/closestTo"},"usage":{"commonjs":{"title":"CommonJS","code":"var closestTo = require('date-fns/closestTo')"},"es2015":{"title":"ES 2015","code":"import closestTo from 'date-fns/closestTo'"},"esm":{"title":"ESM","code":"import { closestTo } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"closestTo(dateToCompare, datesArray)"},{"type":"jsdoc","kind":"function","urlId":"fp/closestTo","category":"Common Helpers","title":"closestTo","description":"Return a date from the array closest to the given date.","content":{"id":"closestTo","longname":"closestTo","name":"closestTo","kind":"member","scope":"global","description":"Return a date from the array closest to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now, `closestTo` doesn't throw an exception\n  when the second argument is not an array, and returns Invalid Date instead.","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/closestTo"},"summary":"Return a date from the array closest to the given date.","returns":[{"type":{"names":["Date"]},"description":"the date from the array closest to the given date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the array to search","name":"datesArray"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"generatedFrom":"closestTo","relatedDocs":{"default":"closestTo","fp":"fp/closestTo"},"usage":{"commonjs":{"title":"CommonJS","code":"var closestTo = require('date-fns/fp/closestTo')"},"es2015":{"title":"ES 2015","code":"import closestTo from 'date-fns/fp/closestTo'"},"esm":{"title":"ESM","code":"import { closestTo } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"closestTo(datesArray)(dateToCompare)"},{"type":"jsdoc","kind":"function","urlId":"compareAsc","category":"Common Helpers","title":"compareAsc","description":"Compare the two dates and return -1, 0 or 1.","content":{"id":"compareAsc","longname":"compareAsc","name":"compareAsc","kind":"member","scope":"global","description":"Compare the two dates and return 1 if the first date is after the second,\n-1 if the first date is before the second or 0 if dates are equal.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"examples":["// Compare 11 February 1987 and 10 July 1989:\nvar result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n//=> -1","// Sort the array of dates:\nvar result = [\n  new Date(1995, 6, 2),\n  new Date(1987, 1, 11),\n  new Date(1989, 6, 10)\n].sort(compareAsc)\n//=> [\n//   Wed Feb 11 1987 00:00:00,\n//   Mon Jul 10 1989 00:00:00,\n//   Sun Jul 02 1995 00:00:00\n// ]"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/compareAsc"},"summary":"Compare the two dates and return -1, 0 or 1.","returns":[{"type":{"names":["Number"]},"description":"the result of the comparison"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"relatedDocs":{"default":"compareAsc","fp":"fp/compareAsc"},"usage":{"commonjs":{"title":"CommonJS","code":"var compareAsc = require('date-fns/compareAsc')"},"es2015":{"title":"ES 2015","code":"import compareAsc from 'date-fns/compareAsc'"},"esm":{"title":"ESM","code":"import { compareAsc } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"compareAsc(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/compareAsc","category":"Common Helpers","title":"compareAsc","description":"Compare the two dates and return -1, 0 or 1.","content":{"id":"compareAsc","longname":"compareAsc","name":"compareAsc","kind":"member","scope":"global","description":"Compare the two dates and return 1 if the first date is after the second,\n-1 if the first date is before the second or 0 if dates are equal.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/compareAsc"},"summary":"Compare the two dates and return -1, 0 or 1.","returns":[{"type":{"names":["Number"]},"description":"the result of the comparison"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"generatedFrom":"compareAsc","relatedDocs":{"default":"compareAsc","fp":"fp/compareAsc"},"usage":{"commonjs":{"title":"CommonJS","code":"var compareAsc = require('date-fns/fp/compareAsc')"},"es2015":{"title":"ES 2015","code":"import compareAsc from 'date-fns/fp/compareAsc'"},"esm":{"title":"ESM","code":"import { compareAsc } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"compareAsc(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"compareDesc","category":"Common Helpers","title":"compareDesc","description":"Compare the two dates reverse chronologically and return -1, 0 or 1.","content":{"id":"compareDesc","longname":"compareDesc","name":"compareDesc","kind":"member","scope":"global","description":"Compare the two dates and return -1 if the first date is after the second,\n1 if the first date is before the second or 0 if dates are equal.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"examples":["// Compare 11 February 1987 and 10 July 1989 reverse chronologically:\nvar result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n//=> 1","// Sort the array of dates in reverse chronological order:\nvar result = [\n  new Date(1995, 6, 2),\n  new Date(1987, 1, 11),\n  new Date(1989, 6, 10)\n].sort(compareDesc)\n//=> [\n//   Sun Jul 02 1995 00:00:00,\n//   Mon Jul 10 1989 00:00:00,\n//   Wed Feb 11 1987 00:00:00\n// ]"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/compareDesc"},"summary":"Compare the two dates reverse chronologically and return -1, 0 or 1.","returns":[{"type":{"names":["Number"]},"description":"the result of the comparison"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"relatedDocs":{"default":"compareDesc","fp":"fp/compareDesc"},"usage":{"commonjs":{"title":"CommonJS","code":"var compareDesc = require('date-fns/compareDesc')"},"es2015":{"title":"ES 2015","code":"import compareDesc from 'date-fns/compareDesc'"},"esm":{"title":"ESM","code":"import { compareDesc } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"compareDesc(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/compareDesc","category":"Common Helpers","title":"compareDesc","description":"Compare the two dates reverse chronologically and return -1, 0 or 1.","content":{"id":"compareDesc","longname":"compareDesc","name":"compareDesc","kind":"member","scope":"global","description":"Compare the two dates and return -1 if the first date is after the second,\n1 if the first date is before the second or 0 if dates are equal.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/compareDesc"},"summary":"Compare the two dates reverse chronologically and return -1, 0 or 1.","returns":[{"type":{"names":["Number"]},"description":"the result of the comparison"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"generatedFrom":"compareDesc","relatedDocs":{"default":"compareDesc","fp":"fp/compareDesc"},"usage":{"commonjs":{"title":"CommonJS","code":"var compareDesc = require('date-fns/fp/compareDesc')"},"es2015":{"title":"ES 2015","code":"import compareDesc from 'date-fns/fp/compareDesc'"},"esm":{"title":"ESM","code":"import { compareDesc } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"compareDesc(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"format","category":"Common Helpers","title":"format","description":"Format the date.","content":{"id":"format","longname":"format","name":"format","kind":"member","scope":"global","description":"Return the formatted date string in the given format. The result may vary by locale.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n(see the last example)\n\nFormat of the string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 7 below the table).\n\nAccepted patterns:\n| Unit                            | Pattern | Result examples                   | Notes |\n|---------------------------------|---------|-----------------------------------|-------|\n| Era                             | G..GGG  | AD, BC                            |       |\n|                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 | GGGGG   | A, B                              |       |\n| Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n|                                 | yy      | 44, 01, 00, 17                    | 5     |\n|                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n|                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n|                                 | yyyyy   | ...                               | 3,5   |\n| Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n|                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n|                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n|                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n|                                 | YYYYY   | ...                               | 3,5   |\n| ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n|                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n|                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n|                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n|                                 | RRRRR   | ...                               | 3,5,7 |\n| Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n|                                 | uu      | -43, 01, 1900, 2017               | 5     |\n|                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n|                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n|                                 | uuuuu   | ...                               | 3,5   |\n| Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n|                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | QQ      | 01, 02, 03, 04                    |       |\n|                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n|                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | qq      | 01, 02, 03, 04                    |       |\n|                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n| Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n|                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | MM      | 01, 02, ..., 12                   |       |\n|                                 | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 | MMMM    | January, February, ..., December  | 2     |\n|                                 | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n|                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | LL      | 01, 02, ..., 12                   |       |\n|                                 | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 | LLLL    | January, February, ..., December  | 2     |\n|                                 | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | w       | 1, 2, ..., 53                     |       |\n|                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n|                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | II      | 01, 02, ..., 53                   | 7     |\n| Day of month                    | d       | 1, 2, ..., 31                     |       |\n|                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n|                                 | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n|                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n|                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n|                                 | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 | DDDD    | ...                               | 3     |\n| Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n|                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n|                                 | ii      | 01, 02, ..., 07                   | 7     |\n|                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n|                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n|                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n|                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n| Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n|                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | ee      | 02, 03, ..., 01                   |       |\n|                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n|                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | cc      | 02, 03, ..., 01                   |       |\n|                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          | a..aaa  | AM, PM                            |       |\n|                                 | aaaa    | a.m., p.m.                        | 2     |\n|                                 | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n|                                 | BBBB    | at night, in the morning, ...     | 2     |\n|                                 | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n|                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n|                                 | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n|                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n|                                 | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n|                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n|                                 | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n|                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n|                                 | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          | m       | 0, 1, ..., 59                     |       |\n|                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n|                                 | mm      | 00, 01, ..., 59                   |       |\n| Second                          | s       | 0, 1, ..., 59                     |       |\n|                                 | so      | 0th, 1st, ..., 59th               | 7     |\n|                                 | ss      | 00, 01, ..., 59                   |       |\n| Fraction of second              | S       | 0, 1, ..., 9                      |       |\n|                                 | SS      | 00, 01, ..., 99                   |       |\n|                                 | SSS     | 000, 0001, ..., 999               |       |\n|                                 | SSSS    | ...                               | 3     |\n| Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n|                                 | XX      | -0800, +0530, Z                   |       |\n|                                 | XXX     | -08:00, +05:30, Z                 |       |\n|                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n|                                 | xx      | -0800, +0530, +0000               |       |\n|                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n|                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n| Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n|                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n| Seconds timestamp               | t       | 512969520                         | 7     |\n|                                 | tt      | ...                               | 3,7   |\n| Milliseconds timestamp          | T       | 512969520900                      | 7     |\n|                                 | TT      | ...                               | 3,7   |\n| Long localized date             | P       | 05/29/1453                        | 7     |\n|                                 | PP      | May 29, 1453                      | 7     |\n|                                 | PPP     | May 29th, 1453                    | 7     |\n|                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n| Long localized time             | p       | 12:00 AM                          | 7     |\n|                                 | pp      | 12:00:00 AM                       | 7     |\n|                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n|                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n| Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n|                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n|                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n|                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n   the output will be the same as default pattern for this unit, usually\n   the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n   are marked with \"2\" in the last column of the table.\n\n   `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n\n   `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n\n3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n   The output will be padded with zeros to match the length of the pattern.\n\n   `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n\n4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n5. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` always returns the last two digits of a year,\n   while `uu` pads single digit years to 2 characters and returns other years unchanged:\n\n   | Year | `yy` | `uu` |\n   |------|------|------|\n   | 1    |   01 |   01 |\n   | 14   |   14 |   14 |\n   | 376  |   76 |  376 |\n   | 1453 |   53 | 1453 |\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n   and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n\n6. Specific non-location timezones are currently unavailable in `date-fns`,\n   so right now these tokens fall back to GMT timezones.\n\n7. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `t`: seconds timestamp\n   - `T`: milliseconds timestamp\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The second argument is now required for the sake of explicitness.\n\n  ```javascript\n  // Before v2.0.0\n  format(new Date(2016, 0, 1))\n\n  // v2.0.0 onward\n  format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n  ```\n\n- New format string API for `format` function\n  which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n  See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n\n- Characters are now escaped using single quote symbols (`'`) instead of square brackets.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is","name":"options.firstWeekContainsDate"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalWeekYearTokens"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalDayOfYearTokens"}],"examples":["// Represent 11 February 2014 in middle-endian format:\nvar result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n//=> '02/11/2014'","// Represent 2 July 2014 in Esperanto:\nimport { eoLocale } from 'date-fns/locale/eo'\nvar result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n  locale: eoLocale\n})\n//=> '2-a de julio 2014'","// Escape string by single quote characters:\nvar result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n//=> \"3 o'clock\""],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `localize` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatLong` property"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":37,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/format"},"summary":"Format the date.","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"useAdditionalWeekYearTokens","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"useAdditionalDayOfYearTokens","isProperty":true}]}],"relatedDocs":{"default":"format","fp":"fp/format"},"usage":{"commonjs":{"title":"CommonJS","code":"var format = require('date-fns/format')"},"es2015":{"title":"ES 2015","code":"import format from 'date-fns/format'"},"esm":{"title":"ESM","code":"import { format } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"format(date, format, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/format","category":"Common Helpers","title":"format","description":"Format the date.","content":{"id":"format","longname":"format","name":"format","kind":"member","scope":"global","description":"Return the formatted date string in the given format. The result may vary by locale.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n(see the last example)\n\nFormat of the string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 7 below the table).\n\nAccepted patterns:\n| Unit                            | Pattern | Result examples                   | Notes |\n|---------------------------------|---------|-----------------------------------|-------|\n| Era                             | G..GGG  | AD, BC                            |       |\n|                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 | GGGGG   | A, B                              |       |\n| Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n|                                 | yy      | 44, 01, 00, 17                    | 5     |\n|                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n|                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n|                                 | yyyyy   | ...                               | 3,5   |\n| Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n|                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n|                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n|                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n|                                 | YYYYY   | ...                               | 3,5   |\n| ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n|                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n|                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n|                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n|                                 | RRRRR   | ...                               | 3,5,7 |\n| Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n|                                 | uu      | -43, 01, 1900, 2017               | 5     |\n|                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n|                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n|                                 | uuuuu   | ...                               | 3,5   |\n| Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n|                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | QQ      | 01, 02, 03, 04                    |       |\n|                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n|                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | qq      | 01, 02, 03, 04                    |       |\n|                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n| Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n|                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | MM      | 01, 02, ..., 12                   |       |\n|                                 | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 | MMMM    | January, February, ..., December  | 2     |\n|                                 | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n|                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | LL      | 01, 02, ..., 12                   |       |\n|                                 | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 | LLLL    | January, February, ..., December  | 2     |\n|                                 | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | w       | 1, 2, ..., 53                     |       |\n|                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n|                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | II      | 01, 02, ..., 53                   | 7     |\n| Day of month                    | d       | 1, 2, ..., 31                     |       |\n|                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n|                                 | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n|                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n|                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n|                                 | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 | DDDD    | ...                               | 3     |\n| Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n|                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n|                                 | ii      | 01, 02, ..., 07                   | 7     |\n|                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n|                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n|                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n|                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n| Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n|                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | ee      | 02, 03, ..., 01                   |       |\n|                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n|                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | cc      | 02, 03, ..., 01                   |       |\n|                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          | a..aaa  | AM, PM                            |       |\n|                                 | aaaa    | a.m., p.m.                        | 2     |\n|                                 | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n|                                 | BBBB    | at night, in the morning, ...     | 2     |\n|                                 | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n|                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n|                                 | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n|                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n|                                 | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n|                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n|                                 | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n|                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n|                                 | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          | m       | 0, 1, ..., 59                     |       |\n|                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n|                                 | mm      | 00, 01, ..., 59                   |       |\n| Second                          | s       | 0, 1, ..., 59                     |       |\n|                                 | so      | 0th, 1st, ..., 59th               | 7     |\n|                                 | ss      | 00, 01, ..., 59                   |       |\n| Fraction of second              | S       | 0, 1, ..., 9                      |       |\n|                                 | SS      | 00, 01, ..., 99                   |       |\n|                                 | SSS     | 000, 0001, ..., 999               |       |\n|                                 | SSSS    | ...                               | 3     |\n| Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n|                                 | XX      | -0800, +0530, Z                   |       |\n|                                 | XXX     | -08:00, +05:30, Z                 |       |\n|                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n|                                 | xx      | -0800, +0530, +0000               |       |\n|                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n|                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n| Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n|                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n| Seconds timestamp               | t       | 512969520                         | 7     |\n|                                 | tt      | ...                               | 3,7   |\n| Milliseconds timestamp          | T       | 512969520900                      | 7     |\n|                                 | TT      | ...                               | 3,7   |\n| Long localized date             | P       | 05/29/1453                        | 7     |\n|                                 | PP      | May 29, 1453                      | 7     |\n|                                 | PPP     | May 29th, 1453                    | 7     |\n|                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n| Long localized time             | p       | 12:00 AM                          | 7     |\n|                                 | pp      | 12:00:00 AM                       | 7     |\n|                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n|                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n| Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n|                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n|                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n|                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n   the output will be the same as default pattern for this unit, usually\n   the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n   are marked with \"2\" in the last column of the table.\n\n   `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n\n   `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n\n3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n   The output will be padded with zeros to match the length of the pattern.\n\n   `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n\n4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n5. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` always returns the last two digits of a year,\n   while `uu` pads single digit years to 2 characters and returns other years unchanged:\n\n   | Year | `yy` | `uu` |\n   |------|------|------|\n   | 1    |   01 |   01 |\n   | 14   |   14 |   14 |\n   | 376  |   76 |  376 |\n   | 1453 |   53 | 1453 |\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n   and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n\n6. Specific non-location timezones are currently unavailable in `date-fns`,\n   so right now these tokens fall back to GMT timezones.\n\n7. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `t`: seconds timestamp\n   - `T`: milliseconds timestamp\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The second argument is now required for the sake of explicitness.\n\n  ```javascript\n  // Before v2.0.0\n  format(new Date(2016, 0, 1))\n\n  // v2.0.0 onward\n  format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n  ```\n\n- New format string API for `format` function\n  which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n  See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n\n- Characters are now escaped using single quote symbols (`'`) instead of square brackets.","params":[{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":37,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/format"},"summary":"Format the date.","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"format","relatedDocs":{"default":"format","fp":"fp/format"},"usage":{"commonjs":{"title":"CommonJS","code":"var format = require('date-fns/fp/format')"},"es2015":{"title":"ES 2015","code":"import format from 'date-fns/fp/format'"},"esm":{"title":"ESM","code":"import { format } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"format(format)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatWithOptions","category":"Common Helpers","title":"formatWithOptions","description":"Format the date.","content":{"id":"formatWithOptions","longname":"formatWithOptions","name":"formatWithOptions","kind":"member","scope":"global","description":"Return the formatted date string in the given format. The result may vary by locale.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n(see the last example)\n\nFormat of the string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 7 below the table).\n\nAccepted patterns:\n| Unit                            | Pattern | Result examples                   | Notes |\n|---------------------------------|---------|-----------------------------------|-------|\n| Era                             | G..GGG  | AD, BC                            |       |\n|                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 | GGGGG   | A, B                              |       |\n| Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n|                                 | yy      | 44, 01, 00, 17                    | 5     |\n|                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n|                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n|                                 | yyyyy   | ...                               | 3,5   |\n| Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n|                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n|                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n|                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n|                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n|                                 | YYYYY   | ...                               | 3,5   |\n| ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n|                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n|                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n|                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n|                                 | RRRRR   | ...                               | 3,5,7 |\n| Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n|                                 | uu      | -43, 01, 1900, 2017               | 5     |\n|                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n|                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n|                                 | uuuuu   | ...                               | 3,5   |\n| Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n|                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | QQ      | 01, 02, 03, 04                    |       |\n|                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n|                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n|                                 | qq      | 01, 02, 03, 04                    |       |\n|                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n| Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n|                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | MM      | 01, 02, ..., 12                   |       |\n|                                 | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 | MMMM    | January, February, ..., December  | 2     |\n|                                 | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n|                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n|                                 | LL      | 01, 02, ..., 12                   |       |\n|                                 | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 | LLLL    | January, February, ..., December  | 2     |\n|                                 | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | w       | 1, 2, ..., 53                     |       |\n|                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n|                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n|                                 | II      | 01, 02, ..., 53                   | 7     |\n| Day of month                    | d       | 1, 2, ..., 31                     |       |\n|                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n|                                 | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n|                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n|                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n|                                 | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 | DDDD    | ...                               | 3     |\n| Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n|                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n|                                 | ii      | 01, 02, ..., 07                   | 7     |\n|                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n|                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n|                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n|                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n| Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n|                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | ee      | 02, 03, ..., 01                   |       |\n|                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n|                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n|                                 | cc      | 02, 03, ..., 01                   |       |\n|                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          | a..aaa  | AM, PM                            |       |\n|                                 | aaaa    | a.m., p.m.                        | 2     |\n|                                 | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n|                                 | BBBB    | at night, in the morning, ...     | 2     |\n|                                 | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n|                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n|                                 | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n|                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n|                                 | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n|                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n|                                 | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n|                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n|                                 | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          | m       | 0, 1, ..., 59                     |       |\n|                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n|                                 | mm      | 00, 01, ..., 59                   |       |\n| Second                          | s       | 0, 1, ..., 59                     |       |\n|                                 | so      | 0th, 1st, ..., 59th               | 7     |\n|                                 | ss      | 00, 01, ..., 59                   |       |\n| Fraction of second              | S       | 0, 1, ..., 9                      |       |\n|                                 | SS      | 00, 01, ..., 99                   |       |\n|                                 | SSS     | 000, 0001, ..., 999               |       |\n|                                 | SSSS    | ...                               | 3     |\n| Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n|                                 | XX      | -0800, +0530, Z                   |       |\n|                                 | XXX     | -08:00, +05:30, Z                 |       |\n|                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n|                                 | xx      | -0800, +0530, +0000               |       |\n|                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n|                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n| Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n|                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n| Seconds timestamp               | t       | 512969520                         | 7     |\n|                                 | tt      | ...                               | 3,7   |\n| Milliseconds timestamp          | T       | 512969520900                      | 7     |\n|                                 | TT      | ...                               | 3,7   |\n| Long localized date             | P       | 05/29/1453                        | 7     |\n|                                 | PP      | May 29, 1453                      | 7     |\n|                                 | PPP     | May 29th, 1453                    | 7     |\n|                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n| Long localized time             | p       | 12:00 AM                          | 7     |\n|                                 | pp      | 12:00:00 AM                       | 7     |\n|                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n|                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n| Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n|                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n|                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n|                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n   the output will be the same as default pattern for this unit, usually\n   the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n   are marked with \"2\" in the last column of the table.\n\n   `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n\n   `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n\n   `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n\n3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n   The output will be padded with zeros to match the length of the pattern.\n\n   `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n\n4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n5. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` always returns the last two digits of a year,\n   while `uu` pads single digit years to 2 characters and returns other years unchanged:\n\n   | Year | `yy` | `uu` |\n   |------|------|------|\n   | 1    |   01 |   01 |\n   | 14   |   14 |   14 |\n   | 376  |   76 |  376 |\n   | 1453 |   53 | 1453 |\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n   and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n\n6. Specific non-location timezones are currently unavailable in `date-fns`,\n   so right now these tokens fall back to GMT timezones.\n\n7. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `t`: seconds timestamp\n   - `T`: milliseconds timestamp\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The second argument is now required for the sake of explicitness.\n\n  ```javascript\n  // Before v2.0.0\n  format(new Date(2016, 0, 1))\n\n  // v2.0.0 onward\n  format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n  ```\n\n- New format string API for `format` function\n  which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n  See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n\n- Characters are now escaped using single quote symbols (`'`) instead of square brackets.","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalDayOfYearTokens"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalWeekYearTokens"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["String"]},"description":"the string of tokens","name":"format","optional":false},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `localize` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatLong` property"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":37,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/format"},"summary":"Format the date.","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"useAdditionalDayOfYearTokens","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"useAdditionalWeekYearTokens","isProperty":true},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["String"]},"description":"the string of tokens","name":"format","optional":false},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"format","relatedDocs":{"default":"format","fp":"fp/format","fpWithOptions":"fp/formatWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var format = require('date-fns/fp/format')"},"es2015":{"title":"ES 2015","code":"import format from 'date-fns/fp/format'"},"esm":{"title":"ESM","code":"import { format } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"format(options)(format)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatDistance","category":"Common Helpers","title":"formatDistance","description":"Return the distance between the given dates in words.","content":{"id":"formatDistance","longname":"formatDistance","name":"formatDistance","kind":"member","scope":"global","description":"Return the distance between the given dates in words.\n\n| Distance between dates                                            | Result              |\n|-------------------------------------------------------------------|---------------------|\n| 0 ... 30 secs                                                     | less than a minute  |\n| 30 secs ... 1 min 30 secs                                         | 1 minute            |\n| 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n| 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n| 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n| 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n| 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n| 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n| 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n| 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n| 1 yr ... 1 yr 3 months                                            | about 1 year        |\n| 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n| 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n| N yrs ... N yrs 3 months                                          | about N years       |\n| N yrs 3 months ... N yrs 9 months                                 | over N years        |\n| N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n\nWith `options.includeSeconds == true`:\n| Distance between dates | Result               |\n|------------------------|----------------------|\n| 0 secs ... 5 secs      | less than 5 seconds  |\n| 5 secs ... 10 secs     | less than 10 seconds |\n| 10 secs ... 20 secs    | less than 20 seconds |\n| 20 secs ... 40 secs    | half a minute        |\n| 40 secs ... 60 secs    | less than a minute   |\n| 60 secs ... 90 secs    | 1 minute             |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWords ` to `formatDistance`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWords(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 11, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n\n  // v2.0.0 onward\n\n  formatDistance(\n    new Date(1986, 3, 4, 11, 32, 0),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the date","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"options.includeSeconds"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"options.addSuffix"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"}],"examples":["// What is the distance between 2 July 2014 and 1 January 2015?\nvar result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n//=> '6 months'","// What is the distance between 1 January 2015 00:00:15\n// and 1 January 2015 00:00:00, including seconds?\nvar result = formatDistance(\n  new Date(2015, 0, 1, 0, 0, 15),\n  new Date(2015, 0, 1, 0, 0, 0),\n  { includeSeconds: true }\n)\n//=> 'less than 20 seconds'","// What is the distance from 1 January 2016\n// to 1 January 2015, with a suffix?\nvar result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n  addSuffix: true\n})\n//=> 'about 1 year ago'","// What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\nimport { eoLocale } from 'date-fns/locale/eo'\nvar result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n  locale: eoLocale\n})\n//=> 'pli ol 1 jaro'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"meta":{"lineno":15,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistance"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"includeSeconds","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"addSuffix","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]}],"relatedDocs":{"default":"formatDistance","fp":"fp/formatDistance"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistance = require('date-fns/formatDistance')"},"es2015":{"title":"ES 2015","code":"import formatDistance from 'date-fns/formatDistance'"},"esm":{"title":"ESM","code":"import { formatDistance } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatDistance(date, baseDate, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDistance","category":"Common Helpers","title":"formatDistance","description":"Return the distance between the given dates in words.","content":{"id":"formatDistance","longname":"formatDistance","name":"formatDistance","kind":"member","scope":"global","description":"Return the distance between the given dates in words.\n\n| Distance between dates                                            | Result              |\n|-------------------------------------------------------------------|---------------------|\n| 0 ... 30 secs                                                     | less than a minute  |\n| 30 secs ... 1 min 30 secs                                         | 1 minute            |\n| 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n| 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n| 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n| 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n| 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n| 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n| 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n| 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n| 1 yr ... 1 yr 3 months                                            | about 1 year        |\n| 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n| 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n| N yrs ... N yrs 3 months                                          | about N years       |\n| N yrs 3 months ... N yrs 9 months                                 | over N years        |\n| N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n\nWith `options.includeSeconds == true`:\n| Distance between dates | Result               |\n|------------------------|----------------------|\n| 0 secs ... 5 secs      | less than 5 seconds  |\n| 5 secs ... 10 secs     | less than 10 seconds |\n| 10 secs ... 20 secs    | less than 20 seconds |\n| 20 secs ... 40 secs    | half a minute        |\n| 40 secs ... 60 secs    | less than a minute   |\n| 60 secs ... 90 secs    | 1 minute             |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWords ` to `formatDistance`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWords(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 11, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n\n  // v2.0.0 onward\n\n  formatDistance(\n    new Date(1986, 3, 4, 11, 32, 0),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"}],"meta":{"lineno":15,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistance"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date","name":"date"}],"generatedFrom":"formatDistance","relatedDocs":{"default":"formatDistance","fp":"fp/formatDistance"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistance = require('date-fns/fp/formatDistance')"},"es2015":{"title":"ES 2015","code":"import formatDistance from 'date-fns/fp/formatDistance'"},"esm":{"title":"ESM","code":"import { formatDistance } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDistance(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDistanceWithOptions","category":"Common Helpers","title":"formatDistanceWithOptions","description":"Return the distance between the given dates in words.","content":{"id":"formatDistanceWithOptions","longname":"formatDistanceWithOptions","name":"formatDistanceWithOptions","kind":"member","scope":"global","description":"Return the distance between the given dates in words.\n\n| Distance between dates                                            | Result              |\n|-------------------------------------------------------------------|---------------------|\n| 0 ... 30 secs                                                     | less than a minute  |\n| 30 secs ... 1 min 30 secs                                         | 1 minute            |\n| 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n| 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n| 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n| 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n| 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n| 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n| 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n| 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n| 1 yr ... 1 yr 3 months                                            | about 1 year        |\n| 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n| 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n| N yrs ... N yrs 3 months                                          | about N years       |\n| N yrs 3 months ... N yrs 9 months                                 | over N years        |\n| N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n\nWith `options.includeSeconds == true`:\n| Distance between dates | Result               |\n|------------------------|----------------------|\n| 0 secs ... 5 secs      | less than 5 seconds  |\n| 5 secs ... 10 secs     | less than 10 seconds |\n| 10 secs ... 20 secs    | less than 20 seconds |\n| 20 secs ... 40 secs    | half a minute        |\n| 40 secs ... 60 secs    | less than a minute   |\n| 60 secs ... 90 secs    | 1 minute             |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWords ` to `formatDistance`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWords(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 11, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n\n  // v2.0.0 onward\n\n  formatDistance(\n    new Date(1986, 3, 4, 11, 32, 0),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { addSuffix: true }\n  ) //=> 'in about 1 hour'\n  ```","params":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"options.addSuffix"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"options.includeSeconds"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"meta":{"lineno":15,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistance"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"addSuffix","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"includeSeconds","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date","name":"date","optional":false}],"generatedFrom":"formatDistance","relatedDocs":{"default":"formatDistance","fp":"fp/formatDistance","fpWithOptions":"fp/formatDistanceWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistance = require('date-fns/fp/formatDistance')"},"es2015":{"title":"ES 2015","code":"import formatDistance from 'date-fns/fp/formatDistance'"},"esm":{"title":"ESM","code":"import { formatDistance } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDistance(options)(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatDistanceStrict","category":"Common Helpers","title":"formatDistanceStrict","description":"Return the distance between the given dates in words.","content":{"id":"formatDistanceStrict","longname":"formatDistanceStrict","name":"formatDistanceStrict","kind":"member","scope":"global","description":"Return the distance between the given dates in words, using strict units.\nThis is like `formatDistance`, but does not use helpers like 'almost', 'over',\n'less than' and the like.\n\n| Distance between dates | Result              |\n|------------------------|---------------------|\n| 0 ... 59 secs          | [0..59] seconds     |\n| 1 ... 59 mins          | [1..59] minutes     |\n| 1 ... 23 hrs           | [1..23] hours       |\n| 1 ... 29 days          | [1..29] days        |\n| 1 ... 11 months        | [1..11] months      |\n| 1 ... N years          | [1..N]  years       |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(2015, 0, 2),\n    new Date(2014, 6, 2)\n  ) //=> '6 months'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(2014, 6, 2),\n    new Date(2015, 0, 2)\n  ) //=> '6 months'\n  ```\n\n- `partialMethod` option is renamed to `roundingMethod`.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { partialMethod: 'ceil' }\n  ) //=> '2 minutes'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { roundingMethod: 'ceil' }\n  ) //=> '2 minutes'\n  ```\n\n- If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n\n- `unit` option now accepts one of the strings:\n  'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { unit: 'm' }\n  )\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { unit: 'minute' }\n  )\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the date","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"options.addSuffix"},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"options.unit"},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"options.roundingMethod"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"}],"examples":["// What is the distance between 2 July 2014 and 1 January 2015?\nvar result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n//=> '6 months'","// What is the distance between 1 January 2015 00:00:15\n// and 1 January 2015 00:00:00?\nvar result = formatDistanceStrict(\n  new Date(2015, 0, 1, 0, 0, 15),\n  new Date(2015, 0, 1, 0, 0, 0)\n)\n//=> '15 seconds'","// What is the distance from 1 January 2016\n// to 1 January 2015, with a suffix?\nvar result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n  addSuffix: true\n})\n//=> '1 year ago'","// What is the distance from 1 January 2016\n// to 1 January 2015, in minutes?\nvar result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n  unit: 'minute'\n})\n//=> '525600 minutes'","// What is the distance from 1 January 2015\n// to 28 January 2015, in months, rounded up?\nvar result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n  unit: 'month',\n  roundingMethod: 'ceil'\n})\n//=> '1 month'","// What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\nimport { eoLocale } from 'date-fns/locale/eo'\nvar result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n  locale: eoLocale\n})\n//=> '1 jaro'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.roundingMethod` must be 'floor', 'ceil' or 'round'"},{"type":{"names":["RangeError"]},"description":"`options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistanceStrict"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"addSuffix","isProperty":true},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"unit","isProperty":true},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"roundingMethod","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]}],"relatedDocs":{"default":"formatDistanceStrict","fp":"fp/formatDistanceStrict"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistanceStrict = require('date-fns/formatDistanceStrict')"},"es2015":{"title":"ES 2015","code":"import formatDistanceStrict from 'date-fns/formatDistanceStrict'"},"esm":{"title":"ESM","code":"import { formatDistanceStrict } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatDistanceStrict(date, baseDate, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDistanceStrict","category":"Common Helpers","title":"formatDistanceStrict","description":"Return the distance between the given dates in words.","content":{"id":"formatDistanceStrict","longname":"formatDistanceStrict","name":"formatDistanceStrict","kind":"member","scope":"global","description":"Return the distance between the given dates in words, using strict units.\nThis is like `formatDistance`, but does not use helpers like 'almost', 'over',\n'less than' and the like.\n\n| Distance between dates | Result              |\n|------------------------|---------------------|\n| 0 ... 59 secs          | [0..59] seconds     |\n| 1 ... 59 mins          | [1..59] minutes     |\n| 1 ... 23 hrs           | [1..23] hours       |\n| 1 ... 29 days          | [1..29] days        |\n| 1 ... 11 months        | [1..11] months      |\n| 1 ... N years          | [1..N]  years       |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(2015, 0, 2),\n    new Date(2014, 6, 2)\n  ) //=> '6 months'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(2014, 6, 2),\n    new Date(2015, 0, 2)\n  ) //=> '6 months'\n  ```\n\n- `partialMethod` option is renamed to `roundingMethod`.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { partialMethod: 'ceil' }\n  ) //=> '2 minutes'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { roundingMethod: 'ceil' }\n  ) //=> '2 minutes'\n  ```\n\n- If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n\n- `unit` option now accepts one of the strings:\n  'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { unit: 'm' }\n  )\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { unit: 'minute' }\n  )\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistanceStrict"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date","name":"date"}],"generatedFrom":"formatDistanceStrict","relatedDocs":{"default":"formatDistanceStrict","fp":"fp/formatDistanceStrict"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistanceStrict = require('date-fns/fp/formatDistanceStrict')"},"es2015":{"title":"ES 2015","code":"import formatDistanceStrict from 'date-fns/fp/formatDistanceStrict'"},"esm":{"title":"ESM","code":"import { formatDistanceStrict } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDistanceStrict(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDistanceStrictWithOptions","category":"Common Helpers","title":"formatDistanceStrictWithOptions","description":"Return the distance between the given dates in words.","content":{"id":"formatDistanceStrictWithOptions","longname":"formatDistanceStrictWithOptions","name":"formatDistanceStrictWithOptions","kind":"member","scope":"global","description":"Return the distance between the given dates in words, using strict units.\nThis is like `formatDistance`, but does not use helpers like 'almost', 'over',\n'less than' and the like.\n\n| Distance between dates | Result              |\n|------------------------|---------------------|\n| 0 ... 59 secs          | [0..59] seconds     |\n| 1 ... 59 mins          | [1..59] minutes     |\n| 1 ... 23 hrs           | [1..23] hours       |\n| 1 ... 29 days          | [1..29] days        |\n| 1 ... 11 months        | [1..11] months      |\n| 1 ... N years          | [1..N]  years       |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n  to make its name consistent with `format` and `formatRelative`.\n\n- The order of arguments is swapped to make the function\n  consistent with `differenceIn...` functions.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(2015, 0, 2),\n    new Date(2014, 6, 2)\n  ) //=> '6 months'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(2014, 6, 2),\n    new Date(2015, 0, 2)\n  ) //=> '6 months'\n  ```\n\n- `partialMethod` option is renamed to `roundingMethod`.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { partialMethod: 'ceil' }\n  ) //=> '2 minutes'\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { roundingMethod: 'ceil' }\n  ) //=> '2 minutes'\n  ```\n\n- If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n\n- `unit` option now accepts one of the strings:\n  'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsStrict(\n    new Date(1986, 3, 4, 10, 32, 0),\n    new Date(1986, 3, 4, 10, 33, 1),\n    { unit: 'm' }\n  )\n\n  // v2.0.0 onward\n\n  formatDistanceStrict(\n    new Date(1986, 3, 4, 10, 33, 1),\n    new Date(1986, 3, 4, 10, 32, 0),\n    { unit: 'minute' }\n  )\n  ```","params":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"options.roundingMethod"},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"options.unit"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"options.addSuffix"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.roundingMethod` must be 'floor', 'ceil' or 'round'"},{"type":{"names":["RangeError"]},"description":"`options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistanceStrict"},"summary":"Return the distance between the given dates in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"roundingMethod","isProperty":true},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"unit","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"addSuffix","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date","name":"date","optional":false}],"generatedFrom":"formatDistanceStrict","relatedDocs":{"default":"formatDistanceStrict","fp":"fp/formatDistanceStrict","fpWithOptions":"fp/formatDistanceStrictWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistanceStrict = require('date-fns/fp/formatDistanceStrict')"},"es2015":{"title":"ES 2015","code":"import formatDistanceStrict from 'date-fns/fp/formatDistanceStrict'"},"esm":{"title":"ESM","code":"import { formatDistanceStrict } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDistanceStrict(options)(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatDistanceToNow","category":"Common Helpers","title":"formatDistanceToNow","description":"Return the distance between the given date and now in words.","content":{"id":"formatDistanceToNow","longname":"formatDistanceToNow","name":"formatDistanceToNow","kind":"member","scope":"global","description":"Return the distance between the given date and now in words.\n\n| Distance to now                                                   | Result              |\n|-------------------------------------------------------------------|---------------------|\n| 0 ... 30 secs                                                     | less than a minute  |\n| 30 secs ... 1 min 30 secs                                         | 1 minute            |\n| 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n| 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n| 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n| 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n| 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n| 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n| 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n| 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n| 1 yr ... 1 yr 3 months                                            | about 1 year        |\n| 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n| 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n| N yrs ... N yrs 3 months                                          | about N years       |\n| N yrs 3 months ... N yrs 9 months                                 | over N years        |\n| N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n\nWith `options.includeSeconds == true`:\n| Distance to now     | Result               |\n|---------------------|----------------------|\n| 0 secs ... 5 secs   | less than 5 seconds  |\n| 5 secs ... 10 secs  | less than 10 seconds |\n| 10 secs ... 20 secs | less than 20 seconds |\n| 20 secs ... 40 secs | half a minute        |\n| 40 secs ... 60 secs | less than a minute   |\n| 60 secs ... 90 secs | 1 minute             |\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n  to make its name consistent with `format` and `formatRelative`.\n\n  ```javascript\n  // Before v2.0.0\n\n  distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n  //=> 'in 6 months'\n\n  // v2.0.0 onward\n\n  formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n  //=> 'in 6 months'\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"options.includeSeconds"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result specifies if now is earlier or later than the passed date","name":"options.addSuffix"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"}],"examples":["// If today is 1 January 2015, what is the distance to 2 July 2014?\nvar result = formatDistanceToNow(\n  new Date(2014, 6, 2)\n)\n//=> '6 months'","// If now is 1 January 2015 00:00:00,\n// what is the distance to 1 January 2015 00:00:15, including seconds?\nvar result = formatDistanceToNow(\n  new Date(2015, 0, 1, 0, 0, 15),\n  {includeSeconds: true}\n)\n//=> 'less than 20 seconds'","// If today is 1 January 2015,\n// what is the distance to 1 January 2016, with a suffix?\nvar result = formatDistanceToNow(\n  new Date(2016, 0, 1),\n  {addSuffix: true}\n)\n//=> 'in about 1 year'","// If today is 1 January 2015,\n// what is the distance to 1 August 2016 in Esperanto?\nvar eoLocale = require('date-fns/locale/eo')\nvar result = formatDistanceToNow(\n  new Date(2016, 7, 1),\n  {locale: eoLocale}\n)\n//=> 'pli ol 1 jaro'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistanceToNow"},"summary":"Return the distance between the given date and now in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"distances less than a minute are more detailed","name":"includeSeconds","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result specifies if now is earlier or later than the passed date","name":"addSuffix","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]}],"relatedDocs":{"default":"formatDistanceToNow","fp":"fp/formatDistanceToNow"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistanceToNow = require('date-fns/formatDistanceToNow')"},"es2015":{"title":"ES 2015","code":"import formatDistanceToNow from 'date-fns/formatDistanceToNow'"},"esm":{"title":"ESM","code":"import { formatDistanceToNow } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatDistanceToNow(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"formatDistanceToNowStrict","category":"Common Helpers","title":"formatDistanceToNowStrict","description":"Return the distance between the given date and now in words.","content":{"id":"formatDistanceToNowStrict","longname":"formatDistanceToNowStrict","name":"formatDistanceToNowStrict","kind":"member","scope":"global","description":"Return the distance between the given dates in words, using strict units.\nThis is like `formatDistance`, but does not use helpers like 'almost', 'over',\n'less than' and the like.\n\n| Distance between dates | Result              |\n|------------------------|---------------------|\n| 0 ... 59 secs          | [0..59] seconds     |\n| 1 ... 59 mins          | [1..59] minutes     |\n| 1 ... 23 hrs           | [1..23] hours       |\n| 1 ... 29 days          | [1..29] days        |\n| 1 ... 11 months        | [1..11] months      |\n| 1 ... N years          | [1..N]  years       |","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"options.addSuffix"},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"options.unit"},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"options.roundingMethod"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"}],"examples":["// If today is 1 January 2015, what is the distance to 2 July 2014?\nvar result = formatDistanceToNowStrict(\n  new Date(2014, 6, 2)\n)\n//=> '6 months'","// If now is 1 January 2015 00:00:00,\n// what is the distance to 1 January 2015 00:00:15, including seconds?\nvar result = formatDistanceToNowStrict(\n  new Date(2015, 0, 1, 0, 0, 15)\n)\n//=> '20 seconds'","// If today is 1 January 2015,\n// what is the distance to 1 January 2016, with a suffix?\nvar result = formatDistanceToNowStrict(\n  new Date(2016, 0, 1),\n  {addSuffix: true}\n)\n//=> 'in 1 year'","// If today is 28 January 2015,\n// what is the distance to 1 January 2015, in months, rounded up??\nvar result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n  unit: 'month',\n  roundingMethod: 'ceil'\n})\n//=> '1 month'","// If today is 1 January 2015,\n// what is the distance to 1 August 2016 in Esperanto?\nvar eoLocale = require('date-fns/locale/eo')\nvar result = formatDistanceToNowStrict(\n  new Date(2016, 7, 1),\n  {locale: eoLocale}\n)\n//=> '1 jaro'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatDistance` property"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDistanceToNowStrict"},"summary":"Return the distance between the given date and now in words.","returns":[{"type":{"names":["String"]},"description":"the distance in words"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"result indicates if the second date is earlier or later than the first","name":"addSuffix","isProperty":true},{"type":{"names":["'second'","'minute'","'hour'","'day'","'month'","'year'"]},"optional":true,"description":"if specified, will force a unit","name":"unit","isProperty":true},{"type":{"names":["'floor'","'ceil'","'round'"]},"optional":true,"defaultvalue":"'round'","description":"which way to round partial units","name":"roundingMethod","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]}],"relatedDocs":{"default":"formatDistanceToNowStrict","fp":"fp/formatDistanceToNowStrict"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDistanceToNowStrict = require('date-fns/formatDistanceToNowStrict')"},"es2015":{"title":"ES 2015","code":"import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict'"},"esm":{"title":"ESM","code":"import { formatDistanceToNowStrict } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatDistanceToNowStrict(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"formatDuration","category":"Common Helpers","title":"formatDuration","description":"Formats a duration in human-readable format","content":{"id":"formatDuration","longname":"formatDuration","name":"formatDuration","kind":"member","scope":"global","description":"Return human-readable duration string i.e. \"9 months 2 days\"","params":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']","description":"the array of units to format","name":"options.format"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"should be zeros be included in the output?","name":"options.zero"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"' '","description":"delimiter string","name":"options.delimiter"}],"examples":["// Format full duration\nformatDuration({\n  years: 2,\n  months: 9,\n  weeks: 1,\n  days: 7,\n  hours: 5,\n  minutes: 9,\n  seconds: 30\n})\n//=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds","// Format partial duration\nformatDuration({ months: 9, days: 2 })\n//=> '9 months 2 days'","// Customize the format\nformatDuration(\n  {\n    years: 2,\n    months: 9,\n    weeks: 1,\n    days: 7,\n    hours: 5,\n    minutes: 9,\n    seconds: 30\n  },\n  { format: ['months', 'weeks'] }\n) === '9 months 1 week'","// Customize the zeros presence\nformatDuration({ years: 0, months: 9 })\n//=> '9 months'\nformatDuration({ years: 0, months: 9 }, null, { zero: true })\n//=> '0 years 9 months'","// Customize the delimiter\nformatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n//=> '2 years, 9 months, 3 weeks'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDuration"},"summary":"Formats a duration in human-readable format","returns":[{"type":{"names":["string"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']","description":"the array of units to format","name":"format","isProperty":true},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"should be zeros be included in the output?","name":"zero","isProperty":true},{"type":{"names":["string"]},"optional":true,"defaultvalue":"' '","description":"delimiter string","name":"delimiter","isProperty":true}]}],"relatedDocs":{"default":"formatDuration","fp":"fp/formatDuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDuration = require('date-fns/formatDuration')"},"es2015":{"title":"ES 2015","code":"import formatDuration from 'date-fns/formatDuration'"},"esm":{"title":"ESM","code":"import { formatDuration } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatDuration(duration, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDuration","category":"Common Helpers","title":"formatDuration","description":"Formats a duration in human-readable format","content":{"id":"formatDuration","longname":"formatDuration","name":"formatDuration","kind":"member","scope":"global","description":"Return human-readable duration string i.e. \"9 months 2 days\"","params":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDuration"},"summary":"Formats a duration in human-readable format","returns":[{"type":{"names":["string"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"generatedFrom":"formatDuration","relatedDocs":{"default":"formatDuration","fp":"fp/formatDuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDuration = require('date-fns/fp/formatDuration')"},"es2015":{"title":"ES 2015","code":"import formatDuration from 'date-fns/fp/formatDuration'"},"esm":{"title":"ESM","code":"import { formatDuration } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDuration(duration)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatDurationWithOptions","category":"Common Helpers","title":"formatDurationWithOptions","description":"Formats a duration in human-readable format","content":{"id":"formatDurationWithOptions","longname":"formatDurationWithOptions","name":"formatDurationWithOptions","kind":"member","scope":"global","description":"Return human-readable duration string i.e. \"9 months 2 days\"","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"' '","description":"delimiter string","name":"options.delimiter"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"should be zeros be included in the output?","name":"options.zero"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']","description":"the array of units to format","name":"options.format"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatDuration"},"summary":"Formats a duration in human-readable format","returns":[{"type":{"names":["string"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"' '","description":"delimiter string","name":"delimiter","isProperty":true},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"should be zeros be included in the output?","name":"zero","isProperty":true},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']","description":"the array of units to format","name":"format","isProperty":true}]},{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration","optional":false}],"generatedFrom":"formatDuration","relatedDocs":{"default":"formatDuration","fp":"fp/formatDuration","fpWithOptions":"fp/formatDurationWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatDuration = require('date-fns/fp/formatDuration')"},"es2015":{"title":"ES 2015","code":"import formatDuration from 'date-fns/fp/formatDuration'"},"esm":{"title":"ESM","code":"import { formatDuration } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatDuration(options)(duration)"},{"type":"jsdoc","kind":"function","urlId":"formatISO","category":"Common Helpers","title":"formatISO","description":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","content":{"id":"formatISO","longname":"formatISO","name":"formatISO","kind":"member","scope":"global","description":"Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"options.format"},{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time with time zone, or both.","name":"options.representation"}],"examples":["// Represent 18 September 2019 in ISO 8601 format (UTC):\nconst result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n//=> '2019-09-18T19:00:52Z'","// Represent 18 September 2019 in ISO 8601, short format (UTC):\nconst result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n//=> '20190918T190052'","// Represent 18 September 2019 in ISO 8601 format, date only:\nconst result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n//=> '2019-09-18'","// Represent 18 September 2019 in ISO 8601 format, time only (UTC):\nconst result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n//=> '19:00:52Z'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.format` must be 'extended' or 'basic'"},{"type":{"names":["RangeError"]},"description":"`options.represenation` must be 'date', 'time' or 'complete'"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO"},"summary":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"format","isProperty":true},{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time with time zone, or both.","name":"representation","isProperty":true}]}],"relatedDocs":{"default":"formatISO","fp":"fp/formatISO"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO = require('date-fns/formatISO')"},"es2015":{"title":"ES 2015","code":"import formatISO from 'date-fns/formatISO'"},"esm":{"title":"ESM","code":"import { formatISO } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatISO(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatISO","category":"Common Helpers","title":"formatISO","description":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","content":{"id":"formatISO","longname":"formatISO","name":"formatISO","kind":"member","scope":"global","description":"Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO"},"summary":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"formatISO","relatedDocs":{"default":"formatISO","fp":"fp/formatISO"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO = require('date-fns/fp/formatISO')"},"es2015":{"title":"ES 2015","code":"import formatISO from 'date-fns/fp/formatISO'"},"esm":{"title":"ESM","code":"import { formatISO } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatISO(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatISOWithOptions","category":"Common Helpers","title":"formatISOWithOptions","description":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","content":{"id":"formatISOWithOptions","longname":"formatISOWithOptions","name":"formatISOWithOptions","kind":"member","scope":"global","description":"Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time with time zone, or both.","name":"options.representation"},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"options.format"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.format` must be 'extended' or 'basic'"},{"type":{"names":["RangeError"]},"description":"`options.represenation` must be 'date', 'time' or 'complete'"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO"},"summary":"Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time with time zone, or both.","name":"representation","isProperty":true},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"format","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"formatISO","relatedDocs":{"default":"formatISO","fp":"fp/formatISO","fpWithOptions":"fp/formatISOWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO = require('date-fns/fp/formatISO')"},"es2015":{"title":"ES 2015","code":"import formatISO from 'date-fns/fp/formatISO'"},"esm":{"title":"ESM","code":"import { formatISO } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatISO(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatISO9075","category":"Common Helpers","title":"formatISO9075","description":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","content":{"id":"formatISO9075","longname":"formatISO9075","name":"formatISO9075","kind":"member","scope":"global","description":"Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"options.format"},{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time, or both.","name":"options.representation"}],"examples":["// Represent 18 September 2019 in ISO 9075 format:\nconst result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n//=> '2019-09-18 19:00:52'","// Represent 18 September 2019 in ISO 9075, short format:\nconst result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n//=> '20190918 190052'","// Represent 18 September 2019 in ISO 9075 format, date only:\nconst result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n//=> '2019-09-18'","// Represent 18 September 2019 in ISO 9075 format, time only:\nconst result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n//=> '19:00:52'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.format` must be 'extended' or 'basic'"},{"type":{"names":["RangeError"]},"description":"`options.represenation` must be 'date', 'time' or 'complete'"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO9075"},"summary":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"format","isProperty":true},{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time, or both.","name":"representation","isProperty":true}]}],"relatedDocs":{"default":"formatISO9075","fp":"fp/formatISO9075"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO9075 = require('date-fns/formatISO9075')"},"es2015":{"title":"ES 2015","code":"import formatISO9075 from 'date-fns/formatISO9075'"},"esm":{"title":"ESM","code":"import { formatISO9075 } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatISO9075(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatISO9075","category":"Common Helpers","title":"formatISO9075","description":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","content":{"id":"formatISO9075","longname":"formatISO9075","name":"formatISO9075","kind":"member","scope":"global","description":"Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO9075"},"summary":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"formatISO9075","relatedDocs":{"default":"formatISO9075","fp":"fp/formatISO9075"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO9075 = require('date-fns/fp/formatISO9075')"},"es2015":{"title":"ES 2015","code":"import formatISO9075 from 'date-fns/fp/formatISO9075'"},"esm":{"title":"ESM","code":"import { formatISO9075 } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatISO9075(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatISO9075WithOptions","category":"Common Helpers","title":"formatISO9075WithOptions","description":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","content":{"id":"formatISO9075WithOptions","longname":"formatISO9075WithOptions","name":"formatISO9075WithOptions","kind":"member","scope":"global","description":"Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time, or both.","name":"options.representation"},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"options.format"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.format` must be 'extended' or 'basic'"},{"type":{"names":["RangeError"]},"description":"`options.represenation` must be 'date', 'time' or 'complete'"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISO9075"},"summary":"Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["'complete'","'date'","'time'"]},"optional":true,"defaultvalue":"'complete'","description":"format date, time, or both.","name":"representation","isProperty":true},{"type":{"names":["'extended'","'basic'"]},"optional":true,"defaultvalue":"'extended'","description":"if 'basic', hide delimiters between date and time values.","name":"format","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"formatISO9075","relatedDocs":{"default":"formatISO9075","fp":"fp/formatISO9075","fpWithOptions":"fp/formatISO9075WithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISO9075 = require('date-fns/fp/formatISO9075')"},"es2015":{"title":"ES 2015","code":"import formatISO9075 from 'date-fns/fp/formatISO9075'"},"esm":{"title":"ESM","code":"import { formatISO9075 } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatISO9075(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatISODuration","category":"Common Helpers","title":"formatISODuration","description":"Format a duration object according as ISO 8601 duration string","content":{"id":"formatISODuration","longname":"formatISODuration","name":"formatISODuration","kind":"member","scope":"global","description":"Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)","params":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"examples":["// Format the given duration as ISO 8601 string\nformatISODuration({\n  years: 39,\n  months: 2,\n  days: 20,\n  hours: 7,\n  minutes: 5,\n  seconds: 0\n})\n//=> 'P39Y2M20DT0H0M0S'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"Requires 1 argument"},{"type":{"names":["Error"]},"description":"Argument must be an object"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISODuration"},"summary":"Format a duration object according as ISO 8601 duration string","returns":[{"type":{"names":["String"]},"description":"The ISO 8601 duration string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"relatedDocs":{"default":"formatISODuration","fp":"fp/formatISODuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISODuration = require('date-fns/formatISODuration')"},"es2015":{"title":"ES 2015","code":"import formatISODuration from 'date-fns/formatISODuration'"},"esm":{"title":"ESM","code":"import { formatISODuration } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatISODuration(duration)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatISODuration","category":"Common Helpers","title":"formatISODuration","description":"Format a duration object according as ISO 8601 duration string","content":{"id":"formatISODuration","longname":"formatISODuration","name":"formatISODuration","kind":"member","scope":"global","description":"Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)","params":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"Requires 1 argument"},{"type":{"names":["Error"]},"description":"Argument must be an object"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatISODuration"},"summary":"Format a duration object according as ISO 8601 duration string","returns":[{"type":{"names":["String"]},"description":"The ISO 8601 duration string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Duration"]},"description":"the duration to format","name":"duration"}],"generatedFrom":"formatISODuration","relatedDocs":{"default":"formatISODuration","fp":"fp/formatISODuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatISODuration = require('date-fns/fp/formatISODuration')"},"es2015":{"title":"ES 2015","code":"import formatISODuration from 'date-fns/fp/formatISODuration'"},"esm":{"title":"ESM","code":"import { formatISODuration } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatISODuration(duration)"},{"type":"jsdoc","kind":"function","urlId":"formatRFC3339","category":"Common Helpers","title":"formatRFC3339","description":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","content":{"id":"formatRFC3339","longname":"formatRFC3339","name":"formatRFC3339","kind":"member","scope":"global","description":"Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["0","1","2","3"]},"optional":true,"defaultvalue":0,"description":"number of digits after the decimal point after seconds","name":"options.fractionDigits"}],"examples":["// Represent 18 September 2019 in ISO 3339 format:\nconst result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n//=> '2019-09-18T19:00:52Z'","// Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\nconst result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n//=> '2019-09-18T19:00:52.23Z'","// Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\nconst result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n//=> '2019-09-18T19:00:52.234Z'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.fractionDigits` must be between 0 and 3"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRFC3339"},"summary":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3"]},"optional":true,"defaultvalue":0,"description":"number of digits after the decimal point after seconds","name":"fractionDigits","isProperty":true}]}],"relatedDocs":{"default":"formatRFC3339","fp":"fp/formatRFC3339"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRFC3339 = require('date-fns/formatRFC3339')"},"es2015":{"title":"ES 2015","code":"import formatRFC3339 from 'date-fns/formatRFC3339'"},"esm":{"title":"ESM","code":"import { formatRFC3339 } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatRFC3339(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatRFC3339","category":"Common Helpers","title":"formatRFC3339","description":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","content":{"id":"formatRFC3339","longname":"formatRFC3339","name":"formatRFC3339","kind":"member","scope":"global","description":"Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRFC3339"},"summary":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"formatRFC3339","relatedDocs":{"default":"formatRFC3339","fp":"fp/formatRFC3339"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRFC3339 = require('date-fns/fp/formatRFC3339')"},"es2015":{"title":"ES 2015","code":"import formatRFC3339 from 'date-fns/fp/formatRFC3339'"},"esm":{"title":"ESM","code":"import { formatRFC3339 } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatRFC3339(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatRFC3339WithOptions","category":"Common Helpers","title":"formatRFC3339WithOptions","description":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","content":{"id":"formatRFC3339WithOptions","longname":"formatRFC3339WithOptions","name":"formatRFC3339WithOptions","kind":"member","scope":"global","description":"Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.","params":[{"type":{"names":["0","1","2","3"]},"optional":true,"defaultvalue":0,"description":"number of digits after the decimal point after seconds","name":"options.fractionDigits"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.fractionDigits` must be between 0 and 3"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRFC3339"},"summary":"Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3"]},"optional":true,"defaultvalue":0,"description":"number of digits after the decimal point after seconds","name":"fractionDigits","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"formatRFC3339","relatedDocs":{"default":"formatRFC3339","fp":"fp/formatRFC3339","fpWithOptions":"fp/formatRFC3339WithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRFC3339 = require('date-fns/fp/formatRFC3339')"},"es2015":{"title":"ES 2015","code":"import formatRFC3339 from 'date-fns/fp/formatRFC3339'"},"esm":{"title":"ESM","code":"import { formatRFC3339 } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatRFC3339(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"formatRFC7231","category":"Common Helpers","title":"formatRFC7231","description":"Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).","content":{"id":"formatRFC7231","longname":"formatRFC7231","name":"formatRFC7231","kind":"member","scope":"global","description":"Return the formatted date string in RFC 7231 format.\nThe result will always be in UTC timezone.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// Represent 18 September 2019 in RFC 7231 format:\nconst result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n//=> 'Wed, 18 Sep 2019 19:00:52 GMT'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"}],"meta":{"lineno":21,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRFC7231"},"summary":"Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"formatRFC7231","fp":"fp/formatRFC7231"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRFC7231 = require('date-fns/formatRFC7231')"},"es2015":{"title":"ES 2015","code":"import formatRFC7231 from 'date-fns/formatRFC7231'"},"esm":{"title":"ESM","code":"import { formatRFC7231 } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatRFC7231(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatRFC7231","category":"Common Helpers","title":"formatRFC7231","description":"Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).","content":{"id":"formatRFC7231","longname":"formatRFC7231","name":"formatRFC7231","kind":"member","scope":"global","description":"Return the formatted date string in RFC 7231 format.\nThe result will always be in UTC timezone.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"}],"meta":{"lineno":21,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRFC7231"},"summary":"Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"formatRFC7231","relatedDocs":{"default":"formatRFC7231","fp":"fp/formatRFC7231"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRFC7231 = require('date-fns/fp/formatRFC7231')"},"es2015":{"title":"ES 2015","code":"import formatRFC7231 from 'date-fns/fp/formatRFC7231'"},"esm":{"title":"ESM","code":"import { formatRFC7231 } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatRFC7231(date)"},{"type":"jsdoc","kind":"function","urlId":"formatRelative","category":"Common Helpers","title":"formatRelative","description":"Represent the date in words relative to the given base date.","content":{"id":"formatRelative","longname":"formatRelative","name":"formatRelative","kind":"member","scope":"global","description":"Represent the date in words relative to the given base date.\n\n| Distance to the base date | Result                    |\n|---------------------------|---------------------------|\n| Previous 6 days           | last Sunday at 04:30 AM   |\n| Last day                  | yesterday at 04:30 AM     |\n| Same day                  | today at 04:30 AM         |\n| Next day                  | tomorrow at 04:30 AM      |\n| Next 6 days               | Sunday at 04:30 AM        |\n| Other                     | 12/31/2017                |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `localize` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatLong` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatRelative` property"}],"meta":{"lineno":9,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRelative"},"summary":"Represent the date in words relative to the given base date.","returns":[{"type":{"names":["String"]},"description":"the date in words"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"formatRelative","fp":"fp/formatRelative"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRelative = require('date-fns/formatRelative')"},"es2015":{"title":"ES 2015","code":"import formatRelative from 'date-fns/formatRelative'"},"esm":{"title":"ESM","code":"import { formatRelative } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"formatRelative(date, baseDate, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/formatRelative","category":"Common Helpers","title":"formatRelative","description":"Represent the date in words relative to the given base date.","content":{"id":"formatRelative","longname":"formatRelative","name":"formatRelative","kind":"member","scope":"global","description":"Represent the date in words relative to the given base date.\n\n| Distance to the base date | Result                    |\n|---------------------------|---------------------------|\n| Previous 6 days           | last Sunday at 04:30 AM   |\n| Last day                  | yesterday at 04:30 AM     |\n| Same day                  | today at 04:30 AM         |\n| Next day                  | tomorrow at 04:30 AM      |\n| Next 6 days               | Sunday at 04:30 AM        |\n| Other                     | 12/31/2017                |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date"}],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"}],"meta":{"lineno":9,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRelative"},"summary":"Represent the date in words relative to the given base date.","returns":[{"type":{"names":["String"]},"description":"the date in words"}],"order":0,"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information"},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate"},{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date"}],"generatedFrom":"formatRelative","relatedDocs":{"default":"formatRelative","fp":"fp/formatRelative"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRelative = require('date-fns/fp/formatRelative')"},"es2015":{"title":"ES 2015","code":"import formatRelative from 'date-fns/fp/formatRelative'"},"esm":{"title":"ESM","code":"import { formatRelative } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatRelative(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/formatRelativeWithOptions","category":"Common Helpers","title":"formatRelativeWithOptions","description":"Represent the date in words relative to the given base date.","content":{"id":"formatRelativeWithOptions","longname":"formatRelativeWithOptions","name":"formatRelativeWithOptions","kind":"member","scope":"global","description":"Represent the date in words relative to the given base date.\n\n| Distance to the base date | Result                    |\n|---------------------------|---------------------------|\n| Previous 6 days           | last Sunday at 04:30 AM   |\n| Last day                  | yesterday at 04:30 AM     |\n| Same day                  | today at 04:30 AM         |\n| Next day                  | tomorrow at 04:30 AM      |\n| Next 6 days               | Sunday at 04:30 AM        |\n| Other                     | 12/31/2017                |\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date","optional":false}],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`date` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`baseDate` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `localize` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatLong` property"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `formatRelative` property"}],"meta":{"lineno":9,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/formatRelative"},"summary":"Represent the date in words relative to the given base date.","returns":[{"type":{"names":["String"]},"description":"the date in words"}],"order":0,"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information"},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"baseDate","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to format","name":"date","optional":false}],"generatedFrom":"formatRelative","relatedDocs":{"default":"formatRelative","fp":"fp/formatRelative","fpWithOptions":"fp/formatRelativeWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var formatRelative = require('date-fns/fp/formatRelative')"},"es2015":{"title":"ES 2015","code":"import formatRelative from 'date-fns/fp/formatRelative'"},"esm":{"title":"ESM","code":"import { formatRelative } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"formatRelative(options)(baseDate)(date)"},{"type":"jsdoc","kind":"function","urlId":"intervalToDuration","category":"Common Helpers","title":"intervalToDuration","description":"Convert interval to duration","content":{"id":"intervalToDuration","longname":"intervalToDuration","name":"intervalToDuration","kind":"member","scope":"global","description":"Convert a interval object to a duration object.","params":[{"type":{"names":["Interval"]},"description":"the interval to convert to duration","name":"interval"}],"examples":["// Get the duration between January 15, 1929 and April 4, 1968.\nintervalToDuration({\n  start: new Date(1929, 0, 15, 12, 0, 0),\n  end: new Date(1968, 3, 4, 19, 5, 0)\n})\n// => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"Requires 2 arguments"},{"type":{"names":["RangeError"]},"description":"`start` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`end` must not be Invalid Date"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/intervalToDuration"},"summary":"Convert interval to duration","returns":[{"type":{"names":["Duration"]},"description":"The duration Object"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval to convert to duration","name":"interval"}],"relatedDocs":{"default":"intervalToDuration","fp":"fp/intervalToDuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var intervalToDuration = require('date-fns/intervalToDuration')"},"es2015":{"title":"ES 2015","code":"import intervalToDuration from 'date-fns/intervalToDuration'"},"esm":{"title":"ESM","code":"import { intervalToDuration } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"intervalToDuration(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/intervalToDuration","category":"Common Helpers","title":"intervalToDuration","description":"Convert interval to duration","content":{"id":"intervalToDuration","longname":"intervalToDuration","name":"intervalToDuration","kind":"member","scope":"global","description":"Convert a interval object to a duration object.","params":[{"type":{"names":["Interval"]},"description":"the interval to convert to duration","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"Requires 2 arguments"},{"type":{"names":["RangeError"]},"description":"`start` must not be Invalid Date"},{"type":{"names":["RangeError"]},"description":"`end` must not be Invalid Date"}],"meta":{"lineno":13,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/intervalToDuration"},"summary":"Convert interval to duration","returns":[{"type":{"names":["Duration"]},"description":"The duration Object"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval to convert to duration","name":"interval"}],"generatedFrom":"intervalToDuration","relatedDocs":{"default":"intervalToDuration","fp":"fp/intervalToDuration"},"usage":{"commonjs":{"title":"CommonJS","code":"var intervalToDuration = require('date-fns/fp/intervalToDuration')"},"es2015":{"title":"ES 2015","code":"import intervalToDuration from 'date-fns/fp/intervalToDuration'"},"esm":{"title":"ESM","code":"import { intervalToDuration } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"intervalToDuration(interval)"},{"type":"jsdoc","kind":"function","urlId":"isAfter","category":"Common Helpers","title":"isAfter","description":"Is the first date after the second one?","content":{"id":"isAfter","longname":"isAfter","name":"isAfter","kind":"member","scope":"global","description":"Is the first date after the second one?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date that should be after the other one to return true","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"examples":["// Is 10 July 1989 after 11 February 1987?\nvar result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n//=> true"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isAfter"},"summary":"Is the first date after the second one?","returns":[{"type":{"names":["Boolean"]},"description":"the first date is after the second date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date that should be after the other one to return true","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"relatedDocs":{"default":"isAfter","fp":"fp/isAfter"},"usage":{"commonjs":{"title":"CommonJS","code":"var isAfter = require('date-fns/isAfter')"},"es2015":{"title":"ES 2015","code":"import isAfter from 'date-fns/isAfter'"},"esm":{"title":"ESM","code":"import { isAfter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isAfter(date, dateToCompare)"},{"type":"jsdoc","kind":"function","urlId":"fp/isAfter","category":"Common Helpers","title":"isAfter","description":"Is the first date after the second one?","content":{"id":"isAfter","longname":"isAfter","name":"isAfter","kind":"member","scope":"global","description":"Is the first date after the second one?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Date","Number"]},"description":"the date that should be after the other one to return true","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isAfter"},"summary":"Is the first date after the second one?","returns":[{"type":{"names":["Boolean"]},"description":"the first date is after the second date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Date","Number"]},"description":"the date that should be after the other one to return true","name":"date"}],"generatedFrom":"isAfter","relatedDocs":{"default":"isAfter","fp":"fp/isAfter"},"usage":{"commonjs":{"title":"CommonJS","code":"var isAfter = require('date-fns/fp/isAfter')"},"es2015":{"title":"ES 2015","code":"import isAfter from 'date-fns/fp/isAfter'"},"esm":{"title":"ESM","code":"import { isAfter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isAfter(dateToCompare)(date)"},{"type":"jsdoc","kind":"function","urlId":"isBefore","category":"Common Helpers","title":"isBefore","description":"Is the first date before the second one?","content":{"id":"isBefore","longname":"isBefore","name":"isBefore","kind":"member","scope":"global","description":"Is the first date before the second one?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date that should be before the other one to return true","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"examples":["// Is 10 July 1989 before 11 February 1987?\nvar result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n//=> false"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isBefore"},"summary":"Is the first date before the second one?","returns":[{"type":{"names":["Boolean"]},"description":"the first date is before the second date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date that should be before the other one to return true","name":"date"},{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"}],"relatedDocs":{"default":"isBefore","fp":"fp/isBefore"},"usage":{"commonjs":{"title":"CommonJS","code":"var isBefore = require('date-fns/isBefore')"},"es2015":{"title":"ES 2015","code":"import isBefore from 'date-fns/isBefore'"},"esm":{"title":"ESM","code":"import { isBefore } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isBefore(date, dateToCompare)"},{"type":"jsdoc","kind":"function","urlId":"fp/isBefore","category":"Common Helpers","title":"isBefore","description":"Is the first date before the second one?","content":{"id":"isBefore","longname":"isBefore","name":"isBefore","kind":"member","scope":"global","description":"Is the first date before the second one?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Date","Number"]},"description":"the date that should be before the other one to return true","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isBefore"},"summary":"Is the first date before the second one?","returns":[{"type":{"names":["Boolean"]},"description":"the first date is before the second date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to compare with","name":"dateToCompare"},{"type":{"names":["Date","Number"]},"description":"the date that should be before the other one to return true","name":"date"}],"generatedFrom":"isBefore","relatedDocs":{"default":"isBefore","fp":"fp/isBefore"},"usage":{"commonjs":{"title":"CommonJS","code":"var isBefore = require('date-fns/fp/isBefore')"},"es2015":{"title":"ES 2015","code":"import isBefore from 'date-fns/fp/isBefore'"},"esm":{"title":"ESM","code":"import { isBefore } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isBefore(dateToCompare)(date)"},{"type":"jsdoc","kind":"function","urlId":"isDate","category":"Common Helpers","title":"isDate","description":"Is the given value a date?","content":{"id":"isDate","longname":"isDate","name":"isDate","kind":"member","scope":"global","description":"Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["*"]},"description":"the value to check","name":"value"}],"examples":["// For a valid date:\nvar result = isDate(new Date())\n//=> true","// For an invalid date:\nvar result = isDate(new Date(NaN))\n//=> true","// For some value:\nvar result = isDate('2014-02-31')\n//=> false","// For an object:\nvar result = isDate({})\n//=> false"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 arguments required"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isDate"},"summary":"Is the given value a date?","returns":[{"type":{"names":["boolean"]},"description":"true if the given value is a date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"the value to check","name":"value"}],"relatedDocs":{"default":"isDate","fp":"fp/isDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var isDate = require('date-fns/isDate')"},"es2015":{"title":"ES 2015","code":"import isDate from 'date-fns/isDate'"},"esm":{"title":"ESM","code":"import { isDate } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isDate(value)"},{"type":"jsdoc","kind":"function","urlId":"fp/isDate","category":"Common Helpers","title":"isDate","description":"Is the given value a date?","content":{"id":"isDate","longname":"isDate","name":"isDate","kind":"member","scope":"global","description":"Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["*"]},"description":"the value to check","name":"value"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 arguments required"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isDate"},"summary":"Is the given value a date?","returns":[{"type":{"names":["boolean"]},"description":"true if the given value is a date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["*"]},"description":"the value to check","name":"value"}],"generatedFrom":"isDate","relatedDocs":{"default":"isDate","fp":"fp/isDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var isDate = require('date-fns/fp/isDate')"},"es2015":{"title":"ES 2015","code":"import isDate from 'date-fns/fp/isDate'"},"esm":{"title":"ESM","code":"import { isDate } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isDate(value)"},{"type":"jsdoc","kind":"function","urlId":"isEqual","category":"Common Helpers","title":"isEqual","description":"Are the given dates equal?","content":{"id":"isEqual","longname":"isEqual","name":"isEqual","kind":"member","scope":"global","description":"Are the given dates equal?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"examples":["// Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\nvar result = isEqual(\n  new Date(2014, 6, 2, 6, 30, 45, 0),\n  new Date(2014, 6, 2, 6, 30, 45, 500)\n)\n//=> false"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isEqual"},"summary":"Are the given dates equal?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are equal"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"}],"relatedDocs":{"default":"isEqual","fp":"fp/isEqual"},"usage":{"commonjs":{"title":"CommonJS","code":"var isEqual = require('date-fns/isEqual')"},"es2015":{"title":"ES 2015","code":"import isEqual from 'date-fns/isEqual'"},"esm":{"title":"ESM","code":"import { isEqual } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isEqual(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isEqual","category":"Common Helpers","title":"isEqual","description":"Are the given dates equal?","content":{"id":"isEqual","longname":"isEqual","name":"isEqual","kind":"member","scope":"global","description":"Are the given dates equal?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isEqual"},"summary":"Are the given dates equal?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are equal"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to compare","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to compare","name":"dateLeft"}],"generatedFrom":"isEqual","relatedDocs":{"default":"isEqual","fp":"fp/isEqual"},"usage":{"commonjs":{"title":"CommonJS","code":"var isEqual = require('date-fns/fp/isEqual')"},"es2015":{"title":"ES 2015","code":"import isEqual from 'date-fns/fp/isEqual'"},"esm":{"title":"ESM","code":"import { isEqual } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isEqual(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isExists","category":"Common Helpers","title":"isExists","description":"Is the given date exists?","content":{"id":"isExists","longname":"isExists","name":"isExists","kind":"member","scope":"global","description":"Checks if the given arguments convert to an existing date.","params":[{"type":{"names":["Number"]},"description":"of the date to check","name":"year"},{"type":{"names":["Number"]},"description":"of the date to check","name":"month"},{"type":{"names":["Number"]},"description":"of the date to check","name":"day"}],"examples":["// For the valid date:\nvar result = isExists(2018, 0, 31)\n//=> true","// For the invalid date:\nvar result = isExists(2018, 1, 31)\n//=> false"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"3 arguments required"}],"meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isExists"},"summary":"Is the given date exists?","returns":[{"type":{"names":["Boolean"]},"description":"the date exists"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Number"]},"description":"of the date to check","name":"year"},{"type":{"names":["Number"]},"description":"of the date to check","name":"month"},{"type":{"names":["Number"]},"description":"of the date to check","name":"day"}],"relatedDocs":{"default":"isExists","fp":"fp/isExists"},"usage":{"commonjs":{"title":"CommonJS","code":"var isExists = require('date-fns/isExists')"},"es2015":{"title":"ES 2015","code":"import isExists from 'date-fns/isExists'"},"esm":{"title":"ESM","code":"import { isExists } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isExists(year, month, day)"},{"type":"jsdoc","kind":"function","urlId":"fp/isExists","category":"Common Helpers","title":"isExists","description":"Is the given date exists?","content":{"id":"isExists","longname":"isExists","name":"isExists","kind":"member","scope":"global","description":"Checks if the given arguments convert to an existing date.","params":[{"type":{"names":["Number"]},"description":"of the date to check","name":"day"},{"type":{"names":["Number"]},"description":"of the date to check","name":"month"},{"type":{"names":["Number"]},"description":"of the date to check","name":"year"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"3 arguments required"}],"meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isExists"},"summary":"Is the given date exists?","returns":[{"type":{"names":["Boolean"]},"description":"the date exists"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"of the date to check","name":"day"},{"type":{"names":["Number"]},"description":"of the date to check","name":"month"},{"type":{"names":["Number"]},"description":"of the date to check","name":"year"}],"generatedFrom":"isExists","relatedDocs":{"default":"isExists","fp":"fp/isExists"},"usage":{"commonjs":{"title":"CommonJS","code":"var isExists = require('date-fns/fp/isExists')"},"es2015":{"title":"ES 2015","code":"import isExists from 'date-fns/fp/isExists'"},"esm":{"title":"ESM","code":"import { isExists } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isExists(day)(month)(year)"},{"type":"jsdoc","kind":"function","urlId":"isFuture","category":"Common Helpers","title":"isFuture","description":"Is the given date in the future?","content":{"id":"isFuture","longname":"isFuture","name":"isFuture","kind":"member","scope":"global","description":"Is the given date in the future?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 6 October 2014, is 31 December 2014 in the future?\nvar result = isFuture(new Date(2014, 11, 31))\n//=> true"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isFuture"},"summary":"Is the given date in the future?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in the future"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isFuture","fp":"fp/isFuture"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFuture = require('date-fns/isFuture')"},"es2015":{"title":"ES 2015","code":"import isFuture from 'date-fns/isFuture'"},"esm":{"title":"ESM","code":"import { isFuture } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isFuture(date)"},{"type":"jsdoc","kind":"function","urlId":"isPast","category":"Common Helpers","title":"isPast","description":"Is the given date in the past?","content":{"id":"isPast","longname":"isPast","name":"isPast","kind":"member","scope":"global","description":"Is the given date in the past?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 6 October 2014, is 2 July 2014 in the past?\nvar result = isPast(new Date(2014, 6, 2))\n//=> true"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isPast"},"summary":"Is the given date in the past?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in the past"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isPast","fp":"fp/isPast"},"usage":{"commonjs":{"title":"CommonJS","code":"var isPast = require('date-fns/isPast')"},"es2015":{"title":"ES 2015","code":"import isPast from 'date-fns/isPast'"},"esm":{"title":"ESM","code":"import { isPast } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isPast(date)"},{"type":"jsdoc","kind":"function","urlId":"isValid","category":"Common Helpers","title":"isValid","description":"Is the given date valid?","content":{"id":"isValid","longname":"isValid","name":"isValid","kind":"member","scope":"global","description":"Returns false if argument is Invalid Date and true otherwise.\nArgument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\nInvalid Date is a Date, whose time value is NaN.\n\nTime value of Date: http://es5.github.io/#x15.9.1.1\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now `isValid` doesn't throw an exception\n  if the first argument is not an instance of Date.\n  Instead, argument is converted beforehand using `toDate`.\n\n  Examples:\n\n  | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n  |---------------------------|---------------|---------------|\n  | `new Date()`              | `true`        | `true`        |\n  | `new Date('2016-01-01')`  | `true`        | `true`        |\n  | `new Date('')`            | `false`       | `false`       |\n  | `new Date(1488370835081)` | `true`        | `true`        |\n  | `new Date(NaN)`           | `false`       | `false`       |\n  | `'2016-01-01'`            | `TypeError`   | `false`       |\n  | `''`                      | `TypeError`   | `false`       |\n  | `1488370835081`           | `TypeError`   | `true`        |\n  | `NaN`                     | `TypeError`   | `false`       |\n\n  We introduce this change to make *date-fns* consistent with ECMAScript behavior\n  that try to coerce arguments to the expected type\n  (which is also the case with other *date-fns* functions).","params":[{"type":{"names":["*"]},"description":"the date to check","name":"date"}],"examples":["// For the valid date:\nvar result = isValid(new Date(2014, 1, 31))\n//=> true","// For the value, convertable into a date:\nvar result = isValid(1393804800000)\n//=> true","// For the invalid date:\nvar result = isValid(new Date(''))\n//=> false"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isValid"},"summary":"Is the given date valid?","returns":[{"type":{"names":["Boolean"]},"description":"the date is valid"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["*"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isValid","fp":"fp/isValid"},"usage":{"commonjs":{"title":"CommonJS","code":"var isValid = require('date-fns/isValid')"},"es2015":{"title":"ES 2015","code":"import isValid from 'date-fns/isValid'"},"esm":{"title":"ESM","code":"import { isValid } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isValid(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isValid","category":"Common Helpers","title":"isValid","description":"Is the given date valid?","content":{"id":"isValid","longname":"isValid","name":"isValid","kind":"member","scope":"global","description":"Returns false if argument is Invalid Date and true otherwise.\nArgument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\nInvalid Date is a Date, whose time value is NaN.\n\nTime value of Date: http://es5.github.io/#x15.9.1.1\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Now `isValid` doesn't throw an exception\n  if the first argument is not an instance of Date.\n  Instead, argument is converted beforehand using `toDate`.\n\n  Examples:\n\n  | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n  |---------------------------|---------------|---------------|\n  | `new Date()`              | `true`        | `true`        |\n  | `new Date('2016-01-01')`  | `true`        | `true`        |\n  | `new Date('')`            | `false`       | `false`       |\n  | `new Date(1488370835081)` | `true`        | `true`        |\n  | `new Date(NaN)`           | `false`       | `false`       |\n  | `'2016-01-01'`            | `TypeError`   | `false`       |\n  | `''`                      | `TypeError`   | `false`       |\n  | `1488370835081`           | `TypeError`   | `true`        |\n  | `NaN`                     | `TypeError`   | `false`       |\n\n  We introduce this change to make *date-fns* consistent with ECMAScript behavior\n  that try to coerce arguments to the expected type\n  (which is also the case with other *date-fns* functions).","params":[{"type":{"names":["*"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isValid"},"summary":"Is the given date valid?","returns":[{"type":{"names":["Boolean"]},"description":"the date is valid"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["*"]},"description":"the date to check","name":"date"}],"generatedFrom":"isValid","relatedDocs":{"default":"isValid","fp":"fp/isValid"},"usage":{"commonjs":{"title":"CommonJS","code":"var isValid = require('date-fns/fp/isValid')"},"es2015":{"title":"ES 2015","code":"import isValid from 'date-fns/fp/isValid'"},"esm":{"title":"ESM","code":"import { isValid } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isValid(date)"},{"type":"jsdoc","kind":"function","urlId":"lightFormat","category":"Common Helpers","title":"lightFormat","description":"Format the date.","content":{"id":"lightFormat","longname":"lightFormat","name":"lightFormat","kind":"member","scope":"global","description":"Return the formatted date string in the given format. Unlike `format`,\n`lightFormat` doesn't use locales and outputs date using the most popular tokens.\n\n> ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n\nFormat of the string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n\nAccepted patterns:\n| Unit                            | Pattern | Result examples                   |\n|---------------------------------|---------|-----------------------------------|\n| AM, PM                          | a..aaa  | AM, PM                            |\n|                                 | aaaa    | a.m., p.m.                        |\n|                                 | aaaaa   | a, p                              |\n| Calendar year                   | y       | 44, 1, 1900, 2017                 |\n|                                 | yy      | 44, 01, 00, 17                    |\n|                                 | yyy     | 044, 001, 000, 017                |\n|                                 | yyyy    | 0044, 0001, 1900, 2017            |\n| Month (formatting)              | M       | 1, 2, ..., 12                     |\n|                                 | MM      | 01, 02, ..., 12                   |\n| Day of month                    | d       | 1, 2, ..., 31                     |\n|                                 | dd      | 01, 02, ..., 31                   |\n| Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n|                                 | hh      | 01, 02, ..., 11, 12               |\n| Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n|                                 | HH      | 00, 01, 02, ..., 23               |\n| Minute                          | m       | 0, 1, ..., 59                     |\n|                                 | mm      | 00, 01, ..., 59                   |\n| Second                          | s       | 0, 1, ..., 59                     |\n|                                 | ss      | 00, 01, ..., 59                   |\n| Fraction of second              | S       | 0, 1, ..., 9                      |\n|                                 | SS      | 00, 01, ..., 99                   |\n|                                 | SSS     | 000, 0001, ..., 999               |\n|                                 | SSSS    | ...                               |","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["String"]},"description":"the string of tokens","name":"format"}],"examples":["var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n//=> '1987-02-11'"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":23,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lightFormat"},"summary":"Format the date.","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["String"]},"description":"the string of tokens","name":"format"}],"relatedDocs":{"default":"lightFormat","fp":"fp/lightFormat"},"usage":{"commonjs":{"title":"CommonJS","code":"var lightFormat = require('date-fns/lightFormat')"},"es2015":{"title":"ES 2015","code":"import lightFormat from 'date-fns/lightFormat'"},"esm":{"title":"ESM","code":"import { lightFormat } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lightFormat(date, format)"},{"type":"jsdoc","kind":"function","urlId":"fp/lightFormat","category":"Common Helpers","title":"lightFormat","description":"Format the date.","content":{"id":"lightFormat","longname":"lightFormat","name":"lightFormat","kind":"member","scope":"global","description":"Return the formatted date string in the given format. Unlike `format`,\n`lightFormat` doesn't use locales and outputs date using the most popular tokens.\n\n> ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n\nFormat of the string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n\nAccepted patterns:\n| Unit                            | Pattern | Result examples                   |\n|---------------------------------|---------|-----------------------------------|\n| AM, PM                          | a..aaa  | AM, PM                            |\n|                                 | aaaa    | a.m., p.m.                        |\n|                                 | aaaaa   | a, p                              |\n| Calendar year                   | y       | 44, 1, 1900, 2017                 |\n|                                 | yy      | 44, 01, 00, 17                    |\n|                                 | yyy     | 044, 001, 000, 017                |\n|                                 | yyyy    | 0044, 0001, 1900, 2017            |\n| Month (formatting)              | M       | 1, 2, ..., 12                     |\n|                                 | MM      | 01, 02, ..., 12                   |\n| Day of month                    | d       | 1, 2, ..., 31                     |\n|                                 | dd      | 01, 02, ..., 31                   |\n| Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n|                                 | hh      | 01, 02, ..., 11, 12               |\n| Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n|                                 | HH      | 00, 01, 02, ..., 23               |\n| Minute                          | m       | 0, 1, ..., 59                     |\n|                                 | mm      | 00, 01, ..., 59                   |\n| Second                          | s       | 0, 1, ..., 59                     |\n|                                 | ss      | 00, 01, ..., 59                   |\n| Fraction of second              | S       | 0, 1, ..., 9                      |\n|                                 | SS      | 00, 01, ..., 99                   |\n|                                 | SSS     | 000, 0001, ..., 999               |\n|                                 | SSSS    | ...                               |","params":[{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":23,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lightFormat"},"summary":"Format the date.","returns":[{"type":{"names":["String"]},"description":"the formatted date string"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["String"]},"description":"the string of tokens","name":"format"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lightFormat","relatedDocs":{"default":"lightFormat","fp":"fp/lightFormat"},"usage":{"commonjs":{"title":"CommonJS","code":"var lightFormat = require('date-fns/fp/lightFormat')"},"es2015":{"title":"ES 2015","code":"import lightFormat from 'date-fns/fp/lightFormat'"},"esm":{"title":"ESM","code":"import { lightFormat } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lightFormat(format)(date)"},{"type":"jsdoc","kind":"function","urlId":"max","category":"Common Helpers","title":"max","description":"Return the latest of the given dates.","content":{"id":"max","longname":"max","name":"max","kind":"member","scope":"global","description":"Return the latest of the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- `max` function now accepts an array of dates rather than spread arguments.\n\n  ```javascript\n  // Before v2.0.0\n  var date1 = new Date(1989, 6, 10)\n  var date2 = new Date(1987, 1, 11)\n  var maxDate = max(date1, date2)\n\n  // v2.0.0 onward:\n  var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n  var maxDate = max(dates)\n  ```","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"examples":["// Which of these dates is the latest?\nvar result = max([\n  new Date(1989, 6, 10),\n  new Date(1987, 1, 11),\n  new Date(1995, 6, 2),\n  new Date(1990, 0, 1)\n])\n//=> Sun Jul 02 1995 00:00:00"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/max"},"summary":"Return the latest of the given dates.","returns":[{"type":{"names":["Date"]},"description":"the latest of the dates"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"relatedDocs":{"default":"max","fp":"fp/max"},"usage":{"commonjs":{"title":"CommonJS","code":"var max = require('date-fns/max')"},"es2015":{"title":"ES 2015","code":"import max from 'date-fns/max'"},"esm":{"title":"ESM","code":"import { max } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"max(datesArray)"},{"type":"jsdoc","kind":"function","urlId":"fp/max","category":"Common Helpers","title":"max","description":"Return the latest of the given dates.","content":{"id":"max","longname":"max","name":"max","kind":"member","scope":"global","description":"Return the latest of the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- `max` function now accepts an array of dates rather than spread arguments.\n\n  ```javascript\n  // Before v2.0.0\n  var date1 = new Date(1989, 6, 10)\n  var date2 = new Date(1987, 1, 11)\n  var maxDate = max(date1, date2)\n\n  // v2.0.0 onward:\n  var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n  var maxDate = max(dates)\n  ```","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/max"},"summary":"Return the latest of the given dates.","returns":[{"type":{"names":["Date"]},"description":"the latest of the dates"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"generatedFrom":"max","relatedDocs":{"default":"max","fp":"fp/max"},"usage":{"commonjs":{"title":"CommonJS","code":"var max = require('date-fns/fp/max')"},"es2015":{"title":"ES 2015","code":"import max from 'date-fns/fp/max'"},"esm":{"title":"ESM","code":"import { max } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"max(datesArray)"},{"type":"jsdoc","kind":"function","urlId":"min","category":"Common Helpers","title":"min","description":"Return the earliest of the given dates.","content":{"id":"min","longname":"min","name":"min","kind":"member","scope":"global","description":"Return the earliest of the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- `min` function now accepts an array of dates rather than spread arguments.\n\n  ```javascript\n  // Before v2.0.0\n  var date1 = new Date(1989, 6, 10)\n  var date2 = new Date(1987, 1, 11)\n  var minDate = min(date1, date2)\n\n  // v2.0.0 onward:\n  var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n  var minDate = min(dates)\n  ```","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"examples":["// Which of these dates is the earliest?\nvar result = min([\n  new Date(1989, 6, 10),\n  new Date(1987, 1, 11),\n  new Date(1995, 6, 2),\n  new Date(1990, 0, 1)\n])\n//=> Wed Feb 11 1987 00:00:00"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/min"},"summary":"Return the earliest of the given dates.","returns":[{"type":{"names":["Date"]},"description":"the earliest of the dates"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"relatedDocs":{"default":"min","fp":"fp/min"},"usage":{"commonjs":{"title":"CommonJS","code":"var min = require('date-fns/min')"},"es2015":{"title":"ES 2015","code":"import min from 'date-fns/min'"},"esm":{"title":"ESM","code":"import { min } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"min(datesArray)"},{"type":"jsdoc","kind":"function","urlId":"fp/min","category":"Common Helpers","title":"min","description":"Return the earliest of the given dates.","content":{"id":"min","longname":"min","name":"min","kind":"member","scope":"global","description":"Return the earliest of the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- `min` function now accepts an array of dates rather than spread arguments.\n\n  ```javascript\n  // Before v2.0.0\n  var date1 = new Date(1989, 6, 10)\n  var date2 = new Date(1987, 1, 11)\n  var minDate = min(date1, date2)\n\n  // v2.0.0 onward:\n  var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n  var minDate = min(dates)\n  ```","params":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/min"},"summary":"Return the earliest of the given dates.","returns":[{"type":{"names":["Date"]},"description":"the earliest of the dates"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Array.<Date>","Array.<Number>"]},"description":"the dates to compare","name":"datesArray"}],"generatedFrom":"min","relatedDocs":{"default":"min","fp":"fp/min"},"usage":{"commonjs":{"title":"CommonJS","code":"var min = require('date-fns/fp/min')"},"es2015":{"title":"ES 2015","code":"import min from 'date-fns/fp/min'"},"esm":{"title":"ESM","code":"import { min } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"min(datesArray)"},{"type":"jsdoc","kind":"function","urlId":"parse","category":"Common Helpers","title":"parse","description":"Parse the date.","content":{"id":"parse","longname":"parse","name":"parse","kind":"member","scope":"global","description":"Return the date parsed from string using the given format string.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters in the format string wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n\nFormat of the format string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 5 below the table).\n\nNot all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\nand will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n\n```javascript\nparse('23 AM', 'HH a', new Date())\n//=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n```\n\nSee the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n\nAccepted format string patterns:\n| Unit                            |Prior| Pattern | Result examples                   | Notes |\n|---------------------------------|-----|---------|-----------------------------------|-------|\n| Era                             | 140 | G..GGG  | AD, BC                            |       |\n|                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 |     | GGGGG   | A, B                              |       |\n| Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n|                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n|                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n|                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n|                                 |     | yyyyy   | ...                               | 2,4   |\n| Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n|                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n|                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n|                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n|                                 |     | YYYYY   | ...                               | 2,4   |\n| ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n|                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n|                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n|                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n|                                 |     | RRRRR   | ...                               | 2,4,5 |\n| Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n|                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n|                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n|                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n|                                 |     | uuuuu   | ...                               | 2,4   |\n| Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n|                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | QQ      | 01, 02, 03, 04                    |       |\n|                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n|                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | qq      | 01, 02, 03, 04                    |       |\n|                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n| Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n|                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | MM      | 01, 02, ..., 12                   |       |\n|                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 |     | MMMM    | January, February, ..., December  | 2     |\n|                                 |     | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n|                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | LL      | 01, 02, ..., 12                   |       |\n|                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 |     | LLLL    | January, February, ..., December  | 2     |\n|                                 |     | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n|                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n|                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | II      | 01, 02, ..., 53                   | 5     |\n| Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n|                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n|                                 |     | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n|                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n|                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n|                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 |     | DDDD    | ...                               | 2     |\n| Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n|                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n|                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n|                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n|                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n|                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n|                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n| Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | ee      | 02, 03, ..., 01                   |       |\n|                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | cc      | 02, 03, ..., 01                   |       |\n|                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n|                                 |     | aaaa    | a.m., p.m.                        | 2     |\n|                                 |     | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 |     | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n|                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n|                                 |     | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n|                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n|                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n|                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n|                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n|                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n|                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n|                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n|                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n|                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | mm      | 00, 01, ..., 59                   |       |\n| Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n|                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | ss      | 00, 01, ..., 59                   |       |\n| Seconds timestamp               |  40 | t       | 512969520                         |       |\n|                                 |     | tt      | ...                               | 2     |\n| Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n|                                 |     | SS      | 00, 01, ..., 99                   |       |\n|                                 |     | SSS     | 000, 0001, ..., 999               |       |\n|                                 |     | SSSS    | ...                               | 2     |\n| Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n|                                 |     | TT      | ...                               | 2     |\n| Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n|                                 |     | XX      | -0800, +0530, Z                   |       |\n|                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n|                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n|                                 |     | xx      | -0800, +0530, +0000               |       |\n|                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n|                                 |     | PP      | May 29, 1453                      |       |\n|                                 |     | PPP     | May 29th, 1453                    |       |\n|                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n| Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n|                                 |     | pp      | 12:00:00 AM                       |       |\n| Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n|                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n|                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n|                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular.\n   In `format` function, they will produce different result:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n   `parse` will try to match both formatting and stand-alone units interchangably.\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table:\n   - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n     as wide as the sequence\n   - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n     These variations are marked with \"2\" in the last column of the table.\n\n3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n4. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n\n   `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n\n   `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n\n   while `uu` will just assign the year as is:\n\n   `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n\n   `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n   and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n\n5. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n   on the given locale.\n\n   using `en-US` locale: `P` => `MM/dd/yyyy`\n   using `en-US` locale: `p` => `hh:mm a`\n   using `pt-BR` locale: `P` => `dd/MM/yyyy`\n   using `pt-BR` locale: `p` => `HH:mm`\n\nValues will be assigned to the date in the descending order of its unit's priority.\nUnits of an equal priority overwrite each other in the order of appearance.\n\nIf no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\nthe values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n\n`referenceDate` must be passed for correct work of the function.\nIf you're not sure which `referenceDate` to supply, create a new instance of Date:\n`parse('02/11/2014', 'MM/dd/yyyy', new Date())`\nIn this case parsing will be done in the context of the current date.\nIf `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\nthen `Invalid Date` will be returned.\n\nThe result may vary by locale.\n\nIf `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n\nIf parsing failed, `Invalid Date` will be returned.\nInvalid Date is a Date, whose time value is NaN.\nTime value of Date: http://es5.github.io/#x15.9.1.1\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Old `parse` was renamed to `toDate`.\n  Now `parse` is a new function which parses a string using a provided format.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  toDate('2016-01-01')\n  parse('2016-01-01', 'yyyy-MM-dd', new Date())\n  ```","params":[{"type":{"names":["String"]},"description":"the string to parse","name":"dateString"},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString"},{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalWeekYearTokens"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalDayOfYearTokens"}],"examples":["// Parse 11 February 2014 from middle-endian format:\nvar result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n//=> Tue Feb 11 2014 00:00:00","// Parse 28th of February in Esperanto locale in the context of 2010 year:\nimport eo from 'date-fns/locale/eo'\nvar result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n  locale: eo\n})\n//=> Sun Feb 28 2010 00:00:00"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"3 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `match` property"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":41,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parse"},"summary":"Parse the date.","returns":[{"type":{"names":["Date"]},"description":"the parsed date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["String"]},"description":"the string to parse","name":"dateString"},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString"},{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"useAdditionalWeekYearTokens","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"useAdditionalDayOfYearTokens","isProperty":true}]}],"relatedDocs":{"default":"parse","fp":"fp/parse"},"usage":{"commonjs":{"title":"CommonJS","code":"var parse = require('date-fns/parse')"},"es2015":{"title":"ES 2015","code":"import parse from 'date-fns/parse'"},"esm":{"title":"ESM","code":"import { parse } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"parse(dateString, formatString, referenceDate, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/parse","category":"Common Helpers","title":"parse","description":"Parse the date.","content":{"id":"parse","longname":"parse","name":"parse","kind":"member","scope":"global","description":"Return the date parsed from string using the given format string.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters in the format string wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n\nFormat of the format string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 5 below the table).\n\nNot all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\nand will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n\n```javascript\nparse('23 AM', 'HH a', new Date())\n//=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n```\n\nSee the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n\nAccepted format string patterns:\n| Unit                            |Prior| Pattern | Result examples                   | Notes |\n|---------------------------------|-----|---------|-----------------------------------|-------|\n| Era                             | 140 | G..GGG  | AD, BC                            |       |\n|                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 |     | GGGGG   | A, B                              |       |\n| Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n|                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n|                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n|                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n|                                 |     | yyyyy   | ...                               | 2,4   |\n| Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n|                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n|                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n|                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n|                                 |     | YYYYY   | ...                               | 2,4   |\n| ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n|                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n|                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n|                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n|                                 |     | RRRRR   | ...                               | 2,4,5 |\n| Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n|                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n|                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n|                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n|                                 |     | uuuuu   | ...                               | 2,4   |\n| Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n|                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | QQ      | 01, 02, 03, 04                    |       |\n|                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n|                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | qq      | 01, 02, 03, 04                    |       |\n|                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n| Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n|                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | MM      | 01, 02, ..., 12                   |       |\n|                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 |     | MMMM    | January, February, ..., December  | 2     |\n|                                 |     | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n|                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | LL      | 01, 02, ..., 12                   |       |\n|                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 |     | LLLL    | January, February, ..., December  | 2     |\n|                                 |     | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n|                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n|                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | II      | 01, 02, ..., 53                   | 5     |\n| Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n|                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n|                                 |     | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n|                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n|                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n|                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 |     | DDDD    | ...                               | 2     |\n| Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n|                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n|                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n|                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n|                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n|                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n|                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n| Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | ee      | 02, 03, ..., 01                   |       |\n|                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | cc      | 02, 03, ..., 01                   |       |\n|                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n|                                 |     | aaaa    | a.m., p.m.                        | 2     |\n|                                 |     | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 |     | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n|                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n|                                 |     | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n|                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n|                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n|                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n|                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n|                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n|                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n|                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n|                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n|                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | mm      | 00, 01, ..., 59                   |       |\n| Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n|                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | ss      | 00, 01, ..., 59                   |       |\n| Seconds timestamp               |  40 | t       | 512969520                         |       |\n|                                 |     | tt      | ...                               | 2     |\n| Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n|                                 |     | SS      | 00, 01, ..., 99                   |       |\n|                                 |     | SSS     | 000, 0001, ..., 999               |       |\n|                                 |     | SSSS    | ...                               | 2     |\n| Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n|                                 |     | TT      | ...                               | 2     |\n| Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n|                                 |     | XX      | -0800, +0530, Z                   |       |\n|                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n|                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n|                                 |     | xx      | -0800, +0530, +0000               |       |\n|                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n|                                 |     | PP      | May 29, 1453                      |       |\n|                                 |     | PPP     | May 29th, 1453                    |       |\n|                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n| Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n|                                 |     | pp      | 12:00:00 AM                       |       |\n| Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n|                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n|                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n|                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular.\n   In `format` function, they will produce different result:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n   `parse` will try to match both formatting and stand-alone units interchangably.\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table:\n   - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n     as wide as the sequence\n   - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n     These variations are marked with \"2\" in the last column of the table.\n\n3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n4. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n\n   `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n\n   `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n\n   while `uu` will just assign the year as is:\n\n   `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n\n   `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n   and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n\n5. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n   on the given locale.\n\n   using `en-US` locale: `P` => `MM/dd/yyyy`\n   using `en-US` locale: `p` => `hh:mm a`\n   using `pt-BR` locale: `P` => `dd/MM/yyyy`\n   using `pt-BR` locale: `p` => `HH:mm`\n\nValues will be assigned to the date in the descending order of its unit's priority.\nUnits of an equal priority overwrite each other in the order of appearance.\n\nIf no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\nthe values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n\n`referenceDate` must be passed for correct work of the function.\nIf you're not sure which `referenceDate` to supply, create a new instance of Date:\n`parse('02/11/2014', 'MM/dd/yyyy', new Date())`\nIn this case parsing will be done in the context of the current date.\nIf `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\nthen `Invalid Date` will be returned.\n\nThe result may vary by locale.\n\nIf `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n\nIf parsing failed, `Invalid Date` will be returned.\nInvalid Date is a Date, whose time value is NaN.\nTime value of Date: http://es5.github.io/#x15.9.1.1\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Old `parse` was renamed to `toDate`.\n  Now `parse` is a new function which parses a string using a provided format.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  toDate('2016-01-01')\n  parse('2016-01-01', 'yyyy-MM-dd', new Date())\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate"},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString"},{"type":{"names":["String"]},"description":"the string to parse","name":"dateString"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"3 arguments required"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":41,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parse"},"summary":"Parse the date.","returns":[{"type":{"names":["Date"]},"description":"the parsed date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate"},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString"},{"type":{"names":["String"]},"description":"the string to parse","name":"dateString"}],"generatedFrom":"parse","relatedDocs":{"default":"parse","fp":"fp/parse"},"usage":{"commonjs":{"title":"CommonJS","code":"var parse = require('date-fns/fp/parse')"},"es2015":{"title":"ES 2015","code":"import parse from 'date-fns/fp/parse'"},"esm":{"title":"ESM","code":"import { parse } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"parse(referenceDate)(formatString)(dateString)"},{"type":"jsdoc","kind":"function","urlId":"fp/parseWithOptions","category":"Common Helpers","title":"parseWithOptions","description":"Parse the date.","content":{"id":"parseWithOptions","longname":"parseWithOptions","name":"parseWithOptions","kind":"member","scope":"global","description":"Return the date parsed from string using the given format string.\n\n> ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n> See: https://git.io/fxCyr\n\nThe characters in the format string wrapped between two single quotes characters (') are escaped.\nTwo single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n\nFormat of the format string is based on Unicode Technical Standard #35:\nhttps://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\nwith a few additions (see note 5 below the table).\n\nNot all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\nand will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n\n```javascript\nparse('23 AM', 'HH a', new Date())\n//=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n```\n\nSee the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n\nAccepted format string patterns:\n| Unit                            |Prior| Pattern | Result examples                   | Notes |\n|---------------------------------|-----|---------|-----------------------------------|-------|\n| Era                             | 140 | G..GGG  | AD, BC                            |       |\n|                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n|                                 |     | GGGGG   | A, B                              |       |\n| Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n|                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n|                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n|                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n|                                 |     | yyyyy   | ...                               | 2,4   |\n| Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n|                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n|                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n|                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n|                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n|                                 |     | YYYYY   | ...                               | 2,4   |\n| ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n|                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n|                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n|                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n|                                 |     | RRRRR   | ...                               | 2,4,5 |\n| Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n|                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n|                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n|                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n|                                 |     | uuuuu   | ...                               | 2,4   |\n| Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n|                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | QQ      | 01, 02, 03, 04                    |       |\n|                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n| Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n|                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n|                                 |     | qq      | 01, 02, 03, 04                    |       |\n|                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n|                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n|                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n| Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n|                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | MM      | 01, 02, ..., 12                   |       |\n|                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n|                                 |     | MMMM    | January, February, ..., December  | 2     |\n|                                 |     | MMMMM   | J, F, ..., D                      |       |\n| Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n|                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n|                                 |     | LL      | 01, 02, ..., 12                   |       |\n|                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n|                                 |     | LLLL    | January, February, ..., December  | 2     |\n|                                 |     | LLLLL   | J, F, ..., D                      |       |\n| Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n|                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | ww      | 01, 02, ..., 53                   |       |\n| ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n|                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n|                                 |     | II      | 01, 02, ..., 53                   | 5     |\n| Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n|                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n|                                 |     | dd      | 01, 02, ..., 31                   |       |\n| Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n|                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n|                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n|                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n|                                 |     | DDDD    | ...                               | 2     |\n| Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n|                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n|                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n|                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n|                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n|                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n|                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n|                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n| Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | ee      | 02, 03, ..., 01                   |       |\n|                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n|                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n|                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n|                                 |     | cc      | 02, 03, ..., 01                   |       |\n|                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n|                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n|                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n|                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n| AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n|                                 |     | aaaa    | a.m., p.m.                        | 2     |\n|                                 |     | aaaaa   | a, p                              |       |\n| AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n|                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n|                                 |     | bbbbb   | a, p, n, mi                       |       |\n| Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n|                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n|                                 |     | BBBBB   | at night, in the morning, ...     |       |\n| Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n|                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n|                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n| Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n|                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n|                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n| Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n|                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n|                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n| Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n|                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n|                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n| Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n|                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | mm      | 00, 01, ..., 59                   |       |\n| Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n|                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n|                                 |     | ss      | 00, 01, ..., 59                   |       |\n| Seconds timestamp               |  40 | t       | 512969520                         |       |\n|                                 |     | tt      | ...                               | 2     |\n| Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n|                                 |     | SS      | 00, 01, ..., 99                   |       |\n|                                 |     | SSS     | 000, 0001, ..., 999               |       |\n|                                 |     | SSSS    | ...                               | 2     |\n| Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n|                                 |     | TT      | ...                               | 2     |\n| Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n|                                 |     | XX      | -0800, +0530, Z                   |       |\n|                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n|                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n|                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n| Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n|                                 |     | xx      | -0800, +0530, +0000               |       |\n|                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n|                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n|                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n| Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n|                                 |     | PP      | May 29, 1453                      |       |\n|                                 |     | PPP     | May 29th, 1453                    |       |\n|                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n| Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n|                                 |     | pp      | 12:00:00 AM                       |       |\n| Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n|                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n|                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n|                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\nNotes:\n1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n   are the same as \"stand-alone\" units, but are different in some languages.\n   \"Formatting\" units are declined according to the rules of the language\n   in the context of a date. \"Stand-alone\" units are always nominative singular.\n   In `format` function, they will produce different result:\n\n   `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n\n   `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n\n   `parse` will try to match both formatting and stand-alone units interchangably.\n\n2. Any sequence of the identical letters is a pattern, unless it is escaped by\n   the single quote characters (see below).\n   If the sequence is longer than listed in table:\n   - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n     as wide as the sequence\n   - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n     These variations are marked with \"2\" in the last column of the table.\n\n3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n   These tokens represent the shortest form of the quarter.\n\n4. The main difference between `y` and `u` patterns are B.C. years:\n\n   | Year | `y` | `u` |\n   |------|-----|-----|\n   | AC 1 |   1 |   1 |\n   | BC 1 |   1 |   0 |\n   | BC 2 |   2 |  -1 |\n\n   Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n\n   `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n\n   `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n\n   while `uu` will just assign the year as is:\n\n   `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n\n   `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n\n   The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n   except local week-numbering years are dependent on `options.weekStartsOn`\n   and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n   and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n\n5. These patterns are not in the Unicode Technical Standard #35:\n   - `i`: ISO day of week\n   - `I`: ISO week of year\n   - `R`: ISO week-numbering year\n   - `o`: ordinal number modifier\n   - `P`: long localized date\n   - `p`: long localized time\n\n6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n   You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n\n7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n   You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n\n8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n   on the given locale.\n\n   using `en-US` locale: `P` => `MM/dd/yyyy`\n   using `en-US` locale: `p` => `hh:mm a`\n   using `pt-BR` locale: `P` => `dd/MM/yyyy`\n   using `pt-BR` locale: `p` => `HH:mm`\n\nValues will be assigned to the date in the descending order of its unit's priority.\nUnits of an equal priority overwrite each other in the order of appearance.\n\nIf no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\nthe values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n\n`referenceDate` must be passed for correct work of the function.\nIf you're not sure which `referenceDate` to supply, create a new instance of Date:\n`parse('02/11/2014', 'MM/dd/yyyy', new Date())`\nIn this case parsing will be done in the context of the current date.\nIf `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\nthen `Invalid Date` will be returned.\n\nThe result may vary by locale.\n\nIf `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n\nIf parsing failed, `Invalid Date` will be returned.\nInvalid Date is a Date, whose time value is NaN.\nTime value of Date: http://es5.github.io/#x15.9.1.1\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- Old `parse` was renamed to `toDate`.\n  Now `parse` is a new function which parses a string using a provided format.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  toDate('2016-01-01')\n  parse('2016-01-01', 'yyyy-MM-dd', new Date())\n  ```","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalDayOfYearTokens"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"options.useAdditionalWeekYearTokens"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate","optional":false},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString","optional":false},{"type":{"names":["String"]},"description":"the string to parse","name":"dateString","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"3 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"},{"type":{"names":["RangeError"]},"description":"`options.locale` must contain `match` property"},{"type":{"names":["RangeError"]},"description":"use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr"},{"type":{"names":["RangeError"]},"description":"format string contains an unescaped latin alphabet character"}],"meta":{"lineno":41,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parse"},"summary":"Parse the date.","returns":[{"type":{"names":["Date"]},"description":"the parsed date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the day of year tokens `D` and `DD`;\n  see: https://git.io/fxCyr","name":"useAdditionalDayOfYearTokens","isProperty":true},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n  see: https://git.io/fxCyr","name":"useAdditionalWeekYearTokens","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"defines values missing from the parsed dateString","name":"referenceDate","optional":false},{"type":{"names":["String"]},"description":"the string of tokens","name":"formatString","optional":false},{"type":{"names":["String"]},"description":"the string to parse","name":"dateString","optional":false}],"generatedFrom":"parse","relatedDocs":{"default":"parse","fp":"fp/parse","fpWithOptions":"fp/parseWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var parse = require('date-fns/fp/parse')"},"es2015":{"title":"ES 2015","code":"import parse from 'date-fns/fp/parse'"},"esm":{"title":"ESM","code":"import { parse } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"parse(options)(referenceDate)(formatString)(dateString)"},{"type":"jsdoc","kind":"function","urlId":"parseISO","category":"Common Helpers","title":"parseISO","description":"Parse ISO string","content":{"id":"parseISO","longname":"parseISO","name":"parseISO","kind":"member","scope":"global","description":"Parse the given string in ISO 8601 format and return an instance of Date.\n\nFunction accepts complete ISO 8601 formats as well as partial implementations.\nISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n\nIf the argument isn't a string, the function cannot parse the string or\nthe values are invalid, it returns Invalid Date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The previous `parse` implementation was renamed to `parseISO`.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  parseISO('2016-01-01')\n  ```\n\n- `parseISO` now validates separate date and time values in ISO-8601 strings\n  and returns `Invalid Date` if the date is invalid.\n\n  ```javascript\n  parseISO('2018-13-32')\n  //=> Invalid Date\n  ```\n\n- `parseISO` now doesn't fall back to `new Date` constructor\n  if it fails to parse a string argument. Instead, it returns `Invalid Date`.","params":[{"type":{"names":["String"]},"description":"the value to convert","name":"argument"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"the additional number of digits in the extended year format","name":"options.additionalDigits"}],"examples":["// Convert string '2014-02-11T11:30:30' to date:\nvar result = parseISO('2014-02-11T11:30:30')\n//=> Tue Feb 11 2014 11:30:30","// Convert string '+02014101' to date,\n// if the additional number of digits in the extended year format is 1:\nvar result = parseISO('+02014101', { additionalDigits: 1 })\n//=> Fri Apr 11 2014 00:00:00"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":18,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parseISO"},"summary":"Parse ISO string","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["String"]},"description":"the value to convert","name":"argument"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"the additional number of digits in the extended year format","name":"additionalDigits","isProperty":true}]}],"relatedDocs":{"default":"parseISO","fp":"fp/parseISO"},"usage":{"commonjs":{"title":"CommonJS","code":"var parseISO = require('date-fns/parseISO')"},"es2015":{"title":"ES 2015","code":"import parseISO from 'date-fns/parseISO'"},"esm":{"title":"ESM","code":"import { parseISO } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"parseISO(argument, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/parseISO","category":"Common Helpers","title":"parseISO","description":"Parse ISO string","content":{"id":"parseISO","longname":"parseISO","name":"parseISO","kind":"member","scope":"global","description":"Parse the given string in ISO 8601 format and return an instance of Date.\n\nFunction accepts complete ISO 8601 formats as well as partial implementations.\nISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n\nIf the argument isn't a string, the function cannot parse the string or\nthe values are invalid, it returns Invalid Date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The previous `parse` implementation was renamed to `parseISO`.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  parseISO('2016-01-01')\n  ```\n\n- `parseISO` now validates separate date and time values in ISO-8601 strings\n  and returns `Invalid Date` if the date is invalid.\n\n  ```javascript\n  parseISO('2018-13-32')\n  //=> Invalid Date\n  ```\n\n- `parseISO` now doesn't fall back to `new Date` constructor\n  if it fails to parse a string argument. Instead, it returns `Invalid Date`.","params":[{"type":{"names":["String"]},"description":"the value to convert","name":"argument"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":18,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parseISO"},"summary":"Parse ISO string","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["String"]},"description":"the value to convert","name":"argument"}],"generatedFrom":"parseISO","relatedDocs":{"default":"parseISO","fp":"fp/parseISO"},"usage":{"commonjs":{"title":"CommonJS","code":"var parseISO = require('date-fns/fp/parseISO')"},"es2015":{"title":"ES 2015","code":"import parseISO from 'date-fns/fp/parseISO'"},"esm":{"title":"ESM","code":"import { parseISO } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"parseISO(argument)"},{"type":"jsdoc","kind":"function","urlId":"fp/parseISOWithOptions","category":"Common Helpers","title":"parseISOWithOptions","description":"Parse ISO string","content":{"id":"parseISOWithOptions","longname":"parseISOWithOptions","name":"parseISOWithOptions","kind":"member","scope":"global","description":"Parse the given string in ISO 8601 format and return an instance of Date.\n\nFunction accepts complete ISO 8601 formats as well as partial implementations.\nISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n\nIf the argument isn't a string, the function cannot parse the string or\nthe values are invalid, it returns Invalid Date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The previous `parse` implementation was renamed to `parseISO`.\n\n  ```javascript\n  // Before v2.0.0\n  parse('2016-01-01')\n\n  // v2.0.0 onward\n  parseISO('2016-01-01')\n  ```\n\n- `parseISO` now validates separate date and time values in ISO-8601 strings\n  and returns `Invalid Date` if the date is invalid.\n\n  ```javascript\n  parseISO('2018-13-32')\n  //=> Invalid Date\n  ```\n\n- `parseISO` now doesn't fall back to `new Date` constructor\n  if it fails to parse a string argument. Instead, it returns `Invalid Date`.","params":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"the additional number of digits in the extended year format","name":"options.additionalDigits"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["String"]},"description":"the value to convert","name":"argument","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":18,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parseISO"},"summary":"Parse ISO string","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"the additional number of digits in the extended year format","name":"additionalDigits","isProperty":true}]},{"type":{"names":["String"]},"description":"the value to convert","name":"argument","optional":false}],"generatedFrom":"parseISO","relatedDocs":{"default":"parseISO","fp":"fp/parseISO","fpWithOptions":"fp/parseISOWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var parseISO = require('date-fns/fp/parseISO')"},"es2015":{"title":"ES 2015","code":"import parseISO from 'date-fns/fp/parseISO'"},"esm":{"title":"ESM","code":"import { parseISO } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"parseISO(options)(argument)"},{"type":"jsdoc","kind":"function","urlId":"parseJSON","category":"Common Helpers","title":"parseJSON","description":"Parse a JSON date string","content":{"id":"parseJSON","longname":"parseJSON","name":"parseJSON","kind":"member","scope":"global","description":"Converts a complete ISO date string in UTC time, the typical format for transmitting\na date in JSON, to a JavaScript `Date` instance.\n\nThis is a minimal implementation for converting dates retrieved from a JSON API to\na `Date` instance which can be used with other functions in the `date-fns` library.\nThe following formats are supported:\n\n    - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n    - `2000-03-15T05:20:10Z`: Without milliseconds\n    - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n    - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n    - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n    - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n    - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n\nFor convenience and ease of use these other input types are also supported\nvia [toDate]{@link https://date-fns.org/docs/toDate}:\n\n    - A `Date` instance will be cloned\n    - A `number` will be treated as a timestamp\n\nAny other input type or invalid date strings will return an `Invalid Date`.","params":[{"type":{"names":["String","Number","Date"]},"description":"A fully formed ISO8601 date string to convert","name":"argument"}],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parseJSON"},"summary":"Parse a JSON date string","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["String","Number","Date"]},"description":"A fully formed ISO8601 date string to convert","name":"argument"}],"relatedDocs":{"default":"parseJSON","fp":"fp/parseJSON"},"usage":{"commonjs":{"title":"CommonJS","code":"var parseJSON = require('date-fns/parseJSON')"},"es2015":{"title":"ES 2015","code":"import parseJSON from 'date-fns/parseJSON'"},"esm":{"title":"ESM","code":"import { parseJSON } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"parseJSON(argument)"},{"type":"jsdoc","kind":"function","urlId":"fp/parseJSON","category":"Common Helpers","title":"parseJSON","description":"Parse a JSON date string","content":{"id":"parseJSON","longname":"parseJSON","name":"parseJSON","kind":"member","scope":"global","description":"Converts a complete ISO date string in UTC time, the typical format for transmitting\na date in JSON, to a JavaScript `Date` instance.\n\nThis is a minimal implementation for converting dates retrieved from a JSON API to\na `Date` instance which can be used with other functions in the `date-fns` library.\nThe following formats are supported:\n\n    - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n    - `2000-03-15T05:20:10Z`: Without milliseconds\n    - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n    - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n    - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n    - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n    - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n\nFor convenience and ease of use these other input types are also supported\nvia [toDate]{@link https://date-fns.org/docs/toDate}:\n\n    - A `Date` instance will be cloned\n    - A `number` will be treated as a timestamp\n\nAny other input type or invalid date strings will return an `Invalid Date`.","params":[{"type":{"names":["String","Number","Date"]},"description":"A fully formed ISO8601 date string to convert","name":"argument"}],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/parseJSON"},"summary":"Parse a JSON date string","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0,"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information"},"pure":true,"isFPFn":true,"args":[{"type":{"names":["String","Number","Date"]},"description":"A fully formed ISO8601 date string to convert","name":"argument"}],"generatedFrom":"parseJSON","relatedDocs":{"default":"parseJSON","fp":"fp/parseJSON"},"usage":{"commonjs":{"title":"CommonJS","code":"var parseJSON = require('date-fns/fp/parseJSON')"},"es2015":{"title":"ES 2015","code":"import parseJSON from 'date-fns/fp/parseJSON'"},"esm":{"title":"ESM","code":"import { parseJSON } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"parseJSON(argument)"},{"type":"jsdoc","kind":"function","urlId":"set","category":"Common Helpers","title":"set","description":"Set date values to a given date.","content":{"id":"set","longname":"set","name":"set","kind":"member","scope":"global","description":"Set date values to a given date.\n\nSets time values to date from object `values`.\nA value is not set if it is undefined or null or doesn't exist in `values`.\n\nNote about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\nto use native `Date#setX` methods. If you use this function, you may not want to include the\nother `setX` functions that date-fns provides if you are concerned about the bundle size.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Object"]},"description":"an object with options","name":"values"},{"type":{"names":["Number"]},"optional":true,"description":"the number of years to be set","name":"values.year"},{"type":{"names":["Number"]},"optional":true,"description":"the number of months to be set","name":"values.month"},{"type":{"names":["Number"]},"optional":true,"description":"the number of days to be set","name":"values.date"},{"type":{"names":["Number"]},"optional":true,"description":"the number of hours to be set","name":"values.hours"},{"type":{"names":["Number"]},"optional":true,"description":"the number of minutes to be set","name":"values.minutes"},{"type":{"names":["Number"]},"optional":true,"description":"the number of seconds to be set","name":"values.seconds"},{"type":{"names":["Number"]},"optional":true,"description":"the number of milliseconds to be set","name":"values.milliseconds"}],"examples":["// Transform 1 September 2014 into 20 October 2015 in a single line:\nvar result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n//=> Tue Oct 20 2015 00:00:00","// Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\nvar result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n//=> Mon Sep 01 2014 12:23:45"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`values` must be an object"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/set"},"summary":"Set date values to a given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with options set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Object"]},"description":"an object with options","name":"values","props":[{"type":{"names":["Number"]},"optional":true,"description":"the number of years to be set","name":"year","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of months to be set","name":"month","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of days to be set","name":"date","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of hours to be set","name":"hours","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of minutes to be set","name":"minutes","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of seconds to be set","name":"seconds","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of milliseconds to be set","name":"milliseconds","isProperty":true}]}],"relatedDocs":{"default":"set","fp":"fp/set"},"usage":{"commonjs":{"title":"CommonJS","code":"var set = require('date-fns/set')"},"es2015":{"title":"ES 2015","code":"import set from 'date-fns/set'"},"esm":{"title":"ESM","code":"import { set } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"set(date, values)"},{"type":"jsdoc","kind":"function","urlId":"fp/set","category":"Common Helpers","title":"set","description":"Set date values to a given date.","content":{"id":"set","longname":"set","name":"set","kind":"member","scope":"global","description":"Set date values to a given date.\n\nSets time values to date from object `values`.\nA value is not set if it is undefined or null or doesn't exist in `values`.\n\nNote about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\nto use native `Date#setX` methods. If you use this function, you may not want to include the\nother `setX` functions that date-fns provides if you are concerned about the bundle size.","params":[{"type":{"names":["Number"]},"optional":true,"description":"the number of milliseconds to be set","name":"values.milliseconds"},{"type":{"names":["Number"]},"optional":true,"description":"the number of seconds to be set","name":"values.seconds"},{"type":{"names":["Number"]},"optional":true,"description":"the number of minutes to be set","name":"values.minutes"},{"type":{"names":["Number"]},"optional":true,"description":"the number of hours to be set","name":"values.hours"},{"type":{"names":["Number"]},"optional":true,"description":"the number of days to be set","name":"values.date"},{"type":{"names":["Number"]},"optional":true,"description":"the number of months to be set","name":"values.month"},{"type":{"names":["Number"]},"optional":true,"description":"the number of years to be set","name":"values.year"},{"type":{"names":["Object"]},"description":"an object with options","name":"values"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`values` must be an object"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/set"},"summary":"Set date values to a given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with options set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"description":"an object with options","name":"values","props":[{"type":{"names":["Number"]},"optional":true,"description":"the number of milliseconds to be set","name":"milliseconds","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of seconds to be set","name":"seconds","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of minutes to be set","name":"minutes","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of hours to be set","name":"hours","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of days to be set","name":"date","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of months to be set","name":"month","isProperty":true},{"type":{"names":["Number"]},"optional":true,"description":"the number of years to be set","name":"year","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"set","relatedDocs":{"default":"set","fp":"fp/set"},"usage":{"commonjs":{"title":"CommonJS","code":"var set = require('date-fns/fp/set')"},"es2015":{"title":"ES 2015","code":"import set from 'date-fns/fp/set'"},"esm":{"title":"ESM","code":"import { set } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"set(values)(date)"},{"type":"jsdoc","kind":"function","urlId":"sub","category":"Common Helpers","title":"sub","description":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","content":{"id":"sub","longname":"sub","name":"sub","kind":"member","scope":"global","description":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n\n| Key     | Description                        |\n|---------|------------------------------------|\n| years   | Amount of years to be subtracted   |\n| months  | Amount of months to be subtracted  |\n| weeks   | Amount of weeks to be subtracted   |\n| days    | Amount of days to be subtracted    |\n| hours   | Amount of hours to be subtracted   |\n| minutes | Amount of minutes to be subtracted |\n| seconds | Amount of seconds to be subtracted |\n\nAll values default to 0","name":"duration"}],"examples":["// Subtract the following duration from 15 June 2017 15:29:20\nconst result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n  years: 2,\n  months: 9,\n  weeks: 1,\n  days: 7,\n  hours: 5,\n  minutes: 9,\n  seconds: 30\n})\n//=> Mon Sep 1 2014 10:19:50"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/sub"},"summary":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n\n| Key     | Description                        |\n|---------|------------------------------------|\n| years   | Amount of years to be subtracted   |\n| months  | Amount of months to be subtracted  |\n| weeks   | Amount of weeks to be subtracted   |\n| days    | Amount of days to be subtracted    |\n| hours   | Amount of hours to be subtracted   |\n| minutes | Amount of minutes to be subtracted |\n| seconds | Amount of seconds to be subtracted |\n\nAll values default to 0","name":"duration"}],"relatedDocs":{"default":"sub","fp":"fp/sub"},"usage":{"commonjs":{"title":"CommonJS","code":"var sub = require('date-fns/sub')"},"es2015":{"title":"ES 2015","code":"import sub from 'date-fns/sub'"},"esm":{"title":"ESM","code":"import { sub } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"sub(date, duration)"},{"type":"jsdoc","kind":"function","urlId":"fp/sub","category":"Common Helpers","title":"sub","description":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","content":{"id":"sub","longname":"sub","name":"sub","kind":"member","scope":"global","description":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","params":[{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n\n| Key     | Description                        |\n|---------|------------------------------------|\n| years   | Amount of years to be subtracted   |\n| months  | Amount of months to be subtracted  |\n| weeks   | Amount of weeks to be subtracted   |\n| days    | Amount of days to be subtracted    |\n| hours   | Amount of hours to be subtracted   |\n| minutes | Amount of minutes to be subtracted |\n| seconds | Amount of seconds to be subtracted |\n\nAll values default to 0","name":"duration"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/sub"},"summary":"Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Duration"]},"description":"the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n\n| Key     | Description                        |\n|---------|------------------------------------|\n| years   | Amount of years to be subtracted   |\n| months  | Amount of months to be subtracted  |\n| weeks   | Amount of weeks to be subtracted   |\n| days    | Amount of days to be subtracted    |\n| hours   | Amount of hours to be subtracted   |\n| minutes | Amount of minutes to be subtracted |\n| seconds | Amount of seconds to be subtracted |\n\nAll values default to 0","name":"duration"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"sub","relatedDocs":{"default":"sub","fp":"fp/sub"},"usage":{"commonjs":{"title":"CommonJS","code":"var sub = require('date-fns/fp/sub')"},"es2015":{"title":"ES 2015","code":"import sub from 'date-fns/fp/sub'"},"esm":{"title":"ESM","code":"import { sub } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"sub(duration)(date)"},{"type":"jsdoc","kind":"function","urlId":"toDate","category":"Common Helpers","title":"toDate","description":"Convert the given argument to an instance of Date.","content":{"id":"toDate","longname":"toDate","name":"toDate","kind":"member","scope":"global","description":"Convert the given argument to an instance of Date.\n\nIf the argument is an instance of Date, the function returns its clone.\n\nIf the argument is a number, it is treated as a timestamp.\n\nIf the argument is none of the above, the function returns Invalid Date.\n\n**Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.","params":[{"type":{"names":["Date","Number"]},"description":"the value to convert","name":"argument"}],"examples":["// Clone the date:\nconst result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n//=> Tue Feb 11 2014 11:30:30","// Convert the timestamp to date:\nconst result = toDate(1392098430000)\n//=> Tue Feb 11 2014 11:30:30"],"category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/toDate"},"summary":"Convert the given argument to an instance of Date.","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the value to convert","name":"argument"}],"relatedDocs":{"default":"toDate","fp":"fp/toDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var toDate = require('date-fns/toDate')"},"es2015":{"title":"ES 2015","code":"import toDate from 'date-fns/toDate'"},"esm":{"title":"ESM","code":"import { toDate } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"toDate(argument)"},{"type":"jsdoc","kind":"function","urlId":"fp/toDate","category":"Common Helpers","title":"toDate","description":"Convert the given argument to an instance of Date.","content":{"id":"toDate","longname":"toDate","name":"toDate","kind":"member","scope":"global","description":"Convert the given argument to an instance of Date.\n\nIf the argument is an instance of Date, the function returns its clone.\n\nIf the argument is a number, it is treated as a timestamp.\n\nIf the argument is none of the above, the function returns Invalid Date.\n\n**Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.","params":[{"type":{"names":["Date","Number"]},"description":"the value to convert","name":"argument"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Common Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/toDate"},"summary":"Convert the given argument to an instance of Date.","returns":[{"type":{"names":["Date"]},"description":"the parsed date in the local time zone"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the value to convert","name":"argument"}],"generatedFrom":"toDate","relatedDocs":{"default":"toDate","fp":"fp/toDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var toDate = require('date-fns/fp/toDate')"},"es2015":{"title":"ES 2015","code":"import toDate from 'date-fns/fp/toDate'"},"esm":{"title":"ESM","code":"import { toDate } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"toDate(argument)"}],"Interval Helpers":[{"type":"jsdoc","kind":"function","urlId":"areIntervalsOverlapping","category":"Interval Helpers","title":"areIntervalsOverlapping","description":"Is the given time interval overlapping with another time interval?","content":{"id":"areIntervalsOverlapping","longname":"areIntervalsOverlapping","name":"areIntervalsOverlapping","kind":"member","scope":"global","description":"Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  areRangesOverlapping(\n    new Date(2014, 0, 10), new Date(2014, 0, 20),\n    new Date(2014, 0, 17), new Date(2014, 0, 21)\n  )\n\n  // v2.0.0 onward\n\n  areIntervalsOverlapping(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft"},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"whether the comparison is inclusive or not","name":"options.inclusive"}],"examples":["// For overlapping time intervals:\nareIntervalsOverlapping(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n)\n//=> true","// For non-overlapping time intervals:\nareIntervalsOverlapping(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n)\n//=> false","// For adjacent time intervals:\nareIntervalsOverlapping(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n)\n//=> false","// Using the inclusive option:\nareIntervalsOverlapping(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n)\n//=> false\nareIntervalsOverlapping(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n  { inclusive: true }\n)\n//=> true"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/areIntervalsOverlapping"},"summary":"Is the given time interval overlapping with another time interval?","returns":[{"type":{"names":["Boolean"]},"description":"whether the time intervals are overlapping"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft"},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"whether the comparison is inclusive or not","name":"inclusive","isProperty":true}]}],"relatedDocs":{"default":"areIntervalsOverlapping","fp":"fp/areIntervalsOverlapping"},"usage":{"commonjs":{"title":"CommonJS","code":"var areIntervalsOverlapping = require('date-fns/areIntervalsOverlapping')"},"es2015":{"title":"ES 2015","code":"import areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping'"},"esm":{"title":"ESM","code":"import { areIntervalsOverlapping } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"areIntervalsOverlapping(intervalLeft, intervalRight, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/areIntervalsOverlapping","category":"Interval Helpers","title":"areIntervalsOverlapping","description":"Is the given time interval overlapping with another time interval?","content":{"id":"areIntervalsOverlapping","longname":"areIntervalsOverlapping","name":"areIntervalsOverlapping","kind":"member","scope":"global","description":"Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  areRangesOverlapping(\n    new Date(2014, 0, 10), new Date(2014, 0, 20),\n    new Date(2014, 0, 17), new Date(2014, 0, 21)\n  )\n\n  // v2.0.0 onward\n\n  areIntervalsOverlapping(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight"},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/areIntervalsOverlapping"},"summary":"Is the given time interval overlapping with another time interval?","returns":[{"type":{"names":["Boolean"]},"description":"whether the time intervals are overlapping"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight"},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft"}],"generatedFrom":"areIntervalsOverlapping","relatedDocs":{"default":"areIntervalsOverlapping","fp":"fp/areIntervalsOverlapping"},"usage":{"commonjs":{"title":"CommonJS","code":"var areIntervalsOverlapping = require('date-fns/fp/areIntervalsOverlapping')"},"es2015":{"title":"ES 2015","code":"import areIntervalsOverlapping from 'date-fns/fp/areIntervalsOverlapping'"},"esm":{"title":"ESM","code":"import { areIntervalsOverlapping } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"areIntervalsOverlapping(intervalRight)(intervalLeft)"},{"type":"jsdoc","kind":"function","urlId":"fp/areIntervalsOverlappingWithOptions","category":"Interval Helpers","title":"areIntervalsOverlappingWithOptions","description":"Is the given time interval overlapping with another time interval?","content":{"id":"areIntervalsOverlappingWithOptions","longname":"areIntervalsOverlappingWithOptions","name":"areIntervalsOverlappingWithOptions","kind":"member","scope":"global","description":"Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  areRangesOverlapping(\n    new Date(2014, 0, 10), new Date(2014, 0, 20),\n    new Date(2014, 0, 17), new Date(2014, 0, 21)\n  )\n\n  // v2.0.0 onward\n\n  areIntervalsOverlapping(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n  ```","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"whether the comparison is inclusive or not","name":"options.inclusive"},{"type":{"names":["Object"]},"optional":false,"description":"the object with options","name":"options"},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight","optional":false},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/areIntervalsOverlapping"},"summary":"Is the given time interval overlapping with another time interval?","returns":[{"type":{"names":["Boolean"]},"description":"whether the time intervals are overlapping"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"the object with options","name":"options","props":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"whether the comparison is inclusive or not","name":"inclusive","isProperty":true}]},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalRight","optional":false},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/types/Interval}","name":"intervalLeft","optional":false}],"generatedFrom":"areIntervalsOverlapping","relatedDocs":{"default":"areIntervalsOverlapping","fp":"fp/areIntervalsOverlapping","fpWithOptions":"fp/areIntervalsOverlappingWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var areIntervalsOverlapping = require('date-fns/fp/areIntervalsOverlapping')"},"es2015":{"title":"ES 2015","code":"import areIntervalsOverlapping from 'date-fns/fp/areIntervalsOverlapping'"},"esm":{"title":"ESM","code":"import { areIntervalsOverlapping } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"areIntervalsOverlapping(options)(intervalRight)(intervalLeft)"},{"type":"jsdoc","kind":"function","urlId":"eachDayOfInterval","category":"Interval Helpers","title":"eachDayOfInterval","description":"Return the array of dates within the specified time interval.","content":{"id":"eachDayOfInterval","longname":"eachDayOfInterval","name":"eachDayOfInterval","kind":"member","scope":"global","description":"Return the array of dates within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `eachDay` to `eachDayOfInterval`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n\n  // v2.0.0 onward\n\n  eachDayOfInterval(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"options.step"}],"examples":["// Each day between 6 October 2014 and 10 October 2014:\nvar result = eachDayOfInterval({\n  start: new Date(2014, 9, 6),\n  end: new Date(2014, 9, 10)\n})\n//=> [\n//   Mon Oct 06 2014 00:00:00,\n//   Tue Oct 07 2014 00:00:00,\n//   Wed Oct 08 2014 00:00:00,\n//   Thu Oct 09 2014 00:00:00,\n//   Fri Oct 10 2014 00:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.step` must be a number greater than 1"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachDayOfInterval"},"summary":"Return the array of dates within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of days from the day of the interval start to the day of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"step","isProperty":true}]}],"relatedDocs":{"default":"eachDayOfInterval","fp":"fp/eachDayOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachDayOfInterval = require('date-fns/eachDayOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachDayOfInterval from 'date-fns/eachDayOfInterval'"},"esm":{"title":"ESM","code":"import { eachDayOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachDayOfInterval(interval, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/eachDayOfInterval","category":"Interval Helpers","title":"eachDayOfInterval","description":"Return the array of dates within the specified time interval.","content":{"id":"eachDayOfInterval","longname":"eachDayOfInterval","name":"eachDayOfInterval","kind":"member","scope":"global","description":"Return the array of dates within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `eachDay` to `eachDayOfInterval`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n\n  // v2.0.0 onward\n\n  eachDayOfInterval(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachDayOfInterval"},"summary":"Return the array of dates within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of days from the day of the interval start to the day of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachDayOfInterval","relatedDocs":{"default":"eachDayOfInterval","fp":"fp/eachDayOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachDayOfInterval = require('date-fns/fp/eachDayOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachDayOfInterval from 'date-fns/fp/eachDayOfInterval'"},"esm":{"title":"ESM","code":"import { eachDayOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachDayOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachDayOfIntervalWithOptions","category":"Interval Helpers","title":"eachDayOfIntervalWithOptions","description":"Return the array of dates within the specified time interval.","content":{"id":"eachDayOfIntervalWithOptions","longname":"eachDayOfIntervalWithOptions","name":"eachDayOfIntervalWithOptions","kind":"member","scope":"global","description":"Return the array of dates within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `eachDay` to `eachDayOfInterval`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n\n  // v2.0.0 onward\n\n  eachDayOfInterval(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n  )\n  ```","params":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"options.step"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.step` must be a number greater than 1"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachDayOfInterval"},"summary":"Return the array of dates within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of days from the day of the interval start to the day of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"step","isProperty":true}]},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"generatedFrom":"eachDayOfInterval","relatedDocs":{"default":"eachDayOfInterval","fp":"fp/eachDayOfInterval","fpWithOptions":"fp/eachDayOfIntervalWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachDayOfInterval = require('date-fns/fp/eachDayOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachDayOfInterval from 'date-fns/fp/eachDayOfInterval'"},"esm":{"title":"ESM","code":"import { eachDayOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachDayOfInterval(options)(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachHourOfInterval","category":"Interval Helpers","title":"eachHourOfInterval","description":"Return the array of hours within the specified time interval.","content":{"id":"eachHourOfInterval","longname":"eachHourOfInterval","name":"eachHourOfInterval","kind":"member","scope":"global","description":"Return the array of hours within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"options.step"}],"examples":["// Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00\nvar result = eachHourOfInterval({\n  start: new Date(2014, 9, 6, 12),\n  end: new Date(2014, 9, 6, 15)\n})\n//=> [\n//   Mon Oct 06 2014 12:00:00,\n//   Mon Oct 06 2014 13:00:00,\n//   Mon Oct 06 2014 14:00:00,\n//   Mon Oct 06 2014 15:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.step` must be a number greater than 1"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachHourOfInterval"},"summary":"Return the array of hours within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of hours from the hour of the interval start to the hour of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"step","isProperty":true}]}],"relatedDocs":{"default":"eachHourOfInterval","fp":"fp/eachHourOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachHourOfInterval = require('date-fns/eachHourOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachHourOfInterval from 'date-fns/eachHourOfInterval'"},"esm":{"title":"ESM","code":"import { eachHourOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachHourOfInterval(interval, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/eachHourOfInterval","category":"Interval Helpers","title":"eachHourOfInterval","description":"Return the array of hours within the specified time interval.","content":{"id":"eachHourOfInterval","longname":"eachHourOfInterval","name":"eachHourOfInterval","kind":"member","scope":"global","description":"Return the array of hours within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachHourOfInterval"},"summary":"Return the array of hours within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of hours from the hour of the interval start to the hour of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachHourOfInterval","relatedDocs":{"default":"eachHourOfInterval","fp":"fp/eachHourOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachHourOfInterval = require('date-fns/fp/eachHourOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachHourOfInterval from 'date-fns/fp/eachHourOfInterval'"},"esm":{"title":"ESM","code":"import { eachHourOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachHourOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachHourOfIntervalWithOptions","category":"Interval Helpers","title":"eachHourOfIntervalWithOptions","description":"Return the array of hours within the specified time interval.","content":{"id":"eachHourOfIntervalWithOptions","longname":"eachHourOfIntervalWithOptions","name":"eachHourOfIntervalWithOptions","kind":"member","scope":"global","description":"Return the array of hours within the specified time interval.","params":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"options.step"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.step` must be a number greater than 1"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachHourOfInterval"},"summary":"Return the array of hours within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of hours from the hour of the interval start to the hour of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"the step to increment by. The value should be more than 1.","name":"step","isProperty":true}]},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"generatedFrom":"eachHourOfInterval","relatedDocs":{"default":"eachHourOfInterval","fp":"fp/eachHourOfInterval","fpWithOptions":"fp/eachHourOfIntervalWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachHourOfInterval = require('date-fns/fp/eachHourOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachHourOfInterval from 'date-fns/fp/eachHourOfInterval'"},"esm":{"title":"ESM","code":"import { eachHourOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachHourOfInterval(options)(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachMonthOfInterval","category":"Interval Helpers","title":"eachMonthOfInterval","description":"Return the array of months within the specified time interval.","content":{"id":"eachMonthOfInterval","longname":"eachMonthOfInterval","name":"eachMonthOfInterval","kind":"member","scope":"global","description":"Return the array of months within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":["// Each month between 6 February 2014 and 10 August 2014:\nvar result = eachMonthOfInterval({\n  start: new Date(2014, 1, 6),\n  end: new Date(2014, 7, 10)\n})\n//=> [\n//   Sat Feb 01 2014 00:00:00,\n//   Sat Mar 01 2014 00:00:00,\n//   Tue Apr 01 2014 00:00:00,\n//   Thu May 01 2014 00:00:00,\n//   Sun Jun 01 2014 00:00:00,\n//   Tue Jul 01 2014 00:00:00,\n//   Fri Aug 01 2014 00:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachMonthOfInterval"},"summary":"Return the array of months within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of months from the month of the interval start to the month of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"relatedDocs":{"default":"eachMonthOfInterval","fp":"fp/eachMonthOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachMonthOfInterval = require('date-fns/eachMonthOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachMonthOfInterval from 'date-fns/eachMonthOfInterval'"},"esm":{"title":"ESM","code":"import { eachMonthOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachMonthOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachMonthOfInterval","category":"Interval Helpers","title":"eachMonthOfInterval","description":"Return the array of months within the specified time interval.","content":{"id":"eachMonthOfInterval","longname":"eachMonthOfInterval","name":"eachMonthOfInterval","kind":"member","scope":"global","description":"Return the array of months within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachMonthOfInterval"},"summary":"Return the array of months within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of months from the month of the interval start to the month of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachMonthOfInterval","relatedDocs":{"default":"eachMonthOfInterval","fp":"fp/eachMonthOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachMonthOfInterval = require('date-fns/fp/eachMonthOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachMonthOfInterval from 'date-fns/fp/eachMonthOfInterval'"},"esm":{"title":"ESM","code":"import { eachMonthOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachMonthOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachQuarterOfInterval","category":"Interval Helpers","title":"eachQuarterOfInterval","description":"Return the array of quarters within the specified time interval.","content":{"id":"eachQuarterOfInterval","longname":"eachQuarterOfInterval","name":"eachQuarterOfInterval","kind":"member","scope":"global","description":"Return the array of quarters within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":["// Each quarter within interval 6 February 2014 - 10 August 2014:\nvar result = eachQuarterOfInterval({\n  start: new Date(2014, 1, 6),\n  end: new Date(2014, 7, 10)\n})\n//=> [\n//   Wed Jan 01 2014 00:00:00,\n//   Tue Apr 01 2014 00:00:00,\n//   Tue Jul 01 2014 00:00:00,\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachQuarterOfInterval"},"summary":"Return the array of quarters within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of quarters from the quarter of the interval start to the quarter of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"relatedDocs":{"default":"eachQuarterOfInterval","fp":"fp/eachQuarterOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachQuarterOfInterval = require('date-fns/eachQuarterOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachQuarterOfInterval from 'date-fns/eachQuarterOfInterval'"},"esm":{"title":"ESM","code":"import { eachQuarterOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachQuarterOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachQuarterOfInterval","category":"Interval Helpers","title":"eachQuarterOfInterval","description":"Return the array of quarters within the specified time interval.","content":{"id":"eachQuarterOfInterval","longname":"eachQuarterOfInterval","name":"eachQuarterOfInterval","kind":"member","scope":"global","description":"Return the array of quarters within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachQuarterOfInterval"},"summary":"Return the array of quarters within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of quarters from the quarter of the interval start to the quarter of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachQuarterOfInterval","relatedDocs":{"default":"eachQuarterOfInterval","fp":"fp/eachQuarterOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachQuarterOfInterval = require('date-fns/fp/eachQuarterOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachQuarterOfInterval from 'date-fns/fp/eachQuarterOfInterval'"},"esm":{"title":"ESM","code":"import { eachQuarterOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachQuarterOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachWeekOfInterval","category":"Interval Helpers","title":"eachWeekOfInterval","description":"Return the array of weeks within the specified time interval.","content":{"id":"eachWeekOfInterval","longname":"eachWeekOfInterval","name":"eachWeekOfInterval","kind":"member","scope":"global","description":"Return the array of weeks within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// Each week within interval 6 October 2014 - 23 November 2014:\nvar result = eachWeekOfInterval({\n  start: new Date(2014, 9, 6),\n  end: new Date(2014, 10, 23)\n})\n//=> [\n//   Sun Oct 05 2014 00:00:00,\n//   Sun Oct 12 2014 00:00:00,\n//   Sun Oct 19 2014 00:00:00,\n//   Sun Oct 26 2014 00:00:00,\n//   Sun Nov 02 2014 00:00:00,\n//   Sun Nov 09 2014 00:00:00,\n//   Sun Nov 16 2014 00:00:00,\n//   Sun Nov 23 2014 00:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be 0, 1, ..., 6"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekOfInterval"},"summary":"Return the array of weeks within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of weeks from the week of the interval start to the week of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"eachWeekOfInterval","fp":"fp/eachWeekOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekOfInterval = require('date-fns/eachWeekOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachWeekOfInterval from 'date-fns/eachWeekOfInterval'"},"esm":{"title":"ESM","code":"import { eachWeekOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachWeekOfInterval(interval, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/eachWeekOfInterval","category":"Interval Helpers","title":"eachWeekOfInterval","description":"Return the array of weeks within the specified time interval.","content":{"id":"eachWeekOfInterval","longname":"eachWeekOfInterval","name":"eachWeekOfInterval","kind":"member","scope":"global","description":"Return the array of weeks within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekOfInterval"},"summary":"Return the array of weeks within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of weeks from the week of the interval start to the week of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachWeekOfInterval","relatedDocs":{"default":"eachWeekOfInterval","fp":"fp/eachWeekOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekOfInterval = require('date-fns/fp/eachWeekOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachWeekOfInterval from 'date-fns/fp/eachWeekOfInterval'"},"esm":{"title":"ESM","code":"import { eachWeekOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachWeekOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachWeekOfIntervalWithOptions","category":"Interval Helpers","title":"eachWeekOfIntervalWithOptions","description":"Return the array of weeks within the specified time interval.","content":{"id":"eachWeekOfIntervalWithOptions","longname":"eachWeekOfIntervalWithOptions","name":"eachWeekOfIntervalWithOptions","kind":"member","scope":"global","description":"Return the array of weeks within the specified time interval.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be 0, 1, ..., 6"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekOfInterval"},"summary":"Return the array of weeks within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of weeks from the week of the interval start to the week of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval","optional":false}],"generatedFrom":"eachWeekOfInterval","relatedDocs":{"default":"eachWeekOfInterval","fp":"fp/eachWeekOfInterval","fpWithOptions":"fp/eachWeekOfIntervalWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekOfInterval = require('date-fns/fp/eachWeekOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachWeekOfInterval from 'date-fns/fp/eachWeekOfInterval'"},"esm":{"title":"ESM","code":"import { eachWeekOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachWeekOfInterval(options)(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachWeekendOfInterval","category":"Interval Helpers","title":"eachWeekendOfInterval","description":"List all the Saturdays and Sundays in the given date interval.","content":{"id":"eachWeekendOfInterval","longname":"eachWeekendOfInterval","name":"eachWeekendOfInterval","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the given date interval.","params":[{"type":{"names":["Interval"]},"description":"the given interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":["// Lists all Saturdays and Sundays in the given date interval\nvar result = eachWeekendOfInterval({\n  start: new Date(2018, 8, 17),\n  end: new Date(2018, 8, 30)\n})\n//=> [\n//   Sat Sep 22 2018 00:00:00,\n//   Sun Sep 23 2018 00:00:00,\n//   Sat Sep 29 2018 00:00:00,\n//   Sun Sep 30 2018 00:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfInterval"},"summary":"List all the Saturdays and Sundays in the given date interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the given interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"relatedDocs":{"default":"eachWeekendOfInterval","fp":"fp/eachWeekendOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfInterval = require('date-fns/eachWeekendOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfInterval from 'date-fns/eachWeekendOfInterval'"},"esm":{"title":"ESM","code":"import { eachWeekendOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachWeekendOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachWeekendOfInterval","category":"Interval Helpers","title":"eachWeekendOfInterval","description":"List all the Saturdays and Sundays in the given date interval.","content":{"id":"eachWeekendOfInterval","longname":"eachWeekendOfInterval","name":"eachWeekendOfInterval","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the given date interval.","params":[{"type":{"names":["Interval"]},"description":"the given interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfInterval"},"summary":"List all the Saturdays and Sundays in the given date interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the given interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachWeekendOfInterval","relatedDocs":{"default":"eachWeekendOfInterval","fp":"fp/eachWeekendOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfInterval = require('date-fns/fp/eachWeekendOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfInterval from 'date-fns/fp/eachWeekendOfInterval'"},"esm":{"title":"ESM","code":"import { eachWeekendOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachWeekendOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"eachYearOfInterval","category":"Interval Helpers","title":"eachYearOfInterval","description":"Return the array of yearly timestamps within the specified time interval.","content":{"id":"eachYearOfInterval","longname":"eachYearOfInterval","name":"eachYearOfInterval","kind":"member","scope":"global","description":"Return the array of yearly timestamps within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":["// Each year between 6 February 2014 and 10 August 2017:\nvar result = eachYearOfInterval({\n  start: new Date(2014, 1, 6),\n  end: new Date(2017, 7, 10)\n})\n//=> [\n//   Wed Jan 01 2014 00:00:00,\n//   Thu Jan 01 2015 00:00:00,\n//   Fri Jan 01 2016 00:00:00,\n//   Sun Jan 01 2017 00:00:00\n// ]"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachYearOfInterval"},"summary":"Return the array of yearly timestamps within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of yearly timestamps from the month of the interval start to the month of the interval end"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"relatedDocs":{"default":"eachYearOfInterval","fp":"fp/eachYearOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachYearOfInterval = require('date-fns/eachYearOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachYearOfInterval from 'date-fns/eachYearOfInterval'"},"esm":{"title":"ESM","code":"import { eachYearOfInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachYearOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachYearOfInterval","category":"Interval Helpers","title":"eachYearOfInterval","description":"Return the array of yearly timestamps within the specified time interval.","content":{"id":"eachYearOfInterval","longname":"eachYearOfInterval","name":"eachYearOfInterval","kind":"member","scope":"global","description":"Return the array of yearly timestamps within the specified time interval.","params":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachYearOfInterval"},"summary":"Return the array of yearly timestamps within the specified time interval.","returns":[{"type":{"names":["Array.<Date>"]},"description":"the array with starts of yearly timestamps from the month of the interval start to the month of the interval end"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval. See [Interval]{@link docs/types/Interval}","name":"interval"}],"generatedFrom":"eachYearOfInterval","relatedDocs":{"default":"eachYearOfInterval","fp":"fp/eachYearOfInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachYearOfInterval = require('date-fns/fp/eachYearOfInterval')"},"es2015":{"title":"ES 2015","code":"import eachYearOfInterval from 'date-fns/fp/eachYearOfInterval'"},"esm":{"title":"ESM","code":"import { eachYearOfInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachYearOfInterval(interval)"},{"type":"jsdoc","kind":"function","urlId":"getOverlappingDaysInIntervals","category":"Interval Helpers","title":"getOverlappingDaysInIntervals","description":"Get the number of days that overlap in two time intervals","content":{"id":"getOverlappingDaysInIntervals","longname":"getOverlappingDaysInIntervals","name":"getOverlappingDaysInIntervals","kind":"member","scope":"global","description":"Get the number of days that overlap in two time intervals\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  getOverlappingDaysInRanges(\n    new Date(2014, 0, 10), new Date(2014, 0, 20),\n    new Date(2014, 0, 17), new Date(2014, 0, 21)\n  )\n\n  // v2.0.0 onward\n\n  getOverlappingDaysInIntervals(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/Interval}","name":"intervalLeft"},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/Interval}","name":"intervalRight"}],"examples":["// For overlapping time intervals adds 1 for each started overlapping day:\ngetOverlappingDaysInIntervals(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n)\n//=> 3","// For non-overlapping time intervals returns 0:\ngetOverlappingDaysInIntervals(\n  { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n  { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n)\n//=> 0"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getOverlappingDaysInIntervals"},"summary":"Get the number of days that overlap in two time intervals","returns":[{"type":{"names":["Number"]},"description":"the number of days that overlap in two time intervals"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/Interval}","name":"intervalLeft"},{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/Interval}","name":"intervalRight"}],"relatedDocs":{"default":"getOverlappingDaysInIntervals","fp":"fp/getOverlappingDaysInIntervals"},"usage":{"commonjs":{"title":"CommonJS","code":"var getOverlappingDaysInIntervals = require('date-fns/getOverlappingDaysInIntervals')"},"es2015":{"title":"ES 2015","code":"import getOverlappingDaysInIntervals from 'date-fns/getOverlappingDaysInIntervals'"},"esm":{"title":"ESM","code":"import { getOverlappingDaysInIntervals } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getOverlappingDaysInIntervals(intervalLeft, intervalRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/getOverlappingDaysInIntervals","category":"Interval Helpers","title":"getOverlappingDaysInIntervals","description":"Get the number of days that overlap in two time intervals","content":{"id":"getOverlappingDaysInIntervals","longname":"getOverlappingDaysInIntervals","name":"getOverlappingDaysInIntervals","kind":"member","scope":"global","description":"Get the number of days that overlap in two time intervals\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  getOverlappingDaysInRanges(\n    new Date(2014, 0, 10), new Date(2014, 0, 20),\n    new Date(2014, 0, 17), new Date(2014, 0, 21)\n  )\n\n  // v2.0.0 onward\n\n  getOverlappingDaysInIntervals(\n    { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n    { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/Interval}","name":"intervalRight"},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/Interval}","name":"intervalLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getOverlappingDaysInIntervals"},"summary":"Get the number of days that overlap in two time intervals","returns":[{"type":{"names":["Number"]},"description":"the number of days that overlap in two time intervals"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the second interval to compare. See [Interval]{@link docs/Interval}","name":"intervalRight"},{"type":{"names":["Interval"]},"description":"the first interval to compare. See [Interval]{@link docs/Interval}","name":"intervalLeft"}],"generatedFrom":"getOverlappingDaysInIntervals","relatedDocs":{"default":"getOverlappingDaysInIntervals","fp":"fp/getOverlappingDaysInIntervals"},"usage":{"commonjs":{"title":"CommonJS","code":"var getOverlappingDaysInIntervals = require('date-fns/fp/getOverlappingDaysInIntervals')"},"es2015":{"title":"ES 2015","code":"import getOverlappingDaysInIntervals from 'date-fns/fp/getOverlappingDaysInIntervals'"},"esm":{"title":"ESM","code":"import { getOverlappingDaysInIntervals } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getOverlappingDaysInIntervals(intervalRight)(intervalLeft)"},{"type":"jsdoc","kind":"function","urlId":"isWithinInterval","category":"Interval Helpers","title":"isWithinInterval","description":"Is the given date within the interval?","content":{"id":"isWithinInterval","longname":"isWithinInterval","name":"isWithinInterval","kind":"member","scope":"global","description":"Is the given date within the interval? (Including start and end.)\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `isWithinRange` to `isWithinInterval`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  isWithinRange(\n    new Date(2014, 0, 3),\n    new Date(2014, 0, 1), new Date(2014, 0, 7)\n  )\n\n  // v2.0.0 onward\n\n  isWithinInterval(\n    new Date(2014, 0, 3),\n    { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n  )\n  ```","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"},{"type":{"names":["Interval"]},"description":"the interval to check","name":"interval"}],"examples":["// For the date within the interval:\nisWithinInterval(new Date(2014, 0, 3), {\n  start: new Date(2014, 0, 1),\n  end: new Date(2014, 0, 7)\n})\n//=> true","// For the date outside of the interval:\nisWithinInterval(new Date(2014, 0, 10), {\n  start: new Date(2014, 0, 1),\n  end: new Date(2014, 0, 7)\n})\n//=> false","// For date equal to interval start:\nisWithinInterval(date, { start, end: date }) // => true","// For date equal to interval end:\nisWithinInterval(date, { start: date, end }) // => true"],"category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWithinInterval"},"summary":"Is the given date within the interval?","returns":[{"type":{"names":["Boolean"]},"description":"the date is within the interval"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"},{"type":{"names":["Interval"]},"description":"the interval to check","name":"interval"}],"relatedDocs":{"default":"isWithinInterval","fp":"fp/isWithinInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWithinInterval = require('date-fns/isWithinInterval')"},"es2015":{"title":"ES 2015","code":"import isWithinInterval from 'date-fns/isWithinInterval'"},"esm":{"title":"ESM","code":"import { isWithinInterval } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isWithinInterval(date, interval)"},{"type":"jsdoc","kind":"function","urlId":"fp/isWithinInterval","category":"Interval Helpers","title":"isWithinInterval","description":"Is the given date within the interval?","content":{"id":"isWithinInterval","longname":"isWithinInterval","name":"isWithinInterval","kind":"member","scope":"global","description":"Is the given date within the interval? (Including start and end.)\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `isWithinRange` to `isWithinInterval`.\n  This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n\n  ```\n  2.1.3\n  time interval\n  part of the time axis limited by two instants\n  ```\n\n  Also, this function now accepts an object with `start` and `end` properties\n  instead of two arguments as an interval.\n  This function now throws `RangeError` if the start of the interval is after its end\n  or if any date in the interval is `Invalid Date`.\n\n  ```javascript\n  // Before v2.0.0\n\n  isWithinRange(\n    new Date(2014, 0, 3),\n    new Date(2014, 0, 1), new Date(2014, 0, 7)\n  )\n\n  // v2.0.0 onward\n\n  isWithinInterval(\n    new Date(2014, 0, 3),\n    { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n  )\n  ```","params":[{"type":{"names":["Interval"]},"description":"the interval to check","name":"interval"},{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Interval Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"The start of an interval cannot be after its end"},{"type":{"names":["RangeError"]},"description":"Date in interval cannot be `Invalid Date`"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWithinInterval"},"summary":"Is the given date within the interval?","returns":[{"type":{"names":["Boolean"]},"description":"the date is within the interval"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Interval"]},"description":"the interval to check","name":"interval"},{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isWithinInterval","relatedDocs":{"default":"isWithinInterval","fp":"fp/isWithinInterval"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWithinInterval = require('date-fns/fp/isWithinInterval')"},"es2015":{"title":"ES 2015","code":"import isWithinInterval from 'date-fns/fp/isWithinInterval'"},"esm":{"title":"ESM","code":"import { isWithinInterval } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isWithinInterval(interval)(date)"}],"Timestamp Helpers":[{"type":"jsdoc","kind":"function","urlId":"fromUnixTime","category":"Timestamp Helpers","title":"fromUnixTime","description":"Create a date from a Unix timestamp.","content":{"id":"fromUnixTime","longname":"fromUnixTime","name":"fromUnixTime","kind":"member","scope":"global","description":"Create a date from a Unix timestamp.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the given Unix timestamp","name":"unixTime"}],"examples":["// Create the date 29 February 2012 11:45:05:\nvar result = fromUnixTime(1330515905)\n//=> Wed Feb 29 2012 11:45:05"],"category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/fromUnixTime"},"summary":"Create a date from a Unix timestamp.","returns":[{"type":{"names":["Date"]},"description":"the date"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Number"]},"description":"the given Unix timestamp","name":"unixTime"}],"relatedDocs":{"default":"fromUnixTime","fp":"fp/fromUnixTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var fromUnixTime = require('date-fns/fromUnixTime')"},"es2015":{"title":"ES 2015","code":"import fromUnixTime from 'date-fns/fromUnixTime'"},"esm":{"title":"ESM","code":"import { fromUnixTime } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"fromUnixTime(unixTime)"},{"type":"jsdoc","kind":"function","urlId":"fp/fromUnixTime","category":"Timestamp Helpers","title":"fromUnixTime","description":"Create a date from a Unix timestamp.","content":{"id":"fromUnixTime","longname":"fromUnixTime","name":"fromUnixTime","kind":"member","scope":"global","description":"Create a date from a Unix timestamp.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the given Unix timestamp","name":"unixTime"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/fromUnixTime"},"summary":"Create a date from a Unix timestamp.","returns":[{"type":{"names":["Date"]},"description":"the date"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the given Unix timestamp","name":"unixTime"}],"generatedFrom":"fromUnixTime","relatedDocs":{"default":"fromUnixTime","fp":"fp/fromUnixTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var fromUnixTime = require('date-fns/fp/fromUnixTime')"},"es2015":{"title":"ES 2015","code":"import fromUnixTime from 'date-fns/fp/fromUnixTime'"},"esm":{"title":"ESM","code":"import { fromUnixTime } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"fromUnixTime(unixTime)"},{"type":"jsdoc","kind":"function","urlId":"getTime","category":"Timestamp Helpers","title":"getTime","description":"Get the milliseconds timestamp of the given date.","content":{"id":"getTime","longname":"getTime","name":"getTime","kind":"member","scope":"global","description":"Get the milliseconds timestamp of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the timestamp of 29 February 2012 11:45:05.123:\nvar result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n//=> 1330515905123"],"category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getTime"},"summary":"Get the milliseconds timestamp of the given date.","returns":[{"type":{"names":["Number"]},"description":"the timestamp"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getTime","fp":"fp/getTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var getTime = require('date-fns/getTime')"},"es2015":{"title":"ES 2015","code":"import getTime from 'date-fns/getTime'"},"esm":{"title":"ESM","code":"import { getTime } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getTime(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getTime","category":"Timestamp Helpers","title":"getTime","description":"Get the milliseconds timestamp of the given date.","content":{"id":"getTime","longname":"getTime","name":"getTime","kind":"member","scope":"global","description":"Get the milliseconds timestamp of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getTime"},"summary":"Get the milliseconds timestamp of the given date.","returns":[{"type":{"names":["Number"]},"description":"the timestamp"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getTime","relatedDocs":{"default":"getTime","fp":"fp/getTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var getTime = require('date-fns/fp/getTime')"},"es2015":{"title":"ES 2015","code":"import getTime from 'date-fns/fp/getTime'"},"esm":{"title":"ESM","code":"import { getTime } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getTime(date)"},{"type":"jsdoc","kind":"function","urlId":"getUnixTime","category":"Timestamp Helpers","title":"getUnixTime","description":"Get the seconds timestamp of the given date.","content":{"id":"getUnixTime","longname":"getUnixTime","name":"getUnixTime","kind":"member","scope":"global","description":"Get the seconds timestamp of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the timestamp of 29 February 2012 11:45:05 CET:\nvar result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n//=> 1330512305"],"category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getUnixTime"},"summary":"Get the seconds timestamp of the given date.","returns":[{"type":{"names":["Number"]},"description":"the timestamp"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getUnixTime","fp":"fp/getUnixTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var getUnixTime = require('date-fns/getUnixTime')"},"es2015":{"title":"ES 2015","code":"import getUnixTime from 'date-fns/getUnixTime'"},"esm":{"title":"ESM","code":"import { getUnixTime } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getUnixTime(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getUnixTime","category":"Timestamp Helpers","title":"getUnixTime","description":"Get the seconds timestamp of the given date.","content":{"id":"getUnixTime","longname":"getUnixTime","name":"getUnixTime","kind":"member","scope":"global","description":"Get the seconds timestamp of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Timestamp Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getUnixTime"},"summary":"Get the seconds timestamp of the given date.","returns":[{"type":{"names":["Number"]},"description":"the timestamp"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getUnixTime","relatedDocs":{"default":"getUnixTime","fp":"fp/getUnixTime"},"usage":{"commonjs":{"title":"CommonJS","code":"var getUnixTime = require('date-fns/fp/getUnixTime')"},"es2015":{"title":"ES 2015","code":"import getUnixTime from 'date-fns/fp/getUnixTime'"},"esm":{"title":"ESM","code":"import { getUnixTime } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getUnixTime(date)"}],"Millisecond Helpers":[{"type":"jsdoc","kind":"function","urlId":"addMilliseconds","category":"Millisecond Helpers","title":"addMilliseconds","description":"Add the specified number of milliseconds to the given date.","content":{"id":"addMilliseconds","longname":"addMilliseconds","name":"addMilliseconds","kind":"member","scope":"global","description":"Add the specified number of milliseconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 750 milliseconds to 10 July 2014 12:45:30.000:\nvar result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n//=> Thu Jul 10 2014 12:45:30.750"],"category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMilliseconds"},"summary":"Add the specified number of milliseconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addMilliseconds","fp":"fp/addMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMilliseconds = require('date-fns/addMilliseconds')"},"es2015":{"title":"ES 2015","code":"import addMilliseconds from 'date-fns/addMilliseconds'"},"esm":{"title":"ESM","code":"import { addMilliseconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addMilliseconds(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addMilliseconds","category":"Millisecond Helpers","title":"addMilliseconds","description":"Add the specified number of milliseconds to the given date.","content":{"id":"addMilliseconds","longname":"addMilliseconds","name":"addMilliseconds","kind":"member","scope":"global","description":"Add the specified number of milliseconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMilliseconds"},"summary":"Add the specified number of milliseconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addMilliseconds","relatedDocs":{"default":"addMilliseconds","fp":"fp/addMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMilliseconds = require('date-fns/fp/addMilliseconds')"},"es2015":{"title":"ES 2015","code":"import addMilliseconds from 'date-fns/fp/addMilliseconds'"},"esm":{"title":"ESM","code":"import { addMilliseconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addMilliseconds(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInMilliseconds","category":"Millisecond Helpers","title":"differenceInMilliseconds","description":"Get the number of milliseconds between the given dates.","content":{"id":"differenceInMilliseconds","longname":"differenceInMilliseconds","name":"differenceInMilliseconds","kind":"member","scope":"global","description":"Get the number of milliseconds between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many milliseconds are between\n// 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\nvar result = differenceInMilliseconds(\n  new Date(2014, 6, 2, 12, 30, 21, 700),\n  new Date(2014, 6, 2, 12, 30, 20, 600)\n)\n//=> 1100"],"category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMilliseconds"},"summary":"Get the number of milliseconds between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of milliseconds"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInMilliseconds","fp":"fp/differenceInMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMilliseconds = require('date-fns/differenceInMilliseconds')"},"es2015":{"title":"ES 2015","code":"import differenceInMilliseconds from 'date-fns/differenceInMilliseconds'"},"esm":{"title":"ESM","code":"import { differenceInMilliseconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInMilliseconds(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInMilliseconds","category":"Millisecond Helpers","title":"differenceInMilliseconds","description":"Get the number of milliseconds between the given dates.","content":{"id":"differenceInMilliseconds","longname":"differenceInMilliseconds","name":"differenceInMilliseconds","kind":"member","scope":"global","description":"Get the number of milliseconds between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMilliseconds"},"summary":"Get the number of milliseconds between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of milliseconds"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInMilliseconds","relatedDocs":{"default":"differenceInMilliseconds","fp":"fp/differenceInMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMilliseconds = require('date-fns/fp/differenceInMilliseconds')"},"es2015":{"title":"ES 2015","code":"import differenceInMilliseconds from 'date-fns/fp/differenceInMilliseconds'"},"esm":{"title":"ESM","code":"import { differenceInMilliseconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInMilliseconds(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"getMilliseconds","category":"Millisecond Helpers","title":"getMilliseconds","description":"Get the milliseconds of the given date.","content":{"id":"getMilliseconds","longname":"getMilliseconds","name":"getMilliseconds","kind":"member","scope":"global","description":"Get the milliseconds of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the milliseconds of 29 February 2012 11:45:05.123:\nvar result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n//=> 123"],"category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMilliseconds"},"summary":"Get the milliseconds of the given date.","returns":[{"type":{"names":["Number"]},"description":"the milliseconds"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getMilliseconds","fp":"fp/getMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMilliseconds = require('date-fns/getMilliseconds')"},"es2015":{"title":"ES 2015","code":"import getMilliseconds from 'date-fns/getMilliseconds'"},"esm":{"title":"ESM","code":"import { getMilliseconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getMilliseconds(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getMilliseconds","category":"Millisecond Helpers","title":"getMilliseconds","description":"Get the milliseconds of the given date.","content":{"id":"getMilliseconds","longname":"getMilliseconds","name":"getMilliseconds","kind":"member","scope":"global","description":"Get the milliseconds of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMilliseconds"},"summary":"Get the milliseconds of the given date.","returns":[{"type":{"names":["Number"]},"description":"the milliseconds"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getMilliseconds","relatedDocs":{"default":"getMilliseconds","fp":"fp/getMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMilliseconds = require('date-fns/fp/getMilliseconds')"},"es2015":{"title":"ES 2015","code":"import getMilliseconds from 'date-fns/fp/getMilliseconds'"},"esm":{"title":"ESM","code":"import { getMilliseconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getMilliseconds(date)"},{"type":"jsdoc","kind":"function","urlId":"setMilliseconds","category":"Millisecond Helpers","title":"setMilliseconds","description":"Set the milliseconds to the given date.","content":{"id":"setMilliseconds","longname":"setMilliseconds","name":"setMilliseconds","kind":"member","scope":"global","description":"Set the milliseconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the milliseconds of the new date","name":"milliseconds"}],"examples":["// Set 300 milliseconds to 1 September 2014 11:30:40.500:\nvar result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n//=> Mon Sep 01 2014 11:30:40.300"],"category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMilliseconds"},"summary":"Set the milliseconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the milliseconds of the new date","name":"milliseconds"}],"relatedDocs":{"default":"setMilliseconds","fp":"fp/setMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMilliseconds = require('date-fns/setMilliseconds')"},"es2015":{"title":"ES 2015","code":"import setMilliseconds from 'date-fns/setMilliseconds'"},"esm":{"title":"ESM","code":"import { setMilliseconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setMilliseconds(date, milliseconds)"},{"type":"jsdoc","kind":"function","urlId":"fp/setMilliseconds","category":"Millisecond Helpers","title":"setMilliseconds","description":"Set the milliseconds to the given date.","content":{"id":"setMilliseconds","longname":"setMilliseconds","name":"setMilliseconds","kind":"member","scope":"global","description":"Set the milliseconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the milliseconds of the new date","name":"milliseconds"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMilliseconds"},"summary":"Set the milliseconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the milliseconds of the new date","name":"milliseconds"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setMilliseconds","relatedDocs":{"default":"setMilliseconds","fp":"fp/setMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMilliseconds = require('date-fns/fp/setMilliseconds')"},"es2015":{"title":"ES 2015","code":"import setMilliseconds from 'date-fns/fp/setMilliseconds'"},"esm":{"title":"ESM","code":"import { setMilliseconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setMilliseconds(milliseconds)(date)"},{"type":"jsdoc","kind":"function","urlId":"subMilliseconds","category":"Millisecond Helpers","title":"subMilliseconds","description":"Subtract the specified number of milliseconds from the given date.","content":{"id":"subMilliseconds","longname":"subMilliseconds","name":"subMilliseconds","kind":"member","scope":"global","description":"Subtract the specified number of milliseconds from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\nvar result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n//=> Thu Jul 10 2014 12:45:29.250"],"category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMilliseconds"},"summary":"Subtract the specified number of milliseconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subMilliseconds","fp":"fp/subMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMilliseconds = require('date-fns/subMilliseconds')"},"es2015":{"title":"ES 2015","code":"import subMilliseconds from 'date-fns/subMilliseconds'"},"esm":{"title":"ESM","code":"import { subMilliseconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subMilliseconds(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subMilliseconds","category":"Millisecond Helpers","title":"subMilliseconds","description":"Subtract the specified number of milliseconds from the given date.","content":{"id":"subMilliseconds","longname":"subMilliseconds","name":"subMilliseconds","kind":"member","scope":"global","description":"Subtract the specified number of milliseconds from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Millisecond Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMilliseconds"},"summary":"Subtract the specified number of milliseconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the milliseconds subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subMilliseconds","relatedDocs":{"default":"subMilliseconds","fp":"fp/subMilliseconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMilliseconds = require('date-fns/fp/subMilliseconds')"},"es2015":{"title":"ES 2015","code":"import subMilliseconds from 'date-fns/fp/subMilliseconds'"},"esm":{"title":"ESM","code":"import { subMilliseconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subMilliseconds(amount)(date)"}],"Second Helpers":[{"type":"jsdoc","kind":"function","urlId":"addSeconds","category":"Second Helpers","title":"addSeconds","description":"Add the specified number of seconds to the given date.","content":{"id":"addSeconds","longname":"addSeconds","name":"addSeconds","kind":"member","scope":"global","description":"Add the specified number of seconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 30 seconds to 10 July 2014 12:45:00:\nvar result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n//=> Thu Jul 10 2014 12:45:30"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addSeconds"},"summary":"Add the specified number of seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addSeconds","fp":"fp/addSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var addSeconds = require('date-fns/addSeconds')"},"es2015":{"title":"ES 2015","code":"import addSeconds from 'date-fns/addSeconds'"},"esm":{"title":"ESM","code":"import { addSeconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addSeconds(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addSeconds","category":"Second Helpers","title":"addSeconds","description":"Add the specified number of seconds to the given date.","content":{"id":"addSeconds","longname":"addSeconds","name":"addSeconds","kind":"member","scope":"global","description":"Add the specified number of seconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addSeconds"},"summary":"Add the specified number of seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addSeconds","relatedDocs":{"default":"addSeconds","fp":"fp/addSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var addSeconds = require('date-fns/fp/addSeconds')"},"es2015":{"title":"ES 2015","code":"import addSeconds from 'date-fns/fp/addSeconds'"},"esm":{"title":"ESM","code":"import { addSeconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addSeconds(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInSeconds","category":"Second Helpers","title":"differenceInSeconds","description":"Get the number of seconds between the given dates.","content":{"id":"differenceInSeconds","longname":"differenceInSeconds","name":"differenceInSeconds","kind":"member","scope":"global","description":"Get the number of seconds between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many seconds are between\n// 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\nvar result = differenceInSeconds(\n  new Date(2014, 6, 2, 12, 30, 20, 0),\n  new Date(2014, 6, 2, 12, 30, 7, 999)\n)\n//=> 12"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInSeconds"},"summary":"Get the number of seconds between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of seconds"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInSeconds","fp":"fp/differenceInSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInSeconds = require('date-fns/differenceInSeconds')"},"es2015":{"title":"ES 2015","code":"import differenceInSeconds from 'date-fns/differenceInSeconds'"},"esm":{"title":"ESM","code":"import { differenceInSeconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInSeconds(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInSeconds","category":"Second Helpers","title":"differenceInSeconds","description":"Get the number of seconds between the given dates.","content":{"id":"differenceInSeconds","longname":"differenceInSeconds","name":"differenceInSeconds","kind":"member","scope":"global","description":"Get the number of seconds between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInSeconds"},"summary":"Get the number of seconds between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of seconds"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInSeconds","relatedDocs":{"default":"differenceInSeconds","fp":"fp/differenceInSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInSeconds = require('date-fns/fp/differenceInSeconds')"},"es2015":{"title":"ES 2015","code":"import differenceInSeconds from 'date-fns/fp/differenceInSeconds'"},"esm":{"title":"ESM","code":"import { differenceInSeconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInSeconds(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfSecond","category":"Second Helpers","title":"endOfSecond","description":"Return the end of a second for the given date.","content":{"id":"endOfSecond","longname":"endOfSecond","name":"endOfSecond","kind":"member","scope":"global","description":"Return the end of a second for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a second for 1 December 2014 22:15:45.400:\nvar result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n//=> Mon Dec 01 2014 22:15:45.999"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfSecond"},"summary":"Return the end of a second for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a second"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfSecond","fp":"fp/endOfSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfSecond = require('date-fns/endOfSecond')"},"es2015":{"title":"ES 2015","code":"import endOfSecond from 'date-fns/endOfSecond'"},"esm":{"title":"ESM","code":"import { endOfSecond } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfSecond(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfSecond","category":"Second Helpers","title":"endOfSecond","description":"Return the end of a second for the given date.","content":{"id":"endOfSecond","longname":"endOfSecond","name":"endOfSecond","kind":"member","scope":"global","description":"Return the end of a second for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfSecond"},"summary":"Return the end of a second for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a second"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfSecond","relatedDocs":{"default":"endOfSecond","fp":"fp/endOfSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfSecond = require('date-fns/fp/endOfSecond')"},"es2015":{"title":"ES 2015","code":"import endOfSecond from 'date-fns/fp/endOfSecond'"},"esm":{"title":"ESM","code":"import { endOfSecond } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfSecond(date)"},{"type":"jsdoc","kind":"function","urlId":"getSeconds","category":"Second Helpers","title":"getSeconds","description":"Get the seconds of the given date.","content":{"id":"getSeconds","longname":"getSeconds","name":"getSeconds","kind":"member","scope":"global","description":"Get the seconds of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the seconds of 29 February 2012 11:45:05.123:\nvar result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n//=> 5"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getSeconds"},"summary":"Get the seconds of the given date.","returns":[{"type":{"names":["Number"]},"description":"the seconds"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getSeconds","fp":"fp/getSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var getSeconds = require('date-fns/getSeconds')"},"es2015":{"title":"ES 2015","code":"import getSeconds from 'date-fns/getSeconds'"},"esm":{"title":"ESM","code":"import { getSeconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getSeconds(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getSeconds","category":"Second Helpers","title":"getSeconds","description":"Get the seconds of the given date.","content":{"id":"getSeconds","longname":"getSeconds","name":"getSeconds","kind":"member","scope":"global","description":"Get the seconds of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getSeconds"},"summary":"Get the seconds of the given date.","returns":[{"type":{"names":["Number"]},"description":"the seconds"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getSeconds","relatedDocs":{"default":"getSeconds","fp":"fp/getSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var getSeconds = require('date-fns/fp/getSeconds')"},"es2015":{"title":"ES 2015","code":"import getSeconds from 'date-fns/fp/getSeconds'"},"esm":{"title":"ESM","code":"import { getSeconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getSeconds(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameSecond","category":"Second Helpers","title":"isSameSecond","description":"Are the given dates in the same second?","content":{"id":"isSameSecond","longname":"isSameSecond","name":"isSameSecond","kind":"member","scope":"global","description":"Are the given dates in the same second?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n// in the same second?\nvar result = isSameSecond(\n  new Date(2014, 8, 4, 6, 30, 15),\n  new Date(2014, 8, 4, 6, 30, 15, 500)\n)\n//=> true"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameSecond"},"summary":"Are the given dates in the same second?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same second"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameSecond","fp":"fp/isSameSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameSecond = require('date-fns/isSameSecond')"},"es2015":{"title":"ES 2015","code":"import isSameSecond from 'date-fns/isSameSecond'"},"esm":{"title":"ESM","code":"import { isSameSecond } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameSecond(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameSecond","category":"Second Helpers","title":"isSameSecond","description":"Are the given dates in the same second?","content":{"id":"isSameSecond","longname":"isSameSecond","name":"isSameSecond","kind":"member","scope":"global","description":"Are the given dates in the same second?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameSecond"},"summary":"Are the given dates in the same second?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same second"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameSecond","relatedDocs":{"default":"isSameSecond","fp":"fp/isSameSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameSecond = require('date-fns/fp/isSameSecond')"},"es2015":{"title":"ES 2015","code":"import isSameSecond from 'date-fns/fp/isSameSecond'"},"esm":{"title":"ESM","code":"import { isSameSecond } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameSecond(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisSecond","category":"Second Helpers","title":"isThisSecond","description":"Is the given date in the same second as the current date?","content":{"id":"isThisSecond","longname":"isThisSecond","name":"isThisSecond","kind":"member","scope":"global","description":"Is the given date in the same second as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If now is 25 September 2014 18:30:15.500,\n// is 25 September 2014 18:30:15.000 in this second?\nvar result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n//=> true"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisSecond"},"summary":"Is the given date in the same second as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this second"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisSecond","fp":"fp/isThisSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisSecond = require('date-fns/isThisSecond')"},"es2015":{"title":"ES 2015","code":"import isThisSecond from 'date-fns/isThisSecond'"},"esm":{"title":"ESM","code":"import { isThisSecond } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisSecond(date)"},{"type":"jsdoc","kind":"function","urlId":"setSeconds","category":"Second Helpers","title":"setSeconds","description":"Set the seconds to the given date.","content":{"id":"setSeconds","longname":"setSeconds","name":"setSeconds","kind":"member","scope":"global","description":"Set the seconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the seconds of the new date","name":"seconds"}],"examples":["// Set 45 seconds to 1 September 2014 11:30:40:\nvar result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n//=> Mon Sep 01 2014 11:30:45"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setSeconds"},"summary":"Set the seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the seconds of the new date","name":"seconds"}],"relatedDocs":{"default":"setSeconds","fp":"fp/setSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var setSeconds = require('date-fns/setSeconds')"},"es2015":{"title":"ES 2015","code":"import setSeconds from 'date-fns/setSeconds'"},"esm":{"title":"ESM","code":"import { setSeconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setSeconds(date, seconds)"},{"type":"jsdoc","kind":"function","urlId":"fp/setSeconds","category":"Second Helpers","title":"setSeconds","description":"Set the seconds to the given date.","content":{"id":"setSeconds","longname":"setSeconds","name":"setSeconds","kind":"member","scope":"global","description":"Set the seconds to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the seconds of the new date","name":"seconds"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setSeconds"},"summary":"Set the seconds to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the seconds of the new date","name":"seconds"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setSeconds","relatedDocs":{"default":"setSeconds","fp":"fp/setSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var setSeconds = require('date-fns/fp/setSeconds')"},"es2015":{"title":"ES 2015","code":"import setSeconds from 'date-fns/fp/setSeconds'"},"esm":{"title":"ESM","code":"import { setSeconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setSeconds(seconds)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfSecond","category":"Second Helpers","title":"startOfSecond","description":"Return the start of a second for the given date.","content":{"id":"startOfSecond","longname":"startOfSecond","name":"startOfSecond","kind":"member","scope":"global","description":"Return the start of a second for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a second for 1 December 2014 22:15:45.400:\nvar result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n//=> Mon Dec 01 2014 22:15:45.000"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfSecond"},"summary":"Return the start of a second for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a second"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfSecond","fp":"fp/startOfSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfSecond = require('date-fns/startOfSecond')"},"es2015":{"title":"ES 2015","code":"import startOfSecond from 'date-fns/startOfSecond'"},"esm":{"title":"ESM","code":"import { startOfSecond } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfSecond(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfSecond","category":"Second Helpers","title":"startOfSecond","description":"Return the start of a second for the given date.","content":{"id":"startOfSecond","longname":"startOfSecond","name":"startOfSecond","kind":"member","scope":"global","description":"Return the start of a second for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfSecond"},"summary":"Return the start of a second for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a second"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfSecond","relatedDocs":{"default":"startOfSecond","fp":"fp/startOfSecond"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfSecond = require('date-fns/fp/startOfSecond')"},"es2015":{"title":"ES 2015","code":"import startOfSecond from 'date-fns/fp/startOfSecond'"},"esm":{"title":"ESM","code":"import { startOfSecond } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfSecond(date)"},{"type":"jsdoc","kind":"function","urlId":"subSeconds","category":"Second Helpers","title":"subSeconds","description":"Subtract the specified number of seconds from the given date.","content":{"id":"subSeconds","longname":"subSeconds","name":"subSeconds","kind":"member","scope":"global","description":"Subtract the specified number of seconds from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 30 seconds from 10 July 2014 12:45:00:\nvar result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n//=> Thu Jul 10 2014 12:44:30"],"category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subSeconds"},"summary":"Subtract the specified number of seconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subSeconds","fp":"fp/subSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var subSeconds = require('date-fns/subSeconds')"},"es2015":{"title":"ES 2015","code":"import subSeconds from 'date-fns/subSeconds'"},"esm":{"title":"ESM","code":"import { subSeconds } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subSeconds(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subSeconds","category":"Second Helpers","title":"subSeconds","description":"Subtract the specified number of seconds from the given date.","content":{"id":"subSeconds","longname":"subSeconds","name":"subSeconds","kind":"member","scope":"global","description":"Subtract the specified number of seconds from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Second Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subSeconds"},"summary":"Subtract the specified number of seconds from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the seconds subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subSeconds","relatedDocs":{"default":"subSeconds","fp":"fp/subSeconds"},"usage":{"commonjs":{"title":"CommonJS","code":"var subSeconds = require('date-fns/fp/subSeconds')"},"es2015":{"title":"ES 2015","code":"import subSeconds from 'date-fns/fp/subSeconds'"},"esm":{"title":"ESM","code":"import { subSeconds } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subSeconds(amount)(date)"}],"Minute Helpers":[{"type":"jsdoc","kind":"function","urlId":"addMinutes","category":"Minute Helpers","title":"addMinutes","description":"Add the specified number of minutes to the given date.","content":{"id":"addMinutes","longname":"addMinutes","name":"addMinutes","kind":"member","scope":"global","description":"Add the specified number of minutes to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 30 minutes to 10 July 2014 12:00:00:\nvar result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n//=> Thu Jul 10 2014 12:30:00"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMinutes"},"summary":"Add the specified number of minutes to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addMinutes","fp":"fp/addMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMinutes = require('date-fns/addMinutes')"},"es2015":{"title":"ES 2015","code":"import addMinutes from 'date-fns/addMinutes'"},"esm":{"title":"ESM","code":"import { addMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addMinutes(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addMinutes","category":"Minute Helpers","title":"addMinutes","description":"Add the specified number of minutes to the given date.","content":{"id":"addMinutes","longname":"addMinutes","name":"addMinutes","kind":"member","scope":"global","description":"Add the specified number of minutes to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMinutes"},"summary":"Add the specified number of minutes to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addMinutes","relatedDocs":{"default":"addMinutes","fp":"fp/addMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMinutes = require('date-fns/fp/addMinutes')"},"es2015":{"title":"ES 2015","code":"import addMinutes from 'date-fns/fp/addMinutes'"},"esm":{"title":"ESM","code":"import { addMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addMinutes(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInMinutes","category":"Minute Helpers","title":"differenceInMinutes","description":"Get the number of minutes between the given dates.","content":{"id":"differenceInMinutes","longname":"differenceInMinutes","name":"differenceInMinutes","kind":"member","scope":"global","description":"Get the signed number of full (rounded towards 0) minutes between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\nvar result = differenceInMinutes(\n  new Date(2014, 6, 2, 12, 20, 0),\n  new Date(2014, 6, 2, 12, 7, 59)\n)\n//=> 12","// How many minutes are from 10:01:59 to 10:00:00\nvar result = differenceInMinutes(\n  new Date(2000, 0, 1, 10, 0, 0),\n  new Date(2000, 0, 1, 10, 1, 59)\n)\n//=> -1"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMinutes"},"summary":"Get the number of minutes between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of minutes"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInMinutes","fp":"fp/differenceInMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMinutes = require('date-fns/differenceInMinutes')"},"es2015":{"title":"ES 2015","code":"import differenceInMinutes from 'date-fns/differenceInMinutes'"},"esm":{"title":"ESM","code":"import { differenceInMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInMinutes(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInMinutes","category":"Minute Helpers","title":"differenceInMinutes","description":"Get the number of minutes between the given dates.","content":{"id":"differenceInMinutes","longname":"differenceInMinutes","name":"differenceInMinutes","kind":"member","scope":"global","description":"Get the signed number of full (rounded towards 0) minutes between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMinutes"},"summary":"Get the number of minutes between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of minutes"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInMinutes","relatedDocs":{"default":"differenceInMinutes","fp":"fp/differenceInMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMinutes = require('date-fns/fp/differenceInMinutes')"},"es2015":{"title":"ES 2015","code":"import differenceInMinutes from 'date-fns/fp/differenceInMinutes'"},"esm":{"title":"ESM","code":"import { differenceInMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInMinutes(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfMinute","category":"Minute Helpers","title":"endOfMinute","description":"Return the end of a minute for the given date.","content":{"id":"endOfMinute","longname":"endOfMinute","name":"endOfMinute","kind":"member","scope":"global","description":"Return the end of a minute for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a minute for 1 December 2014 22:15:45.400:\nvar result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n//=> Mon Dec 01 2014 22:15:59.999"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfMinute"},"summary":"Return the end of a minute for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a minute"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfMinute","fp":"fp/endOfMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfMinute = require('date-fns/endOfMinute')"},"es2015":{"title":"ES 2015","code":"import endOfMinute from 'date-fns/endOfMinute'"},"esm":{"title":"ESM","code":"import { endOfMinute } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfMinute(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfMinute","category":"Minute Helpers","title":"endOfMinute","description":"Return the end of a minute for the given date.","content":{"id":"endOfMinute","longname":"endOfMinute","name":"endOfMinute","kind":"member","scope":"global","description":"Return the end of a minute for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfMinute"},"summary":"Return the end of a minute for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a minute"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfMinute","relatedDocs":{"default":"endOfMinute","fp":"fp/endOfMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfMinute = require('date-fns/fp/endOfMinute')"},"es2015":{"title":"ES 2015","code":"import endOfMinute from 'date-fns/fp/endOfMinute'"},"esm":{"title":"ESM","code":"import { endOfMinute } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfMinute(date)"},{"type":"jsdoc","kind":"function","urlId":"getMinutes","category":"Minute Helpers","title":"getMinutes","description":"Get the minutes of the given date.","content":{"id":"getMinutes","longname":"getMinutes","name":"getMinutes","kind":"member","scope":"global","description":"Get the minutes of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the minutes of 29 February 2012 11:45:05:\nvar result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n//=> 45"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMinutes"},"summary":"Get the minutes of the given date.","returns":[{"type":{"names":["Number"]},"description":"the minutes"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getMinutes","fp":"fp/getMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMinutes = require('date-fns/getMinutes')"},"es2015":{"title":"ES 2015","code":"import getMinutes from 'date-fns/getMinutes'"},"esm":{"title":"ESM","code":"import { getMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getMinutes(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getMinutes","category":"Minute Helpers","title":"getMinutes","description":"Get the minutes of the given date.","content":{"id":"getMinutes","longname":"getMinutes","name":"getMinutes","kind":"member","scope":"global","description":"Get the minutes of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMinutes"},"summary":"Get the minutes of the given date.","returns":[{"type":{"names":["Number"]},"description":"the minutes"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getMinutes","relatedDocs":{"default":"getMinutes","fp":"fp/getMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMinutes = require('date-fns/fp/getMinutes')"},"es2015":{"title":"ES 2015","code":"import getMinutes from 'date-fns/fp/getMinutes'"},"esm":{"title":"ESM","code":"import { getMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getMinutes(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameMinute","category":"Minute Helpers","title":"isSameMinute","description":"Are the given dates in the same minute?","content":{"id":"isSameMinute","longname":"isSameMinute","name":"isSameMinute","kind":"member","scope":"global","description":"Are the given dates in the same minute?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n// in the same minute?\nvar result = isSameMinute(\n  new Date(2014, 8, 4, 6, 30),\n  new Date(2014, 8, 4, 6, 30, 15)\n)\n//=> true"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameMinute"},"summary":"Are the given dates in the same minute?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same minute"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameMinute","fp":"fp/isSameMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameMinute = require('date-fns/isSameMinute')"},"es2015":{"title":"ES 2015","code":"import isSameMinute from 'date-fns/isSameMinute'"},"esm":{"title":"ESM","code":"import { isSameMinute } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameMinute(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameMinute","category":"Minute Helpers","title":"isSameMinute","description":"Are the given dates in the same minute?","content":{"id":"isSameMinute","longname":"isSameMinute","name":"isSameMinute","kind":"member","scope":"global","description":"Are the given dates in the same minute?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameMinute"},"summary":"Are the given dates in the same minute?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same minute"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameMinute","relatedDocs":{"default":"isSameMinute","fp":"fp/isSameMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameMinute = require('date-fns/fp/isSameMinute')"},"es2015":{"title":"ES 2015","code":"import isSameMinute from 'date-fns/fp/isSameMinute'"},"esm":{"title":"ESM","code":"import { isSameMinute } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameMinute(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisMinute","category":"Minute Helpers","title":"isThisMinute","description":"Is the given date in the same minute as the current date?","content":{"id":"isThisMinute","longname":"isThisMinute","name":"isThisMinute","kind":"member","scope":"global","description":"Is the given date in the same minute as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If now is 25 September 2014 18:30:15.500,\n// is 25 September 2014 18:30:00 in this minute?\nvar result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n//=> true"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisMinute"},"summary":"Is the given date in the same minute as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this minute"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisMinute","fp":"fp/isThisMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisMinute = require('date-fns/isThisMinute')"},"es2015":{"title":"ES 2015","code":"import isThisMinute from 'date-fns/isThisMinute'"},"esm":{"title":"ESM","code":"import { isThisMinute } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisMinute(date)"},{"type":"jsdoc","kind":"function","urlId":"roundToNearestMinutes","category":"Minute Helpers","title":"roundToNearestMinutes","description":"Rounds the given date to the nearest minute","content":{"id":"roundToNearestMinutes","longname":"roundToNearestMinutes","name":"roundToNearestMinutes","kind":"member","scope":"global","description":"Rounds the given date to the nearest minute (or number of minutes).\nRounds up when the given date is exactly between the nearest round minutes.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"nearest number of minutes to round to. E.g. `15` to round to quarter hours.","name":"options.nearestTo"}],"examples":["// Round 10 July 2014 12:12:34 to nearest minute:\nvar result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n//=> Thu Jul 10 2014 12:13:00","// Round 10 July 2014 12:07:30 to nearest quarter hour:\nvar result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n// rounds up because given date is exactly between 12:00:00 and 12:15:00\n//=> Thu Jul 10 2014 12:15:00"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.nearestTo` must be between 1 and 30"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/roundToNearestMinutes"},"summary":"Rounds the given date to the nearest minute","returns":[{"type":{"names":["Date"]},"description":"the new date rounded to the closest minute"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"nearest number of minutes to round to. E.g. `15` to round to quarter hours.","name":"nearestTo","isProperty":true}]}],"relatedDocs":{"default":"roundToNearestMinutes","fp":"fp/roundToNearestMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var roundToNearestMinutes = require('date-fns/roundToNearestMinutes')"},"es2015":{"title":"ES 2015","code":"import roundToNearestMinutes from 'date-fns/roundToNearestMinutes'"},"esm":{"title":"ESM","code":"import { roundToNearestMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"roundToNearestMinutes(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/roundToNearestMinutes","category":"Minute Helpers","title":"roundToNearestMinutes","description":"Rounds the given date to the nearest minute","content":{"id":"roundToNearestMinutes","longname":"roundToNearestMinutes","name":"roundToNearestMinutes","kind":"member","scope":"global","description":"Rounds the given date to the nearest minute (or number of minutes).\nRounds up when the given date is exactly between the nearest round minutes.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/roundToNearestMinutes"},"summary":"Rounds the given date to the nearest minute","returns":[{"type":{"names":["Date"]},"description":"the new date rounded to the closest minute"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date"}],"generatedFrom":"roundToNearestMinutes","relatedDocs":{"default":"roundToNearestMinutes","fp":"fp/roundToNearestMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var roundToNearestMinutes = require('date-fns/fp/roundToNearestMinutes')"},"es2015":{"title":"ES 2015","code":"import roundToNearestMinutes from 'date-fns/fp/roundToNearestMinutes'"},"esm":{"title":"ESM","code":"import { roundToNearestMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"roundToNearestMinutes(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/roundToNearestMinutesWithOptions","category":"Minute Helpers","title":"roundToNearestMinutesWithOptions","description":"Rounds the given date to the nearest minute","content":{"id":"roundToNearestMinutesWithOptions","longname":"roundToNearestMinutesWithOptions","name":"roundToNearestMinutesWithOptions","kind":"member","scope":"global","description":"Rounds the given date to the nearest minute (or number of minutes).\nRounds up when the given date is exactly between the nearest round minutes.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"nearest number of minutes to round to. E.g. `15` to round to quarter hours.","name":"options.nearestTo"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.nearestTo` must be between 1 and 30"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/roundToNearestMinutes"},"summary":"Rounds the given date to the nearest minute","returns":[{"type":{"names":["Date"]},"description":"the new date rounded to the closest minute"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"nearest number of minutes to round to. E.g. `15` to round to quarter hours.","name":"nearestTo","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the date to round","name":"date","optional":false}],"generatedFrom":"roundToNearestMinutes","relatedDocs":{"default":"roundToNearestMinutes","fp":"fp/roundToNearestMinutes","fpWithOptions":"fp/roundToNearestMinutesWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var roundToNearestMinutes = require('date-fns/fp/roundToNearestMinutes')"},"es2015":{"title":"ES 2015","code":"import roundToNearestMinutes from 'date-fns/fp/roundToNearestMinutes'"},"esm":{"title":"ESM","code":"import { roundToNearestMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"roundToNearestMinutes(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"setMinutes","category":"Minute Helpers","title":"setMinutes","description":"Set the minutes to the given date.","content":{"id":"setMinutes","longname":"setMinutes","name":"setMinutes","kind":"member","scope":"global","description":"Set the minutes to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the minutes of the new date","name":"minutes"}],"examples":["// Set 45 minutes to 1 September 2014 11:30:40:\nvar result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n//=> Mon Sep 01 2014 11:45:40"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMinutes"},"summary":"Set the minutes to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the minutes of the new date","name":"minutes"}],"relatedDocs":{"default":"setMinutes","fp":"fp/setMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMinutes = require('date-fns/setMinutes')"},"es2015":{"title":"ES 2015","code":"import setMinutes from 'date-fns/setMinutes'"},"esm":{"title":"ESM","code":"import { setMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setMinutes(date, minutes)"},{"type":"jsdoc","kind":"function","urlId":"fp/setMinutes","category":"Minute Helpers","title":"setMinutes","description":"Set the minutes to the given date.","content":{"id":"setMinutes","longname":"setMinutes","name":"setMinutes","kind":"member","scope":"global","description":"Set the minutes to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the minutes of the new date","name":"minutes"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMinutes"},"summary":"Set the minutes to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the minutes of the new date","name":"minutes"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setMinutes","relatedDocs":{"default":"setMinutes","fp":"fp/setMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMinutes = require('date-fns/fp/setMinutes')"},"es2015":{"title":"ES 2015","code":"import setMinutes from 'date-fns/fp/setMinutes'"},"esm":{"title":"ESM","code":"import { setMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setMinutes(minutes)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfMinute","category":"Minute Helpers","title":"startOfMinute","description":"Return the start of a minute for the given date.","content":{"id":"startOfMinute","longname":"startOfMinute","name":"startOfMinute","kind":"member","scope":"global","description":"Return the start of a minute for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a minute for 1 December 2014 22:15:45.400:\nvar result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n//=> Mon Dec 01 2014 22:15:00"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfMinute"},"summary":"Return the start of a minute for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a minute"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfMinute","fp":"fp/startOfMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfMinute = require('date-fns/startOfMinute')"},"es2015":{"title":"ES 2015","code":"import startOfMinute from 'date-fns/startOfMinute'"},"esm":{"title":"ESM","code":"import { startOfMinute } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfMinute(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfMinute","category":"Minute Helpers","title":"startOfMinute","description":"Return the start of a minute for the given date.","content":{"id":"startOfMinute","longname":"startOfMinute","name":"startOfMinute","kind":"member","scope":"global","description":"Return the start of a minute for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfMinute"},"summary":"Return the start of a minute for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a minute"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfMinute","relatedDocs":{"default":"startOfMinute","fp":"fp/startOfMinute"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfMinute = require('date-fns/fp/startOfMinute')"},"es2015":{"title":"ES 2015","code":"import startOfMinute from 'date-fns/fp/startOfMinute'"},"esm":{"title":"ESM","code":"import { startOfMinute } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfMinute(date)"},{"type":"jsdoc","kind":"function","urlId":"subMinutes","category":"Minute Helpers","title":"subMinutes","description":"Subtract the specified number of minutes from the given date.","content":{"id":"subMinutes","longname":"subMinutes","name":"subMinutes","kind":"member","scope":"global","description":"Subtract the specified number of minutes from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 30 minutes from 10 July 2014 12:00:00:\nvar result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n//=> Thu Jul 10 2014 11:30:00"],"category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMinutes"},"summary":"Subtract the specified number of minutes from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subMinutes","fp":"fp/subMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMinutes = require('date-fns/subMinutes')"},"es2015":{"title":"ES 2015","code":"import subMinutes from 'date-fns/subMinutes'"},"esm":{"title":"ESM","code":"import { subMinutes } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subMinutes(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subMinutes","category":"Minute Helpers","title":"subMinutes","description":"Subtract the specified number of minutes from the given date.","content":{"id":"subMinutes","longname":"subMinutes","name":"subMinutes","kind":"member","scope":"global","description":"Subtract the specified number of minutes from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Minute Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMinutes"},"summary":"Subtract the specified number of minutes from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the minutes subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subMinutes","relatedDocs":{"default":"subMinutes","fp":"fp/subMinutes"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMinutes = require('date-fns/fp/subMinutes')"},"es2015":{"title":"ES 2015","code":"import subMinutes from 'date-fns/fp/subMinutes'"},"esm":{"title":"ESM","code":"import { subMinutes } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subMinutes(amount)(date)"}],"Hour Helpers":[{"type":"jsdoc","kind":"function","urlId":"addHours","category":"Hour Helpers","title":"addHours","description":"Add the specified number of hours to the given date.","content":{"id":"addHours","longname":"addHours","name":"addHours","kind":"member","scope":"global","description":"Add the specified number of hours to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 2 hours to 10 July 2014 23:00:00:\nvar result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n//=> Fri Jul 11 2014 01:00:00"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addHours"},"summary":"Add the specified number of hours to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addHours","fp":"fp/addHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var addHours = require('date-fns/addHours')"},"es2015":{"title":"ES 2015","code":"import addHours from 'date-fns/addHours'"},"esm":{"title":"ESM","code":"import { addHours } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addHours(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addHours","category":"Hour Helpers","title":"addHours","description":"Add the specified number of hours to the given date.","content":{"id":"addHours","longname":"addHours","name":"addHours","kind":"member","scope":"global","description":"Add the specified number of hours to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addHours"},"summary":"Add the specified number of hours to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addHours","relatedDocs":{"default":"addHours","fp":"fp/addHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var addHours = require('date-fns/fp/addHours')"},"es2015":{"title":"ES 2015","code":"import addHours from 'date-fns/fp/addHours'"},"esm":{"title":"ESM","code":"import { addHours } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addHours(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInHours","category":"Hour Helpers","title":"differenceInHours","description":"Get the number of hours between the given dates.","content":{"id":"differenceInHours","longname":"differenceInHours","name":"differenceInHours","kind":"member","scope":"global","description":"Get the number of hours between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\nvar result = differenceInHours(\n  new Date(2014, 6, 2, 19, 0),\n  new Date(2014, 6, 2, 6, 50)\n)\n//=> 12"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInHours"},"summary":"Get the number of hours between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of hours"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInHours","fp":"fp/differenceInHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInHours = require('date-fns/differenceInHours')"},"es2015":{"title":"ES 2015","code":"import differenceInHours from 'date-fns/differenceInHours'"},"esm":{"title":"ESM","code":"import { differenceInHours } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInHours(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInHours","category":"Hour Helpers","title":"differenceInHours","description":"Get the number of hours between the given dates.","content":{"id":"differenceInHours","longname":"differenceInHours","name":"differenceInHours","kind":"member","scope":"global","description":"Get the number of hours between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInHours"},"summary":"Get the number of hours between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of hours"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInHours","relatedDocs":{"default":"differenceInHours","fp":"fp/differenceInHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInHours = require('date-fns/fp/differenceInHours')"},"es2015":{"title":"ES 2015","code":"import differenceInHours from 'date-fns/fp/differenceInHours'"},"esm":{"title":"ESM","code":"import { differenceInHours } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInHours(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfHour","category":"Hour Helpers","title":"endOfHour","description":"Return the end of an hour for the given date.","content":{"id":"endOfHour","longname":"endOfHour","name":"endOfHour","kind":"member","scope":"global","description":"Return the end of an hour for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of an hour for 2 September 2014 11:55:00:\nvar result = endOfHour(new Date(2014, 8, 2, 11, 55))\n//=> Tue Sep 02 2014 11:59:59.999"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfHour"},"summary":"Return the end of an hour for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an hour"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfHour","fp":"fp/endOfHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfHour = require('date-fns/endOfHour')"},"es2015":{"title":"ES 2015","code":"import endOfHour from 'date-fns/endOfHour'"},"esm":{"title":"ESM","code":"import { endOfHour } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfHour(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfHour","category":"Hour Helpers","title":"endOfHour","description":"Return the end of an hour for the given date.","content":{"id":"endOfHour","longname":"endOfHour","name":"endOfHour","kind":"member","scope":"global","description":"Return the end of an hour for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfHour"},"summary":"Return the end of an hour for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an hour"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfHour","relatedDocs":{"default":"endOfHour","fp":"fp/endOfHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfHour = require('date-fns/fp/endOfHour')"},"es2015":{"title":"ES 2015","code":"import endOfHour from 'date-fns/fp/endOfHour'"},"esm":{"title":"ESM","code":"import { endOfHour } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfHour(date)"},{"type":"jsdoc","kind":"function","urlId":"getHours","category":"Hour Helpers","title":"getHours","description":"Get the hours of the given date.","content":{"id":"getHours","longname":"getHours","name":"getHours","kind":"member","scope":"global","description":"Get the hours of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Get the hours of 29 February 2012 11:45:00:\nvar result = getHours(new Date(2012, 1, 29, 11, 45))\n//=> 11"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getHours"},"summary":"Get the hours of the given date.","returns":[{"type":{"names":["Number"]},"description":"the hours"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getHours","fp":"fp/getHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var getHours = require('date-fns/getHours')"},"es2015":{"title":"ES 2015","code":"import getHours from 'date-fns/getHours'"},"esm":{"title":"ESM","code":"import { getHours } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getHours(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getHours","category":"Hour Helpers","title":"getHours","description":"Get the hours of the given date.","content":{"id":"getHours","longname":"getHours","name":"getHours","kind":"member","scope":"global","description":"Get the hours of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getHours"},"summary":"Get the hours of the given date.","returns":[{"type":{"names":["Number"]},"description":"the hours"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getHours","relatedDocs":{"default":"getHours","fp":"fp/getHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var getHours = require('date-fns/fp/getHours')"},"es2015":{"title":"ES 2015","code":"import getHours from 'date-fns/fp/getHours'"},"esm":{"title":"ESM","code":"import { getHours } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getHours(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameHour","category":"Hour Helpers","title":"isSameHour","description":"Are the given dates in the same hour?","content":{"id":"isSameHour","longname":"isSameHour","name":"isSameHour","kind":"member","scope":"global","description":"Are the given dates in the same hour?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\nvar result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n//=> true"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameHour"},"summary":"Are the given dates in the same hour?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same hour"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameHour","fp":"fp/isSameHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameHour = require('date-fns/isSameHour')"},"es2015":{"title":"ES 2015","code":"import isSameHour from 'date-fns/isSameHour'"},"esm":{"title":"ESM","code":"import { isSameHour } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameHour(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameHour","category":"Hour Helpers","title":"isSameHour","description":"Are the given dates in the same hour?","content":{"id":"isSameHour","longname":"isSameHour","name":"isSameHour","kind":"member","scope":"global","description":"Are the given dates in the same hour?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameHour"},"summary":"Are the given dates in the same hour?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same hour"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameHour","relatedDocs":{"default":"isSameHour","fp":"fp/isSameHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameHour = require('date-fns/fp/isSameHour')"},"es2015":{"title":"ES 2015","code":"import isSameHour from 'date-fns/fp/isSameHour'"},"esm":{"title":"ESM","code":"import { isSameHour } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameHour(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisHour","category":"Hour Helpers","title":"isThisHour","description":"Is the given date in the same hour as the current date?","content":{"id":"isThisHour","longname":"isThisHour","name":"isThisHour","kind":"member","scope":"global","description":"Is the given date in the same hour as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If now is 25 September 2014 18:30:15.500,\n// is 25 September 2014 18:00:00 in this hour?\nvar result = isThisHour(new Date(2014, 8, 25, 18))\n//=> true"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisHour"},"summary":"Is the given date in the same hour as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this hour"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisHour","fp":"fp/isThisHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisHour = require('date-fns/isThisHour')"},"es2015":{"title":"ES 2015","code":"import isThisHour from 'date-fns/isThisHour'"},"esm":{"title":"ESM","code":"import { isThisHour } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisHour(date)"},{"type":"jsdoc","kind":"function","urlId":"setHours","category":"Hour Helpers","title":"setHours","description":"Set the hours to the given date.","content":{"id":"setHours","longname":"setHours","name":"setHours","kind":"member","scope":"global","description":"Set the hours to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the hours of the new date","name":"hours"}],"examples":["// Set 4 hours to 1 September 2014 11:30:00:\nvar result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n//=> Mon Sep 01 2014 04:30:00"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setHours"},"summary":"Set the hours to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the hours of the new date","name":"hours"}],"relatedDocs":{"default":"setHours","fp":"fp/setHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var setHours = require('date-fns/setHours')"},"es2015":{"title":"ES 2015","code":"import setHours from 'date-fns/setHours'"},"esm":{"title":"ESM","code":"import { setHours } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setHours(date, hours)"},{"type":"jsdoc","kind":"function","urlId":"fp/setHours","category":"Hour Helpers","title":"setHours","description":"Set the hours to the given date.","content":{"id":"setHours","longname":"setHours","name":"setHours","kind":"member","scope":"global","description":"Set the hours to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the hours of the new date","name":"hours"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setHours"},"summary":"Set the hours to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the hours of the new date","name":"hours"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setHours","relatedDocs":{"default":"setHours","fp":"fp/setHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var setHours = require('date-fns/fp/setHours')"},"es2015":{"title":"ES 2015","code":"import setHours from 'date-fns/fp/setHours'"},"esm":{"title":"ESM","code":"import { setHours } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setHours(hours)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfHour","category":"Hour Helpers","title":"startOfHour","description":"Return the start of an hour for the given date.","content":{"id":"startOfHour","longname":"startOfHour","name":"startOfHour","kind":"member","scope":"global","description":"Return the start of an hour for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of an hour for 2 September 2014 11:55:00:\nvar result = startOfHour(new Date(2014, 8, 2, 11, 55))\n//=> Tue Sep 02 2014 11:00:00"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfHour"},"summary":"Return the start of an hour for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an hour"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfHour","fp":"fp/startOfHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfHour = require('date-fns/startOfHour')"},"es2015":{"title":"ES 2015","code":"import startOfHour from 'date-fns/startOfHour'"},"esm":{"title":"ESM","code":"import { startOfHour } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfHour(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfHour","category":"Hour Helpers","title":"startOfHour","description":"Return the start of an hour for the given date.","content":{"id":"startOfHour","longname":"startOfHour","name":"startOfHour","kind":"member","scope":"global","description":"Return the start of an hour for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfHour"},"summary":"Return the start of an hour for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an hour"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfHour","relatedDocs":{"default":"startOfHour","fp":"fp/startOfHour"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfHour = require('date-fns/fp/startOfHour')"},"es2015":{"title":"ES 2015","code":"import startOfHour from 'date-fns/fp/startOfHour'"},"esm":{"title":"ESM","code":"import { startOfHour } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfHour(date)"},{"type":"jsdoc","kind":"function","urlId":"subHours","category":"Hour Helpers","title":"subHours","description":"Subtract the specified number of hours from the given date.","content":{"id":"subHours","longname":"subHours","name":"subHours","kind":"member","scope":"global","description":"Subtract the specified number of hours from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 2 hours from 11 July 2014 01:00:00:\nvar result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n//=> Thu Jul 10 2014 23:00:00"],"category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subHours"},"summary":"Subtract the specified number of hours from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subHours","fp":"fp/subHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var subHours = require('date-fns/subHours')"},"es2015":{"title":"ES 2015","code":"import subHours from 'date-fns/subHours'"},"esm":{"title":"ESM","code":"import { subHours } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subHours(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subHours","category":"Hour Helpers","title":"subHours","description":"Subtract the specified number of hours from the given date.","content":{"id":"subHours","longname":"subHours","name":"subHours","kind":"member","scope":"global","description":"Subtract the specified number of hours from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Hour Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subHours"},"summary":"Subtract the specified number of hours from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the hours subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subHours","relatedDocs":{"default":"subHours","fp":"fp/subHours"},"usage":{"commonjs":{"title":"CommonJS","code":"var subHours = require('date-fns/fp/subHours')"},"es2015":{"title":"ES 2015","code":"import subHours from 'date-fns/fp/subHours'"},"esm":{"title":"ESM","code":"import { subHours } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subHours(amount)(date)"}],"Day Helpers":[{"type":"jsdoc","kind":"function","urlId":"addBusinessDays","category":"Day Helpers","title":"addBusinessDays","description":"Add the specified number of business days (mon - fri) to the given date.","content":{"id":"addBusinessDays","longname":"addBusinessDays","name":"addBusinessDays","kind":"member","scope":"global","description":"Add the specified number of business days (mon - fri) to the given date, ignoring weekends.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 10 business days to 1 September 2014:\nvar result = addBusinessDays(new Date(2014, 8, 1), 10)\n//=> Mon Sep 15 2014 00:00:00 (skipped weekend days)"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addBusinessDays"},"summary":"Add the specified number of business days (mon - fri) to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the business days added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addBusinessDays","fp":"fp/addBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var addBusinessDays = require('date-fns/addBusinessDays')"},"es2015":{"title":"ES 2015","code":"import addBusinessDays from 'date-fns/addBusinessDays'"},"esm":{"title":"ESM","code":"import { addBusinessDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addBusinessDays(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addBusinessDays","category":"Day Helpers","title":"addBusinessDays","description":"Add the specified number of business days (mon - fri) to the given date.","content":{"id":"addBusinessDays","longname":"addBusinessDays","name":"addBusinessDays","kind":"member","scope":"global","description":"Add the specified number of business days (mon - fri) to the given date, ignoring weekends.","params":[{"type":{"names":["Number"]},"description":"the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addBusinessDays"},"summary":"Add the specified number of business days (mon - fri) to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the business days added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addBusinessDays","relatedDocs":{"default":"addBusinessDays","fp":"fp/addBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var addBusinessDays = require('date-fns/fp/addBusinessDays')"},"es2015":{"title":"ES 2015","code":"import addBusinessDays from 'date-fns/fp/addBusinessDays'"},"esm":{"title":"ESM","code":"import { addBusinessDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addBusinessDays(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"addDays","category":"Day Helpers","title":"addDays","description":"Add the specified number of days to the given date.","content":{"id":"addDays","longname":"addDays","name":"addDays","kind":"member","scope":"global","description":"Add the specified number of days to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 10 days to 1 September 2014:\nvar result = addDays(new Date(2014, 8, 1), 10)\n//=> Thu Sep 11 2014 00:00:00"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addDays"},"summary":"Add the specified number of days to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the days added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addDays","fp":"fp/addDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var addDays = require('date-fns/addDays')"},"es2015":{"title":"ES 2015","code":"import addDays from 'date-fns/addDays'"},"esm":{"title":"ESM","code":"import { addDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addDays(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addDays","category":"Day Helpers","title":"addDays","description":"Add the specified number of days to the given date.","content":{"id":"addDays","longname":"addDays","name":"addDays","kind":"member","scope":"global","description":"Add the specified number of days to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addDays"},"summary":"Add the specified number of days to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the days added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addDays","relatedDocs":{"default":"addDays","fp":"fp/addDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var addDays = require('date-fns/fp/addDays')"},"es2015":{"title":"ES 2015","code":"import addDays from 'date-fns/fp/addDays'"},"esm":{"title":"ESM","code":"import { addDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addDays(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInBusinessDays","category":"Day Helpers","title":"differenceInBusinessDays","description":"Get the number of business days between the given dates.","content":{"id":"differenceInBusinessDays","longname":"differenceInBusinessDays","name":"differenceInBusinessDays","kind":"member","scope":"global","description":"Get the number of business day periods between the given dates.\nBusiness days being days that arent in the weekend.\nLike `differenceInCalendarDays`, the function removes the times from\nthe dates before calculating the difference.","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many business days are between\n// 10 January 2014 and 20 July 2014?\nvar result = differenceInBusinessDays(\n  new Date(2014, 6, 20),\n  new Date(2014, 0, 10)\n)\n//=> 136"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":10,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInBusinessDays"},"summary":"Get the number of business days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of business days"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInBusinessDays","fp":"fp/differenceInBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInBusinessDays = require('date-fns/differenceInBusinessDays')"},"es2015":{"title":"ES 2015","code":"import differenceInBusinessDays from 'date-fns/differenceInBusinessDays'"},"esm":{"title":"ESM","code":"import { differenceInBusinessDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInBusinessDays(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInBusinessDays","category":"Day Helpers","title":"differenceInBusinessDays","description":"Get the number of business days between the given dates.","content":{"id":"differenceInBusinessDays","longname":"differenceInBusinessDays","name":"differenceInBusinessDays","kind":"member","scope":"global","description":"Get the number of business day periods between the given dates.\nBusiness days being days that arent in the weekend.\nLike `differenceInCalendarDays`, the function removes the times from\nthe dates before calculating the difference.","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":10,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInBusinessDays"},"summary":"Get the number of business days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of business days"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInBusinessDays","relatedDocs":{"default":"differenceInBusinessDays","fp":"fp/differenceInBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInBusinessDays = require('date-fns/fp/differenceInBusinessDays')"},"es2015":{"title":"ES 2015","code":"import differenceInBusinessDays from 'date-fns/fp/differenceInBusinessDays'"},"esm":{"title":"ESM","code":"import { differenceInBusinessDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInBusinessDays(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarDays","category":"Day Helpers","title":"differenceInCalendarDays","description":"Get the number of calendar days between the given dates.","content":{"id":"differenceInCalendarDays","longname":"differenceInCalendarDays","name":"differenceInCalendarDays","kind":"member","scope":"global","description":"Get the number of calendar days between the given dates. This means that the times are removed\nfrom the dates and then the difference in days is calculated.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar days are between\n// 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\nvar result = differenceInCalendarDays(\n  new Date(2012, 6, 2, 0, 0),\n  new Date(2011, 6, 2, 23, 0)\n)\n//=> 366\n// How many calendar days are between\n// 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\nvar result = differenceInCalendarDays(\n  new Date(2011, 6, 3, 0, 1),\n  new Date(2011, 6, 2, 23, 59)\n)\n//=> 1"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarDays"},"summary":"Get the number of calendar days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar days"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarDays","fp":"fp/differenceInCalendarDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarDays = require('date-fns/differenceInCalendarDays')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarDays from 'date-fns/differenceInCalendarDays'"},"esm":{"title":"ESM","code":"import { differenceInCalendarDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarDays(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarDays","category":"Day Helpers","title":"differenceInCalendarDays","description":"Get the number of calendar days between the given dates.","content":{"id":"differenceInCalendarDays","longname":"differenceInCalendarDays","name":"differenceInCalendarDays","kind":"member","scope":"global","description":"Get the number of calendar days between the given dates. This means that the times are removed\nfrom the dates and then the difference in days is calculated.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarDays"},"summary":"Get the number of calendar days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar days"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarDays","relatedDocs":{"default":"differenceInCalendarDays","fp":"fp/differenceInCalendarDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarDays = require('date-fns/fp/differenceInCalendarDays')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarDays from 'date-fns/fp/differenceInCalendarDays'"},"esm":{"title":"ESM","code":"import { differenceInCalendarDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarDays(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInDays","category":"Day Helpers","title":"differenceInDays","description":"Get the number of full days between the given dates.","content":{"id":"differenceInDays","longname":"differenceInDays","name":"differenceInDays","kind":"member","scope":"global","description":"Get the number of full day periods between two dates. Fractional days are\ntruncated towards zero.\n\nOne \"full day\" is the distance between a local time in one day to the same\nlocal time on the next or previous day. A full day can sometimes be less than\nor more than 24 hours if a daylight savings change happens between two dates.\n\nTo ignore DST and only measure exact 24-hour periods, use this instead:\n`Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full days are between\n// 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\nvar result = differenceInDays(\n  new Date(2012, 6, 2, 0, 0),\n  new Date(2011, 6, 2, 23, 0)\n)\n//=> 365\n// How many full days are between\n// 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\nvar result = differenceInDays(\n  new Date(2011, 6, 3, 0, 1),\n  new Date(2011, 6, 2, 23, 59)\n)\n//=> 0\n// How many full days are between\n// 1 March 2020 0:00 and 1 June 2020 0:00 ?\n// Note: because local time is used, the\n// result will always be 92 days, even in\n// time zones where DST starts and the\n// period has only 92*24-1 hours.\nvar result = differenceInDays(\n  new Date(2020, 5, 1),\n  new Date(2020, 2, 1)\n)\n//=> 92"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":29,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInDays"},"summary":"Get the number of full days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full days according to the local timezone"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInDays","fp":"fp/differenceInDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInDays = require('date-fns/differenceInDays')"},"es2015":{"title":"ES 2015","code":"import differenceInDays from 'date-fns/differenceInDays'"},"esm":{"title":"ESM","code":"import { differenceInDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInDays(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInDays","category":"Day Helpers","title":"differenceInDays","description":"Get the number of full days between the given dates.","content":{"id":"differenceInDays","longname":"differenceInDays","name":"differenceInDays","kind":"member","scope":"global","description":"Get the number of full day periods between two dates. Fractional days are\ntruncated towards zero.\n\nOne \"full day\" is the distance between a local time in one day to the same\nlocal time on the next or previous day. A full day can sometimes be less than\nor more than 24 hours if a daylight savings change happens between two dates.\n\nTo ignore DST and only measure exact 24-hour periods, use this instead:\n`Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":29,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInDays"},"summary":"Get the number of full days between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full days according to the local timezone"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInDays","relatedDocs":{"default":"differenceInDays","fp":"fp/differenceInDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInDays = require('date-fns/fp/differenceInDays')"},"es2015":{"title":"ES 2015","code":"import differenceInDays from 'date-fns/fp/differenceInDays'"},"esm":{"title":"ESM","code":"import { differenceInDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInDays(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfDay","category":"Day Helpers","title":"endOfDay","description":"Return the end of a day for the given date.","content":{"id":"endOfDay","longname":"endOfDay","name":"endOfDay","kind":"member","scope":"global","description":"Return the end of a day for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a day for 2 September 2014 11:55:00:\nvar result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 02 2014 23:59:59.999"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfDay"},"summary":"Return the end of a day for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a day"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfDay","fp":"fp/endOfDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfDay = require('date-fns/endOfDay')"},"es2015":{"title":"ES 2015","code":"import endOfDay from 'date-fns/endOfDay'"},"esm":{"title":"ESM","code":"import { endOfDay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfDay(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfDay","category":"Day Helpers","title":"endOfDay","description":"Return the end of a day for the given date.","content":{"id":"endOfDay","longname":"endOfDay","name":"endOfDay","kind":"member","scope":"global","description":"Return the end of a day for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfDay"},"summary":"Return the end of a day for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a day"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfDay","relatedDocs":{"default":"endOfDay","fp":"fp/endOfDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfDay = require('date-fns/fp/endOfDay')"},"es2015":{"title":"ES 2015","code":"import endOfDay from 'date-fns/fp/endOfDay'"},"esm":{"title":"ESM","code":"import { endOfDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfDay(date)"},{"type":"jsdoc","kind":"function","urlId":"endOfToday","category":"Day Helpers","title":"endOfToday","description":"Return the end of today.","content":{"id":"endOfToday","longname":"endOfToday","name":"endOfToday","kind":"member","scope":"global","description":"Return the end of today.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = endOfToday()\n//=> Mon Oct 6 2014 23:59:59.999"],"returns":[{"type":{"names":["Date"]},"description":"the end of today"}],"category":"Day Helpers","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfToday"},"summary":"Return the end of today.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"endOfToday","fp":"fp/endOfToday"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfToday = require('date-fns/endOfToday')"},"es2015":{"title":"ES 2015","code":"import endOfToday from 'date-fns/endOfToday'"},"esm":{"title":"ESM","code":"import { endOfToday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"endOfTomorrow","category":"Day Helpers","title":"endOfTomorrow","description":"Return the end of tomorrow.","content":{"id":"endOfTomorrow","longname":"endOfTomorrow","name":"endOfTomorrow","kind":"member","scope":"global","description":"Return the end of tomorrow.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `new Date()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = endOfTomorrow()\n//=> Tue Oct 7 2014 23:59:59.999"],"returns":[{"type":{"names":["Date"]},"description":"the end of tomorrow"}],"category":"Day Helpers","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfTomorrow"},"summary":"Return the end of tomorrow.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"endOfTomorrow","fp":"fp/endOfTomorrow"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfTomorrow = require('date-fns/endOfTomorrow')"},"es2015":{"title":"ES 2015","code":"import endOfTomorrow from 'date-fns/endOfTomorrow'"},"esm":{"title":"ESM","code":"import { endOfTomorrow } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"endOfYesterday","category":"Day Helpers","title":"endOfYesterday","description":"Return the end of yesterday.","content":{"id":"endOfYesterday","longname":"endOfYesterday","name":"endOfYesterday","kind":"member","scope":"global","description":"Return the end of yesterday.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `new Date()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = endOfYesterday()\n//=> Sun Oct 5 2014 23:59:59.999"],"returns":[{"type":{"names":["Date"]},"description":"the end of yesterday"}],"category":"Day Helpers","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfYesterday"},"summary":"Return the end of yesterday.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"endOfYesterday","fp":"fp/endOfYesterday"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfYesterday = require('date-fns/endOfYesterday')"},"es2015":{"title":"ES 2015","code":"import endOfYesterday from 'date-fns/endOfYesterday'"},"esm":{"title":"ESM","code":"import { endOfYesterday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"getDate","category":"Day Helpers","title":"getDate","description":"Get the day of the month of the given date.","content":{"id":"getDate","longname":"getDate","name":"getDate","kind":"member","scope":"global","description":"Get the day of the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which day of the month is 29 February 2012?\nvar result = getDate(new Date(2012, 1, 29))\n//=> 29"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDate"},"summary":"Get the day of the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDate","fp":"fp/getDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDate = require('date-fns/getDate')"},"es2015":{"title":"ES 2015","code":"import getDate from 'date-fns/getDate'"},"esm":{"title":"ESM","code":"import { getDate } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDate(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDate","category":"Day Helpers","title":"getDate","description":"Get the day of the month of the given date.","content":{"id":"getDate","longname":"getDate","name":"getDate","kind":"member","scope":"global","description":"Get the day of the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDate"},"summary":"Get the day of the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDate","relatedDocs":{"default":"getDate","fp":"fp/getDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDate = require('date-fns/fp/getDate')"},"es2015":{"title":"ES 2015","code":"import getDate from 'date-fns/fp/getDate'"},"esm":{"title":"ESM","code":"import { getDate } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDate(date)"},{"type":"jsdoc","kind":"function","urlId":"getDayOfYear","category":"Day Helpers","title":"getDayOfYear","description":"Get the day of the year of the given date.","content":{"id":"getDayOfYear","longname":"getDayOfYear","name":"getDayOfYear","kind":"member","scope":"global","description":"Get the day of the year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which day of the year is 2 July 2014?\nvar result = getDayOfYear(new Date(2014, 6, 2))\n//=> 183"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDayOfYear"},"summary":"Get the day of the year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDayOfYear","fp":"fp/getDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDayOfYear = require('date-fns/getDayOfYear')"},"es2015":{"title":"ES 2015","code":"import getDayOfYear from 'date-fns/getDayOfYear'"},"esm":{"title":"ESM","code":"import { getDayOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDayOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDayOfYear","category":"Day Helpers","title":"getDayOfYear","description":"Get the day of the year of the given date.","content":{"id":"getDayOfYear","longname":"getDayOfYear","name":"getDayOfYear","kind":"member","scope":"global","description":"Get the day of the year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDayOfYear"},"summary":"Get the day of the year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDayOfYear","relatedDocs":{"default":"getDayOfYear","fp":"fp/getDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDayOfYear = require('date-fns/fp/getDayOfYear')"},"es2015":{"title":"ES 2015","code":"import getDayOfYear from 'date-fns/fp/getDayOfYear'"},"esm":{"title":"ESM","code":"import { getDayOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDayOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameDay","category":"Day Helpers","title":"isSameDay","description":"Are the given dates in the same day?","content":{"id":"isSameDay","longname":"isSameDay","name":"isSameDay","kind":"member","scope":"global","description":"Are the given dates in the same day?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\nvar result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n//=> true"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameDay"},"summary":"Are the given dates in the same day?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same day"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameDay","fp":"fp/isSameDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameDay = require('date-fns/isSameDay')"},"es2015":{"title":"ES 2015","code":"import isSameDay from 'date-fns/isSameDay'"},"esm":{"title":"ESM","code":"import { isSameDay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameDay(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameDay","category":"Day Helpers","title":"isSameDay","description":"Are the given dates in the same day?","content":{"id":"isSameDay","longname":"isSameDay","name":"isSameDay","kind":"member","scope":"global","description":"Are the given dates in the same day?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameDay"},"summary":"Are the given dates in the same day?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same day"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameDay","relatedDocs":{"default":"isSameDay","fp":"fp/isSameDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameDay = require('date-fns/fp/isSameDay')"},"es2015":{"title":"ES 2015","code":"import isSameDay from 'date-fns/fp/isSameDay'"},"esm":{"title":"ESM","code":"import { isSameDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameDay(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isToday","category":"Day Helpers","title":"isToday","description":"Is the given date today?","content":{"id":"isToday","longname":"isToday","name":"isToday","kind":"member","scope":"global","description":"Is the given date today?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 6 October 2014, is 6 October 14:00:00 today?\nvar result = isToday(new Date(2014, 9, 6, 14, 0))\n//=> true"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isToday"},"summary":"Is the given date today?","returns":[{"type":{"names":["Boolean"]},"description":"the date is today"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isToday","fp":"fp/isToday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isToday = require('date-fns/isToday')"},"es2015":{"title":"ES 2015","code":"import isToday from 'date-fns/isToday'"},"esm":{"title":"ESM","code":"import { isToday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isToday(date)"},{"type":"jsdoc","kind":"function","urlId":"isTomorrow","category":"Day Helpers","title":"isTomorrow","description":"Is the given date tomorrow?","content":{"id":"isTomorrow","longname":"isTomorrow","name":"isTomorrow","kind":"member","scope":"global","description":"Is the given date tomorrow?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\nvar result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n//=> true"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isTomorrow"},"summary":"Is the given date tomorrow?","returns":[{"type":{"names":["Boolean"]},"description":"the date is tomorrow"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isTomorrow","fp":"fp/isTomorrow"},"usage":{"commonjs":{"title":"CommonJS","code":"var isTomorrow = require('date-fns/isTomorrow')"},"es2015":{"title":"ES 2015","code":"import isTomorrow from 'date-fns/isTomorrow'"},"esm":{"title":"ESM","code":"import { isTomorrow } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isTomorrow(date)"},{"type":"jsdoc","kind":"function","urlId":"isYesterday","category":"Day Helpers","title":"isYesterday","description":"Is the given date yesterday?","content":{"id":"isYesterday","longname":"isYesterday","name":"isYesterday","kind":"member","scope":"global","description":"Is the given date yesterday?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 6 October 2014, is 5 October 14:00:00 yesterday?\nvar result = isYesterday(new Date(2014, 9, 5, 14, 0))\n//=> true"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isYesterday"},"summary":"Is the given date yesterday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is yesterday"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isYesterday","fp":"fp/isYesterday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isYesterday = require('date-fns/isYesterday')"},"es2015":{"title":"ES 2015","code":"import isYesterday from 'date-fns/isYesterday'"},"esm":{"title":"ESM","code":"import { isYesterday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isYesterday(date)"},{"type":"jsdoc","kind":"function","urlId":"setDate","category":"Day Helpers","title":"setDate","description":"Set the day of the month to the given date.","content":{"id":"setDate","longname":"setDate","name":"setDate","kind":"member","scope":"global","description":"Set the day of the month to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the month of the new date","name":"dayOfMonth"}],"examples":["// Set the 30th day of the month to 1 September 2014:\nvar result = setDate(new Date(2014, 8, 1), 30)\n//=> Tue Sep 30 2014 00:00:00"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDate"},"summary":"Set the day of the month to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the month set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the month of the new date","name":"dayOfMonth"}],"relatedDocs":{"default":"setDate","fp":"fp/setDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDate = require('date-fns/setDate')"},"es2015":{"title":"ES 2015","code":"import setDate from 'date-fns/setDate'"},"esm":{"title":"ESM","code":"import { setDate } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setDate(date, dayOfMonth)"},{"type":"jsdoc","kind":"function","urlId":"fp/setDate","category":"Day Helpers","title":"setDate","description":"Set the day of the month to the given date.","content":{"id":"setDate","longname":"setDate","name":"setDate","kind":"member","scope":"global","description":"Set the day of the month to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the day of the month of the new date","name":"dayOfMonth"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDate"},"summary":"Set the day of the month to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the month set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the day of the month of the new date","name":"dayOfMonth"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setDate","relatedDocs":{"default":"setDate","fp":"fp/setDate"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDate = require('date-fns/fp/setDate')"},"es2015":{"title":"ES 2015","code":"import setDate from 'date-fns/fp/setDate'"},"esm":{"title":"ESM","code":"import { setDate } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setDate(dayOfMonth)(date)"},{"type":"jsdoc","kind":"function","urlId":"setDayOfYear","category":"Day Helpers","title":"setDayOfYear","description":"Set the day of the year to the given date.","content":{"id":"setDayOfYear","longname":"setDayOfYear","name":"setDayOfYear","kind":"member","scope":"global","description":"Set the day of the year to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the year of the new date","name":"dayOfYear"}],"examples":["// Set the 2nd day of the year to 2 July 2014:\nvar result = setDayOfYear(new Date(2014, 6, 2), 2)\n//=> Thu Jan 02 2014 00:00:00"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDayOfYear"},"summary":"Set the day of the year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the year set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the year of the new date","name":"dayOfYear"}],"relatedDocs":{"default":"setDayOfYear","fp":"fp/setDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDayOfYear = require('date-fns/setDayOfYear')"},"es2015":{"title":"ES 2015","code":"import setDayOfYear from 'date-fns/setDayOfYear'"},"esm":{"title":"ESM","code":"import { setDayOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setDayOfYear(date, dayOfYear)"},{"type":"jsdoc","kind":"function","urlId":"fp/setDayOfYear","category":"Day Helpers","title":"setDayOfYear","description":"Set the day of the year to the given date.","content":{"id":"setDayOfYear","longname":"setDayOfYear","name":"setDayOfYear","kind":"member","scope":"global","description":"Set the day of the year to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the day of the year of the new date","name":"dayOfYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDayOfYear"},"summary":"Set the day of the year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the year set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the day of the year of the new date","name":"dayOfYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setDayOfYear","relatedDocs":{"default":"setDayOfYear","fp":"fp/setDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDayOfYear = require('date-fns/fp/setDayOfYear')"},"es2015":{"title":"ES 2015","code":"import setDayOfYear from 'date-fns/fp/setDayOfYear'"},"esm":{"title":"ESM","code":"import { setDayOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setDayOfYear(dayOfYear)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfDay","category":"Day Helpers","title":"startOfDay","description":"Return the start of a day for the given date.","content":{"id":"startOfDay","longname":"startOfDay","name":"startOfDay","kind":"member","scope":"global","description":"Return the start of a day for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a day for 2 September 2014 11:55:00:\nvar result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 02 2014 00:00:00"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfDay"},"summary":"Return the start of a day for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a day"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfDay","fp":"fp/startOfDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfDay = require('date-fns/startOfDay')"},"es2015":{"title":"ES 2015","code":"import startOfDay from 'date-fns/startOfDay'"},"esm":{"title":"ESM","code":"import { startOfDay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfDay(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfDay","category":"Day Helpers","title":"startOfDay","description":"Return the start of a day for the given date.","content":{"id":"startOfDay","longname":"startOfDay","name":"startOfDay","kind":"member","scope":"global","description":"Return the start of a day for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfDay"},"summary":"Return the start of a day for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a day"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfDay","relatedDocs":{"default":"startOfDay","fp":"fp/startOfDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfDay = require('date-fns/fp/startOfDay')"},"es2015":{"title":"ES 2015","code":"import startOfDay from 'date-fns/fp/startOfDay'"},"esm":{"title":"ESM","code":"import { startOfDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfDay(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfToday","category":"Day Helpers","title":"startOfToday","description":"Return the start of today.","content":{"id":"startOfToday","longname":"startOfToday","name":"startOfToday","kind":"member","scope":"global","description":"Return the start of today.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = startOfToday()\n//=> Mon Oct 6 2014 00:00:00"],"returns":[{"type":{"names":["Date"]},"description":"the start of today"}],"category":"Day Helpers","meta":{"lineno":3,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfToday"},"summary":"Return the start of today.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"startOfToday","fp":"fp/startOfToday"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfToday = require('date-fns/startOfToday')"},"es2015":{"title":"ES 2015","code":"import startOfToday from 'date-fns/startOfToday'"},"esm":{"title":"ESM","code":"import { startOfToday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"startOfTomorrow","category":"Day Helpers","title":"startOfTomorrow","description":"Return the start of tomorrow.","content":{"id":"startOfTomorrow","longname":"startOfTomorrow","name":"startOfTomorrow","kind":"member","scope":"global","description":"Return the start of tomorrow.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `new Date()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = startOfTomorrow()\n//=> Tue Oct 7 2014 00:00:00"],"returns":[{"type":{"names":["Date"]},"description":"the start of tomorrow"}],"category":"Day Helpers","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfTomorrow"},"summary":"Return the start of tomorrow.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"startOfTomorrow","fp":"fp/startOfTomorrow"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfTomorrow = require('date-fns/startOfTomorrow')"},"es2015":{"title":"ES 2015","code":"import startOfTomorrow from 'date-fns/startOfTomorrow'"},"esm":{"title":"ESM","code":"import { startOfTomorrow } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"startOfYesterday","category":"Day Helpers","title":"startOfYesterday","description":"Return the start of yesterday.","content":{"id":"startOfYesterday","longname":"startOfYesterday","name":"startOfYesterday","kind":"member","scope":"global","description":"Return the start of yesterday.\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `new Date()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","examples":["// If today is 6 October 2014:\nvar result = startOfYesterday()\n//=> Sun Oct 5 2014 00:00:00"],"returns":[{"type":{"names":["Date"]},"description":"the start of yesterday"}],"category":"Day Helpers","meta":{"lineno":1,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfYesterday"},"summary":"Return the start of yesterday.","customTags":[{"tag":"pure","value":"false"}],"order":0},"pure":false,"isFPFn":false,"args":null,"relatedDocs":{"default":"startOfYesterday","fp":"fp/startOfYesterday"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfYesterday = require('date-fns/startOfYesterday')"},"es2015":{"title":"ES 2015","code":"import startOfYesterday from 'date-fns/startOfYesterday'"},"esm":{"title":"ESM","code":"import { startOfYesterday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"]},{"type":"jsdoc","kind":"function","urlId":"subBusinessDays","category":"Day Helpers","title":"subBusinessDays","description":"Substract the specified number of business days (mon - fri) to the given date.","content":{"id":"subBusinessDays","longname":"subBusinessDays","name":"subBusinessDays","kind":"member","scope":"global","description":"Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Substract 10 business days from 1 September 2014:\nvar result = subBusinessDays(new Date(2014, 8, 1), 10)\n//=> Mon Aug 18 2014 00:00:00 (skipped weekend days)"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subBusinessDays"},"summary":"Substract the specified number of business days (mon - fri) to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the business days subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subBusinessDays","fp":"fp/subBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var subBusinessDays = require('date-fns/subBusinessDays')"},"es2015":{"title":"ES 2015","code":"import subBusinessDays from 'date-fns/subBusinessDays'"},"esm":{"title":"ESM","code":"import { subBusinessDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subBusinessDays(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subBusinessDays","category":"Day Helpers","title":"subBusinessDays","description":"Substract the specified number of business days (mon - fri) to the given date.","content":{"id":"subBusinessDays","longname":"subBusinessDays","name":"subBusinessDays","kind":"member","scope":"global","description":"Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.","params":[{"type":{"names":["Number"]},"description":"the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subBusinessDays"},"summary":"Substract the specified number of business days (mon - fri) to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the business days subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subBusinessDays","relatedDocs":{"default":"subBusinessDays","fp":"fp/subBusinessDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var subBusinessDays = require('date-fns/fp/subBusinessDays')"},"es2015":{"title":"ES 2015","code":"import subBusinessDays from 'date-fns/fp/subBusinessDays'"},"esm":{"title":"ESM","code":"import { subBusinessDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subBusinessDays(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"subDays","category":"Day Helpers","title":"subDays","description":"Subtract the specified number of days from the given date.","content":{"id":"subDays","longname":"subDays","name":"subDays","kind":"member","scope":"global","description":"Subtract the specified number of days from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 10 days from 1 September 2014:\nvar result = subDays(new Date(2014, 8, 1), 10)\n//=> Fri Aug 22 2014 00:00:00"],"category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subDays"},"summary":"Subtract the specified number of days from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the days subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subDays","fp":"fp/subDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var subDays = require('date-fns/subDays')"},"es2015":{"title":"ES 2015","code":"import subDays from 'date-fns/subDays'"},"esm":{"title":"ESM","code":"import { subDays } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subDays(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subDays","category":"Day Helpers","title":"subDays","description":"Subtract the specified number of days from the given date.","content":{"id":"subDays","longname":"subDays","name":"subDays","kind":"member","scope":"global","description":"Subtract the specified number of days from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Day Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subDays"},"summary":"Subtract the specified number of days from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the days subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subDays","relatedDocs":{"default":"subDays","fp":"fp/subDays"},"usage":{"commonjs":{"title":"CommonJS","code":"var subDays = require('date-fns/fp/subDays')"},"es2015":{"title":"ES 2015","code":"import subDays from 'date-fns/fp/subDays'"},"esm":{"title":"ESM","code":"import { subDays } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subDays(amount)(date)"}],"Weekday Helpers":[{"type":"jsdoc","kind":"function","urlId":"getDay","category":"Weekday Helpers","title":"getDay","description":"Get the day of the week of the given date.","content":{"id":"getDay","longname":"getDay","name":"getDay","kind":"member","scope":"global","description":"Get the day of the week of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which day of the week is 29 February 2012?\nvar result = getDay(new Date(2012, 1, 29))\n//=> 3"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDay"},"summary":"Get the day of the week of the given date.","returns":[{"type":{"names":["0","1","2","3","4","5","6"]},"description":"the day of week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDay","fp":"fp/getDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDay = require('date-fns/getDay')"},"es2015":{"title":"ES 2015","code":"import getDay from 'date-fns/getDay'"},"esm":{"title":"ESM","code":"import { getDay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDay(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDay","category":"Weekday Helpers","title":"getDay","description":"Get the day of the week of the given date.","content":{"id":"getDay","longname":"getDay","name":"getDay","kind":"member","scope":"global","description":"Get the day of the week of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDay"},"summary":"Get the day of the week of the given date.","returns":[{"type":{"names":["0","1","2","3","4","5","6"]},"description":"the day of week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDay","relatedDocs":{"default":"getDay","fp":"fp/getDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDay = require('date-fns/fp/getDay')"},"es2015":{"title":"ES 2015","code":"import getDay from 'date-fns/fp/getDay'"},"esm":{"title":"ESM","code":"import { getDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDay(date)"},{"type":"jsdoc","kind":"function","urlId":"getISODay","category":"Weekday Helpers","title":"getISODay","description":"Get the day of the ISO week of the given date.","content":{"id":"getISODay","longname":"getISODay","name":"getISODay","kind":"member","scope":"global","description":"Get the day of the ISO week of the given date,\nwhich is 7 for Sunday, 1 for Monday etc.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which day of the ISO week is 26 February 2012?\nvar result = getISODay(new Date(2012, 1, 26))\n//=> 7"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISODay"},"summary":"Get the day of the ISO week of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getISODay","fp":"fp/getISODay"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISODay = require('date-fns/getISODay')"},"es2015":{"title":"ES 2015","code":"import getISODay from 'date-fns/getISODay'"},"esm":{"title":"ESM","code":"import { getISODay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getISODay(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getISODay","category":"Weekday Helpers","title":"getISODay","description":"Get the day of the ISO week of the given date.","content":{"id":"getISODay","longname":"getISODay","name":"getISODay","kind":"member","scope":"global","description":"Get the day of the ISO week of the given date,\nwhich is 7 for Sunday, 1 for Monday etc.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISODay"},"summary":"Get the day of the ISO week of the given date.","returns":[{"type":{"names":["Number"]},"description":"the day of ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getISODay","relatedDocs":{"default":"getISODay","fp":"fp/getISODay"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISODay = require('date-fns/fp/getISODay')"},"es2015":{"title":"ES 2015","code":"import getISODay from 'date-fns/fp/getISODay'"},"esm":{"title":"ESM","code":"import { getISODay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getISODay(date)"},{"type":"jsdoc","kind":"function","urlId":"isFriday","category":"Weekday Helpers","title":"isFriday","description":"Is the given date Friday?","content":{"id":"isFriday","longname":"isFriday","name":"isFriday","kind":"member","scope":"global","description":"Is the given date Friday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 26 September 2014 Friday?\nvar result = isFriday(new Date(2014, 8, 26))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isFriday"},"summary":"Is the given date Friday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Friday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isFriday","fp":"fp/isFriday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFriday = require('date-fns/isFriday')"},"es2015":{"title":"ES 2015","code":"import isFriday from 'date-fns/isFriday'"},"esm":{"title":"ESM","code":"import { isFriday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isFriday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isFriday","category":"Weekday Helpers","title":"isFriday","description":"Is the given date Friday?","content":{"id":"isFriday","longname":"isFriday","name":"isFriday","kind":"member","scope":"global","description":"Is the given date Friday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isFriday"},"summary":"Is the given date Friday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Friday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isFriday","relatedDocs":{"default":"isFriday","fp":"fp/isFriday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFriday = require('date-fns/fp/isFriday')"},"es2015":{"title":"ES 2015","code":"import isFriday from 'date-fns/fp/isFriday'"},"esm":{"title":"ESM","code":"import { isFriday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isFriday(date)"},{"type":"jsdoc","kind":"function","urlId":"isMonday","category":"Weekday Helpers","title":"isMonday","description":"Is the given date Monday?","content":{"id":"isMonday","longname":"isMonday","name":"isMonday","kind":"member","scope":"global","description":"Is the given date Monday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 22 September 2014 Monday?\nvar result = isMonday(new Date(2014, 8, 22))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isMonday"},"summary":"Is the given date Monday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Monday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isMonday","fp":"fp/isMonday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isMonday = require('date-fns/isMonday')"},"es2015":{"title":"ES 2015","code":"import isMonday from 'date-fns/isMonday'"},"esm":{"title":"ESM","code":"import { isMonday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isMonday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isMonday","category":"Weekday Helpers","title":"isMonday","description":"Is the given date Monday?","content":{"id":"isMonday","longname":"isMonday","name":"isMonday","kind":"member","scope":"global","description":"Is the given date Monday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isMonday"},"summary":"Is the given date Monday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Monday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isMonday","relatedDocs":{"default":"isMonday","fp":"fp/isMonday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isMonday = require('date-fns/fp/isMonday')"},"es2015":{"title":"ES 2015","code":"import isMonday from 'date-fns/fp/isMonday'"},"esm":{"title":"ESM","code":"import { isMonday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isMonday(date)"},{"type":"jsdoc","kind":"function","urlId":"isSaturday","category":"Weekday Helpers","title":"isSaturday","description":"Is the given date Saturday?","content":{"id":"isSaturday","longname":"isSaturday","name":"isSaturday","kind":"member","scope":"global","description":"Is the given date Saturday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 27 September 2014 Saturday?\nvar result = isSaturday(new Date(2014, 8, 27))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSaturday"},"summary":"Is the given date Saturday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Saturday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isSaturday","fp":"fp/isSaturday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSaturday = require('date-fns/isSaturday')"},"es2015":{"title":"ES 2015","code":"import isSaturday from 'date-fns/isSaturday'"},"esm":{"title":"ESM","code":"import { isSaturday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSaturday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSaturday","category":"Weekday Helpers","title":"isSaturday","description":"Is the given date Saturday?","content":{"id":"isSaturday","longname":"isSaturday","name":"isSaturday","kind":"member","scope":"global","description":"Is the given date Saturday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSaturday"},"summary":"Is the given date Saturday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Saturday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isSaturday","relatedDocs":{"default":"isSaturday","fp":"fp/isSaturday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSaturday = require('date-fns/fp/isSaturday')"},"es2015":{"title":"ES 2015","code":"import isSaturday from 'date-fns/fp/isSaturday'"},"esm":{"title":"ESM","code":"import { isSaturday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSaturday(date)"},{"type":"jsdoc","kind":"function","urlId":"isSunday","category":"Weekday Helpers","title":"isSunday","description":"Is the given date Sunday?","content":{"id":"isSunday","longname":"isSunday","name":"isSunday","kind":"member","scope":"global","description":"Is the given date Sunday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 21 September 2014 Sunday?\nvar result = isSunday(new Date(2014, 8, 21))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSunday"},"summary":"Is the given date Sunday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Sunday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isSunday","fp":"fp/isSunday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSunday = require('date-fns/isSunday')"},"es2015":{"title":"ES 2015","code":"import isSunday from 'date-fns/isSunday'"},"esm":{"title":"ESM","code":"import { isSunday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSunday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSunday","category":"Weekday Helpers","title":"isSunday","description":"Is the given date Sunday?","content":{"id":"isSunday","longname":"isSunday","name":"isSunday","kind":"member","scope":"global","description":"Is the given date Sunday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSunday"},"summary":"Is the given date Sunday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Sunday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isSunday","relatedDocs":{"default":"isSunday","fp":"fp/isSunday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSunday = require('date-fns/fp/isSunday')"},"es2015":{"title":"ES 2015","code":"import isSunday from 'date-fns/fp/isSunday'"},"esm":{"title":"ESM","code":"import { isSunday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSunday(date)"},{"type":"jsdoc","kind":"function","urlId":"isThursday","category":"Weekday Helpers","title":"isThursday","description":"Is the given date Thursday?","content":{"id":"isThursday","longname":"isThursday","name":"isThursday","kind":"member","scope":"global","description":"Is the given date Thursday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 25 September 2014 Thursday?\nvar result = isThursday(new Date(2014, 8, 25))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThursday"},"summary":"Is the given date Thursday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Thursday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThursday","fp":"fp/isThursday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThursday = require('date-fns/isThursday')"},"es2015":{"title":"ES 2015","code":"import isThursday from 'date-fns/isThursday'"},"esm":{"title":"ESM","code":"import { isThursday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThursday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isThursday","category":"Weekday Helpers","title":"isThursday","description":"Is the given date Thursday?","content":{"id":"isThursday","longname":"isThursday","name":"isThursday","kind":"member","scope":"global","description":"Is the given date Thursday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThursday"},"summary":"Is the given date Thursday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Thursday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isThursday","relatedDocs":{"default":"isThursday","fp":"fp/isThursday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThursday = require('date-fns/fp/isThursday')"},"es2015":{"title":"ES 2015","code":"import isThursday from 'date-fns/fp/isThursday'"},"esm":{"title":"ESM","code":"import { isThursday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isThursday(date)"},{"type":"jsdoc","kind":"function","urlId":"isTuesday","category":"Weekday Helpers","title":"isTuesday","description":"Is the given date Tuesday?","content":{"id":"isTuesday","longname":"isTuesday","name":"isTuesday","kind":"member","scope":"global","description":"Is the given date Tuesday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 23 September 2014 Tuesday?\nvar result = isTuesday(new Date(2014, 8, 23))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isTuesday"},"summary":"Is the given date Tuesday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Tuesday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isTuesday","fp":"fp/isTuesday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isTuesday = require('date-fns/isTuesday')"},"es2015":{"title":"ES 2015","code":"import isTuesday from 'date-fns/isTuesday'"},"esm":{"title":"ESM","code":"import { isTuesday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isTuesday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isTuesday","category":"Weekday Helpers","title":"isTuesday","description":"Is the given date Tuesday?","content":{"id":"isTuesday","longname":"isTuesday","name":"isTuesday","kind":"member","scope":"global","description":"Is the given date Tuesday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isTuesday"},"summary":"Is the given date Tuesday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Tuesday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isTuesday","relatedDocs":{"default":"isTuesday","fp":"fp/isTuesday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isTuesday = require('date-fns/fp/isTuesday')"},"es2015":{"title":"ES 2015","code":"import isTuesday from 'date-fns/fp/isTuesday'"},"esm":{"title":"ESM","code":"import { isTuesday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isTuesday(date)"},{"type":"jsdoc","kind":"function","urlId":"isWednesday","category":"Weekday Helpers","title":"isWednesday","description":"Is the given date Wednesday?","content":{"id":"isWednesday","longname":"isWednesday","name":"isWednesday","kind":"member","scope":"global","description":"Is the given date Wednesday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 24 September 2014 Wednesday?\nvar result = isWednesday(new Date(2014, 8, 24))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWednesday"},"summary":"Is the given date Wednesday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Wednesday"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isWednesday","fp":"fp/isWednesday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWednesday = require('date-fns/isWednesday')"},"es2015":{"title":"ES 2015","code":"import isWednesday from 'date-fns/isWednesday'"},"esm":{"title":"ESM","code":"import { isWednesday } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isWednesday(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isWednesday","category":"Weekday Helpers","title":"isWednesday","description":"Is the given date Wednesday?","content":{"id":"isWednesday","longname":"isWednesday","name":"isWednesday","kind":"member","scope":"global","description":"Is the given date Wednesday?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWednesday"},"summary":"Is the given date Wednesday?","returns":[{"type":{"names":["Boolean"]},"description":"the date is Wednesday"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isWednesday","relatedDocs":{"default":"isWednesday","fp":"fp/isWednesday"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWednesday = require('date-fns/fp/isWednesday')"},"es2015":{"title":"ES 2015","code":"import isWednesday from 'date-fns/fp/isWednesday'"},"esm":{"title":"ESM","code":"import { isWednesday } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isWednesday(date)"},{"type":"jsdoc","kind":"function","urlId":"isWeekend","category":"Weekday Helpers","title":"isWeekend","description":"Does the given date fall on a weekend?","content":{"id":"isWeekend","longname":"isWeekend","name":"isWeekend","kind":"member","scope":"global","description":"Does the given date fall on a weekend?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Does 5 October 2014 fall on a weekend?\nvar result = isWeekend(new Date(2014, 9, 5))\n//=> true"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWeekend"},"summary":"Does the given date fall on a weekend?","returns":[{"type":{"names":["Boolean"]},"description":"the date falls on a weekend"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isWeekend","fp":"fp/isWeekend"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWeekend = require('date-fns/isWeekend')"},"es2015":{"title":"ES 2015","code":"import isWeekend from 'date-fns/isWeekend'"},"esm":{"title":"ESM","code":"import { isWeekend } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isWeekend(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isWeekend","category":"Weekday Helpers","title":"isWeekend","description":"Does the given date fall on a weekend?","content":{"id":"isWeekend","longname":"isWeekend","name":"isWeekend","kind":"member","scope":"global","description":"Does the given date fall on a weekend?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isWeekend"},"summary":"Does the given date fall on a weekend?","returns":[{"type":{"names":["Boolean"]},"description":"the date falls on a weekend"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isWeekend","relatedDocs":{"default":"isWeekend","fp":"fp/isWeekend"},"usage":{"commonjs":{"title":"CommonJS","code":"var isWeekend = require('date-fns/fp/isWeekend')"},"es2015":{"title":"ES 2015","code":"import isWeekend from 'date-fns/fp/isWeekend'"},"esm":{"title":"ESM","code":"import { isWeekend } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isWeekend(date)"},{"type":"jsdoc","kind":"function","urlId":"setDay","category":"Weekday Helpers","title":"setDay","description":"Set the day of the week to the given date.","content":{"id":"setDay","longname":"setDay","name":"setDay","kind":"member","scope":"global","description":"Set the day of the week to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// Set week day to Sunday, with the default weekStartsOn of Sunday:\nvar result = setDay(new Date(2014, 8, 1), 0)\n//=> Sun Aug 31 2014 00:00:00","// Set week day to Sunday, with a weekStartsOn of Monday:\nvar result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n//=> Sun Sep 07 2014 00:00:00"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDay"},"summary":"Set the day of the week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the week set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"setDay","fp":"fp/setDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDay = require('date-fns/setDay')"},"es2015":{"title":"ES 2015","code":"import setDay from 'date-fns/setDay'"},"esm":{"title":"ESM","code":"import { setDay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setDay(date, day, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/setDay","category":"Weekday Helpers","title":"setDay","description":"Set the day of the week to the given date.","content":{"id":"setDay","longname":"setDay","name":"setDay","kind":"member","scope":"global","description":"Set the day of the week to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDay"},"summary":"Set the day of the week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setDay","relatedDocs":{"default":"setDay","fp":"fp/setDay"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDay = require('date-fns/fp/setDay')"},"es2015":{"title":"ES 2015","code":"import setDay from 'date-fns/fp/setDay'"},"esm":{"title":"ESM","code":"import { setDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setDay(day)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/setDayWithOptions","category":"Weekday Helpers","title":"setDayWithOptions","description":"Set the day of the week to the given date.","content":{"id":"setDayWithOptions","longname":"setDayWithOptions","name":"setDayWithOptions","kind":"member","scope":"global","description":"Set the day of the week to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setDay"},"summary":"Set the day of the week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Number"]},"description":"the day of the week of the new date","name":"day","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"generatedFrom":"setDay","relatedDocs":{"default":"setDay","fp":"fp/setDay","fpWithOptions":"fp/setDayWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var setDay = require('date-fns/fp/setDay')"},"es2015":{"title":"ES 2015","code":"import setDay from 'date-fns/fp/setDay'"},"esm":{"title":"ESM","code":"import { setDay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setDay(options)(day)(date)"},{"type":"jsdoc","kind":"function","urlId":"setISODay","category":"Weekday Helpers","title":"setISODay","description":"Set the day of the ISO week to the given date.","content":{"id":"setISODay","longname":"setISODay","name":"setISODay","kind":"member","scope":"global","description":"Set the day of the ISO week to the given date.\nISO week starts with Monday.\n7 is the index of Sunday, 1 is the index of Monday etc.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the ISO week of the new date","name":"day"}],"examples":["// Set Sunday to 1 September 2014:\nvar result = setISODay(new Date(2014, 8, 1), 7)\n//=> Sun Sep 07 2014 00:00:00"],"category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISODay"},"summary":"Set the day of the ISO week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the ISO week set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the day of the ISO week of the new date","name":"day"}],"relatedDocs":{"default":"setISODay","fp":"fp/setISODay"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISODay = require('date-fns/setISODay')"},"es2015":{"title":"ES 2015","code":"import setISODay from 'date-fns/setISODay'"},"esm":{"title":"ESM","code":"import { setISODay } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setISODay(date, day)"},{"type":"jsdoc","kind":"function","urlId":"fp/setISODay","category":"Weekday Helpers","title":"setISODay","description":"Set the day of the ISO week to the given date.","content":{"id":"setISODay","longname":"setISODay","name":"setISODay","kind":"member","scope":"global","description":"Set the day of the ISO week to the given date.\nISO week starts with Monday.\n7 is the index of Sunday, 1 is the index of Monday etc.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the day of the ISO week of the new date","name":"day"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Weekday Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISODay"},"summary":"Set the day of the ISO week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the day of the ISO week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the day of the ISO week of the new date","name":"day"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setISODay","relatedDocs":{"default":"setISODay","fp":"fp/setISODay"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISODay = require('date-fns/fp/setISODay')"},"es2015":{"title":"ES 2015","code":"import setISODay from 'date-fns/fp/setISODay'"},"esm":{"title":"ESM","code":"import { setISODay } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setISODay(day)(date)"}],"Week Helpers":[{"type":"jsdoc","kind":"function","urlId":"addWeeks","category":"Week Helpers","title":"addWeeks","description":"Add the specified number of weeks to the given date.","content":{"id":"addWeeks","longname":"addWeeks","name":"addWeeks","kind":"member","scope":"global","description":"Add the specified number of week to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 4 weeks to 1 September 2014:\nvar result = addWeeks(new Date(2014, 8, 1), 4)\n//=> Mon Sep 29 2014 00:00:00"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addWeeks"},"summary":"Add the specified number of weeks to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the weeks added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addWeeks","fp":"fp/addWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var addWeeks = require('date-fns/addWeeks')"},"es2015":{"title":"ES 2015","code":"import addWeeks from 'date-fns/addWeeks'"},"esm":{"title":"ESM","code":"import { addWeeks } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addWeeks(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addWeeks","category":"Week Helpers","title":"addWeeks","description":"Add the specified number of weeks to the given date.","content":{"id":"addWeeks","longname":"addWeeks","name":"addWeeks","kind":"member","scope":"global","description":"Add the specified number of week to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addWeeks"},"summary":"Add the specified number of weeks to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the weeks added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addWeeks","relatedDocs":{"default":"addWeeks","fp":"fp/addWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var addWeeks = require('date-fns/fp/addWeeks')"},"es2015":{"title":"ES 2015","code":"import addWeeks from 'date-fns/fp/addWeeks'"},"esm":{"title":"ESM","code":"import { addWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addWeeks(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarWeeks","category":"Week Helpers","title":"differenceInCalendarWeeks","description":"Get the number of calendar weeks between the given dates.","content":{"id":"differenceInCalendarWeeks","longname":"differenceInCalendarWeeks","name":"differenceInCalendarWeeks","kind":"member","scope":"global","description":"Get the number of calendar weeks between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// How many calendar weeks are between 5 July 2014 and 20 July 2014?\nvar result = differenceInCalendarWeeks(\n  new Date(2014, 6, 20),\n  new Date(2014, 6, 5)\n)\n//=> 3","// If the week starts on Monday,\n// how many calendar weeks are between 5 July 2014 and 20 July 2014?\nvar result = differenceInCalendarWeeks(\n  new Date(2014, 6, 20),\n  new Date(2014, 6, 5),\n  { weekStartsOn: 1 }\n)\n//=> 2"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarWeeks"},"summary":"Get the number of calendar weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"differenceInCalendarWeeks","fp":"fp/differenceInCalendarWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarWeeks = require('date-fns/differenceInCalendarWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarWeeks from 'date-fns/differenceInCalendarWeeks'"},"esm":{"title":"ESM","code":"import { differenceInCalendarWeeks } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarWeeks(dateLeft, dateRight, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarWeeks","category":"Week Helpers","title":"differenceInCalendarWeeks","description":"Get the number of calendar weeks between the given dates.","content":{"id":"differenceInCalendarWeeks","longname":"differenceInCalendarWeeks","name":"differenceInCalendarWeeks","kind":"member","scope":"global","description":"Get the number of calendar weeks between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarWeeks"},"summary":"Get the number of calendar weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarWeeks","relatedDocs":{"default":"differenceInCalendarWeeks","fp":"fp/differenceInCalendarWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarWeeks = require('date-fns/fp/differenceInCalendarWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarWeeks from 'date-fns/fp/differenceInCalendarWeeks'"},"esm":{"title":"ESM","code":"import { differenceInCalendarWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarWeeks(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarWeeksWithOptions","category":"Week Helpers","title":"differenceInCalendarWeeksWithOptions","description":"Get the number of calendar weeks between the given dates.","content":{"id":"differenceInCalendarWeeksWithOptions","longname":"differenceInCalendarWeeksWithOptions","name":"differenceInCalendarWeeksWithOptions","kind":"member","scope":"global","description":"Get the number of calendar weeks between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight","optional":false},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarWeeks"},"summary":"Get the number of calendar weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight","optional":false},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft","optional":false}],"generatedFrom":"differenceInCalendarWeeks","relatedDocs":{"default":"differenceInCalendarWeeks","fp":"fp/differenceInCalendarWeeks","fpWithOptions":"fp/differenceInCalendarWeeksWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarWeeks = require('date-fns/fp/differenceInCalendarWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarWeeks from 'date-fns/fp/differenceInCalendarWeeks'"},"esm":{"title":"ESM","code":"import { differenceInCalendarWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarWeeks(options)(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInWeeks","category":"Week Helpers","title":"differenceInWeeks","description":"Get the number of full weeks between the given dates.","content":{"id":"differenceInWeeks","longname":"differenceInWeeks","name":"differenceInWeeks","kind":"member","scope":"global","description":"Get the number of full weeks between two dates. Fractional weeks are\ntruncated towards zero.\n\nOne \"full week\" is the distance between a local time in one day to the same\nlocal time 7 days earlier or later. A full week can sometimes be less than\nor more than 7*24 hours if a daylight savings change happens between two dates.\n\nTo ignore DST and only measure exact 7*24-hour periods, use this instead:\n`Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full weeks are between 5 July 2014 and 20 July 2014?\nvar result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n//=> 2\n\n// How many full weeks are between\n// 1 March 2020 0:00 and 6 June 2020 0:00 ?\n// Note: because local time is used, the\n// result will always be 8 weeks (54 days),\n// even if DST starts and the period has\n// only 54*24-1 hours.\nvar result = differenceInWeeks(\n  new Date(2020, 5, 1),\n  new Date(2020, 2, 6)\n)\n//=> 8"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInWeeks"},"summary":"Get the number of full weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full weeks"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInWeeks","fp":"fp/differenceInWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInWeeks = require('date-fns/differenceInWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInWeeks from 'date-fns/differenceInWeeks'"},"esm":{"title":"ESM","code":"import { differenceInWeeks } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInWeeks(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInWeeks","category":"Week Helpers","title":"differenceInWeeks","description":"Get the number of full weeks between the given dates.","content":{"id":"differenceInWeeks","longname":"differenceInWeeks","name":"differenceInWeeks","kind":"member","scope":"global","description":"Get the number of full weeks between two dates. Fractional weeks are\ntruncated towards zero.\n\nOne \"full week\" is the distance between a local time in one day to the same\nlocal time 7 days earlier or later. A full week can sometimes be less than\nor more than 7*24 hours if a daylight savings change happens between two dates.\n\nTo ignore DST and only measure exact 7*24-hour periods, use this instead:\n`Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInWeeks"},"summary":"Get the number of full weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInWeeks","relatedDocs":{"default":"differenceInWeeks","fp":"fp/differenceInWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInWeeks = require('date-fns/fp/differenceInWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInWeeks from 'date-fns/fp/differenceInWeeks'"},"esm":{"title":"ESM","code":"import { differenceInWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInWeeks(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfWeek","category":"Week Helpers","title":"endOfWeek","description":"Return the end of a week for the given date.","content":{"id":"endOfWeek","longname":"endOfWeek","name":"endOfWeek","kind":"member","scope":"global","description":"Return the end of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// The end of a week for 2 September 2014 11:55:00:\nvar result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Sat Sep 06 2014 23:59:59.999","// If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\nvar result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n//=> Sun Sep 07 2014 23:59:59.999"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfWeek"},"summary":"Return the end of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"endOfWeek","fp":"fp/endOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfWeek = require('date-fns/endOfWeek')"},"es2015":{"title":"ES 2015","code":"import endOfWeek from 'date-fns/endOfWeek'"},"esm":{"title":"ESM","code":"import { endOfWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfWeek(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfWeek","category":"Week Helpers","title":"endOfWeek","description":"Return the end of a week for the given date.","content":{"id":"endOfWeek","longname":"endOfWeek","name":"endOfWeek","kind":"member","scope":"global","description":"Return the end of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfWeek"},"summary":"Return the end of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfWeek","relatedDocs":{"default":"endOfWeek","fp":"fp/endOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfWeek = require('date-fns/fp/endOfWeek')"},"es2015":{"title":"ES 2015","code":"import endOfWeek from 'date-fns/fp/endOfWeek'"},"esm":{"title":"ESM","code":"import { endOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfWeekWithOptions","category":"Week Helpers","title":"endOfWeekWithOptions","description":"Return the end of a week for the given date.","content":{"id":"endOfWeekWithOptions","longname":"endOfWeekWithOptions","name":"endOfWeekWithOptions","kind":"member","scope":"global","description":"Return the end of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfWeek"},"summary":"Return the end of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"endOfWeek","relatedDocs":{"default":"endOfWeek","fp":"fp/endOfWeek","fpWithOptions":"fp/endOfWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfWeek = require('date-fns/fp/endOfWeek')"},"es2015":{"title":"ES 2015","code":"import endOfWeek from 'date-fns/fp/endOfWeek'"},"esm":{"title":"ESM","code":"import { endOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfWeek(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"getWeek","category":"Week Helpers","title":"getWeek","description":"Get the local week index of the given date.","content":{"id":"getWeek","longname":"getWeek","name":"getWeek","kind":"member","scope":"global","description":"Get the local week index of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"}],"examples":["// Which week of the local week numbering year is 2 January 2005 with default options?\nvar result = getISOWeek(new Date(2005, 0, 2))\n//=> 2\n\n// Which week of the local week numbering year is 2 January 2005,\n// if Monday is the first day of the week,\n// and the first week of the year always contains 4 January?\nvar result = getISOWeek(new Date(2005, 0, 2), {\n  weekStartsOn: 1,\n  firstWeekContainsDate: 4\n})\n//=> 53"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":8,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeek"},"summary":"Get the local week index of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true}]}],"relatedDocs":{"default":"getWeek","fp":"fp/getWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeek = require('date-fns/getWeek')"},"es2015":{"title":"ES 2015","code":"import getWeek from 'date-fns/getWeek'"},"esm":{"title":"ESM","code":"import { getWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getWeek(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeek","category":"Week Helpers","title":"getWeek","description":"Get the local week index of the given date.","content":{"id":"getWeek","longname":"getWeek","name":"getWeek","kind":"member","scope":"global","description":"Get the local week index of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":8,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeek"},"summary":"Get the local week index of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getWeek","relatedDocs":{"default":"getWeek","fp":"fp/getWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeek = require('date-fns/fp/getWeek')"},"es2015":{"title":"ES 2015","code":"import getWeek from 'date-fns/fp/getWeek'"},"esm":{"title":"ESM","code":"import { getWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeekWithOptions","category":"Week Helpers","title":"getWeekWithOptions","description":"Get the local week index of the given date.","content":{"id":"getWeekWithOptions","longname":"getWeekWithOptions","name":"getWeekWithOptions","kind":"member","scope":"global","description":"Get the local week index of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":8,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeek"},"summary":"Get the local week index of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"generatedFrom":"getWeek","relatedDocs":{"default":"getWeek","fp":"fp/getWeek","fpWithOptions":"fp/getWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeek = require('date-fns/fp/getWeek')"},"es2015":{"title":"ES 2015","code":"import getWeek from 'date-fns/fp/getWeek'"},"esm":{"title":"ESM","code":"import { getWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeek(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"getWeekOfMonth","category":"Week Helpers","title":"getWeekOfMonth","description":"Get the week of the month of the given date.","content":{"id":"getWeekOfMonth","longname":"getWeekOfMonth","name":"getWeekOfMonth","kind":"member","scope":"global","description":"Get the week of the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// Which week of the month is 9 November 2017?\nvar result = getWeekOfMonth(new Date(2017, 10, 9))\n//=> 2"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekOfMonth"},"summary":"Get the week of the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week of month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"getWeekOfMonth","fp":"fp/getWeekOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekOfMonth = require('date-fns/getWeekOfMonth')"},"es2015":{"title":"ES 2015","code":"import getWeekOfMonth from 'date-fns/getWeekOfMonth'"},"esm":{"title":"ESM","code":"import { getWeekOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getWeekOfMonth(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeekOfMonth","category":"Week Helpers","title":"getWeekOfMonth","description":"Get the week of the month of the given date.","content":{"id":"getWeekOfMonth","longname":"getWeekOfMonth","name":"getWeekOfMonth","kind":"member","scope":"global","description":"Get the week of the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekOfMonth"},"summary":"Get the week of the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week of month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getWeekOfMonth","relatedDocs":{"default":"getWeekOfMonth","fp":"fp/getWeekOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekOfMonth = require('date-fns/fp/getWeekOfMonth')"},"es2015":{"title":"ES 2015","code":"import getWeekOfMonth from 'date-fns/fp/getWeekOfMonth'"},"esm":{"title":"ESM","code":"import { getWeekOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeekOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeekOfMonthWithOptions","category":"Week Helpers","title":"getWeekOfMonthWithOptions","description":"Get the week of the month of the given date.","content":{"id":"getWeekOfMonthWithOptions","longname":"getWeekOfMonthWithOptions","name":"getWeekOfMonthWithOptions","kind":"member","scope":"global","description":"Get the week of the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekOfMonth"},"summary":"Get the week of the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the week of month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"generatedFrom":"getWeekOfMonth","relatedDocs":{"default":"getWeekOfMonth","fp":"fp/getWeekOfMonth","fpWithOptions":"fp/getWeekOfMonthWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekOfMonth = require('date-fns/fp/getWeekOfMonth')"},"es2015":{"title":"ES 2015","code":"import getWeekOfMonth from 'date-fns/fp/getWeekOfMonth'"},"esm":{"title":"ESM","code":"import { getWeekOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeekOfMonth(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"getWeeksInMonth","category":"Week Helpers","title":"getWeeksInMonth","description":"Get the number of calendar weeks a month spans.","content":{"id":"getWeeksInMonth","longname":"getWeeksInMonth","name":"getWeeksInMonth","kind":"member","scope":"global","description":"Get the number of calendar weeks the month in the given date spans.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// How many calendar weeks does February 2015 span?\nvar result = getWeeksInMonth(new Date(2015, 1, 8))\n//=> 4","// If the week starts on Monday,\n// how many calendar weeks does July 2017 span?\nvar result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n//=> 6"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeeksInMonth"},"summary":"Get the number of calendar weeks a month spans.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"getWeeksInMonth","fp":"fp/getWeeksInMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeeksInMonth = require('date-fns/getWeeksInMonth')"},"es2015":{"title":"ES 2015","code":"import getWeeksInMonth from 'date-fns/getWeeksInMonth'"},"esm":{"title":"ESM","code":"import { getWeeksInMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getWeeksInMonth(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeeksInMonth","category":"Week Helpers","title":"getWeeksInMonth","description":"Get the number of calendar weeks a month spans.","content":{"id":"getWeeksInMonth","longname":"getWeeksInMonth","name":"getWeeksInMonth","kind":"member","scope":"global","description":"Get the number of calendar weeks the month in the given date spans.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeeksInMonth"},"summary":"Get the number of calendar weeks a month spans.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getWeeksInMonth","relatedDocs":{"default":"getWeeksInMonth","fp":"fp/getWeeksInMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeeksInMonth = require('date-fns/fp/getWeeksInMonth')"},"es2015":{"title":"ES 2015","code":"import getWeeksInMonth from 'date-fns/fp/getWeeksInMonth'"},"esm":{"title":"ESM","code":"import { getWeeksInMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeeksInMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeeksInMonthWithOptions","category":"Week Helpers","title":"getWeeksInMonthWithOptions","description":"Get the number of calendar weeks a month spans.","content":{"id":"getWeeksInMonthWithOptions","longname":"getWeeksInMonthWithOptions","name":"getWeeksInMonthWithOptions","kind":"member","scope":"global","description":"Get the number of calendar weeks the month in the given date spans.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeeksInMonth"},"summary":"Get the number of calendar weeks a month spans.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"generatedFrom":"getWeeksInMonth","relatedDocs":{"default":"getWeeksInMonth","fp":"fp/getWeeksInMonth","fpWithOptions":"fp/getWeeksInMonthWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeeksInMonth = require('date-fns/fp/getWeeksInMonth')"},"es2015":{"title":"ES 2015","code":"import getWeeksInMonth from 'date-fns/fp/getWeeksInMonth'"},"esm":{"title":"ESM","code":"import { getWeeksInMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeeksInMonth(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameWeek","category":"Week Helpers","title":"isSameWeek","description":"Are the given dates in the same week?","content":{"id":"isSameWeek","longname":"isSameWeek","name":"isSameWeek","kind":"member","scope":"global","description":"Are the given dates in the same week?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// Are 31 August 2014 and 4 September 2014 in the same week?\nvar result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n//=> true","// If week starts with Monday,\n// are 31 August 2014 and 4 September 2014 in the same week?\nvar result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n  weekStartsOn: 1\n})\n//=> false"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameWeek"},"summary":"Are the given dates in the same week?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"isSameWeek","fp":"fp/isSameWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameWeek = require('date-fns/isSameWeek')"},"es2015":{"title":"ES 2015","code":"import isSameWeek from 'date-fns/isSameWeek'"},"esm":{"title":"ESM","code":"import { isSameWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameWeek(dateLeft, dateRight, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameWeek","category":"Week Helpers","title":"isSameWeek","description":"Are the given dates in the same week?","content":{"id":"isSameWeek","longname":"isSameWeek","name":"isSameWeek","kind":"member","scope":"global","description":"Are the given dates in the same week?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameWeek"},"summary":"Are the given dates in the same week?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameWeek","relatedDocs":{"default":"isSameWeek","fp":"fp/isSameWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameWeek = require('date-fns/fp/isSameWeek')"},"es2015":{"title":"ES 2015","code":"import isSameWeek from 'date-fns/fp/isSameWeek'"},"esm":{"title":"ESM","code":"import { isSameWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameWeek(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameWeekWithOptions","category":"Week Helpers","title":"isSameWeekWithOptions","description":"Are the given dates in the same week?","content":{"id":"isSameWeekWithOptions","longname":"isSameWeekWithOptions","name":"isSameWeekWithOptions","kind":"member","scope":"global","description":"Are the given dates in the same week?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight","optional":false},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameWeek"},"summary":"Are the given dates in the same week?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight","optional":false},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft","optional":false}],"generatedFrom":"isSameWeek","relatedDocs":{"default":"isSameWeek","fp":"fp/isSameWeek","fpWithOptions":"fp/isSameWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameWeek = require('date-fns/fp/isSameWeek')"},"es2015":{"title":"ES 2015","code":"import isSameWeek from 'date-fns/fp/isSameWeek'"},"esm":{"title":"ESM","code":"import { isSameWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameWeek(options)(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisWeek","category":"Week Helpers","title":"isThisWeek","description":"Is the given date in the same week as the current date?","content":{"id":"isThisWeek","longname":"isThisWeek","name":"isThisWeek","kind":"member","scope":"global","description":"Is the given date in the same week as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// If today is 25 September 2014, is 21 September 2014 in this week?\nvar result = isThisWeek(new Date(2014, 8, 21))\n//=> true","// If today is 25 September 2014 and week starts with Monday\n// is 21 September 2014 in this week?\nvar result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n//=> false"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisWeek"},"summary":"Is the given date in the same week as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this week"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"the object with options","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"isThisWeek","fp":"fp/isThisWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisWeek = require('date-fns/isThisWeek')"},"es2015":{"title":"ES 2015","code":"import isThisWeek from 'date-fns/isThisWeek'"},"esm":{"title":"ESM","code":"import { isThisWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisWeek(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfWeek","category":"Week Helpers","title":"lastDayOfWeek","description":"Return the last day of a week for the given date.","content":{"id":"lastDayOfWeek","longname":"lastDayOfWeek","name":"lastDayOfWeek","kind":"member","scope":"global","description":"Return the last day of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// The last day of a week for 2 September 2014 11:55:00:\nvar result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Sat Sep 06 2014 00:00:00","// If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\nvar result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n//=> Sun Sep 07 2014 00:00:00"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfWeek"},"summary":"Return the last day of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"lastDayOfWeek","fp":"fp/lastDayOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfWeek = require('date-fns/lastDayOfWeek')"},"es2015":{"title":"ES 2015","code":"import lastDayOfWeek from 'date-fns/lastDayOfWeek'"},"esm":{"title":"ESM","code":"import { lastDayOfWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfWeek(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfWeek","category":"Week Helpers","title":"lastDayOfWeek","description":"Return the last day of a week for the given date.","content":{"id":"lastDayOfWeek","longname":"lastDayOfWeek","name":"lastDayOfWeek","kind":"member","scope":"global","description":"Return the last day of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfWeek"},"summary":"Return the last day of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfWeek","relatedDocs":{"default":"lastDayOfWeek","fp":"fp/lastDayOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfWeek = require('date-fns/fp/lastDayOfWeek')"},"es2015":{"title":"ES 2015","code":"import lastDayOfWeek from 'date-fns/fp/lastDayOfWeek'"},"esm":{"title":"ESM","code":"import { lastDayOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfWeekWithOptions","category":"Week Helpers","title":"lastDayOfWeekWithOptions","description":"Return the last day of a week for the given date.","content":{"id":"lastDayOfWeekWithOptions","longname":"lastDayOfWeekWithOptions","name":"lastDayOfWeekWithOptions","kind":"member","scope":"global","description":"Return the last day of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfWeek"},"summary":"Return the last day of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"lastDayOfWeek","relatedDocs":{"default":"lastDayOfWeek","fp":"fp/lastDayOfWeek","fpWithOptions":"fp/lastDayOfWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfWeek = require('date-fns/fp/lastDayOfWeek')"},"es2015":{"title":"ES 2015","code":"import lastDayOfWeek from 'date-fns/fp/lastDayOfWeek'"},"esm":{"title":"ESM","code":"import { lastDayOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfWeek(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"setWeek","category":"Week Helpers","title":"setWeek","description":"Set the local week to the given date.","content":{"id":"setWeek","longname":"setWeek","name":"setWeek","kind":"member","scope":"global","description":"Set the local week to the given date, saving the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the week of the new date","name":"week"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"}],"examples":["// Set the 1st week to 2 January 2005 with default options:\nvar result = setWeek(new Date(2005, 0, 2), 1)\n//=> Sun Dec 26 2004 00:00:00","// Set the 1st week to 2 January 2005,\n// if Monday is the first day of the week,\n// and the first week of the year always contains 4 January:\nvar result = setWeek(new Date(2005, 0, 2), 1, {\n  weekStartsOn: 1,\n  firstWeekContainsDate: 4\n})\n//=> Sun Jan 4 2004 00:00:00"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeek"},"summary":"Set the local week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the week of the new date","name":"week"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true}]}],"relatedDocs":{"default":"setWeek","fp":"fp/setWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeek = require('date-fns/setWeek')"},"es2015":{"title":"ES 2015","code":"import setWeek from 'date-fns/setWeek'"},"esm":{"title":"ESM","code":"import { setWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setWeek(date, week, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/setWeek","category":"Week Helpers","title":"setWeek","description":"Set the local week to the given date.","content":{"id":"setWeek","longname":"setWeek","name":"setWeek","kind":"member","scope":"global","description":"Set the local week to the given date, saving the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the week of the new date","name":"week"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeek"},"summary":"Set the local week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the week of the new date","name":"week"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setWeek","relatedDocs":{"default":"setWeek","fp":"fp/setWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeek = require('date-fns/fp/setWeek')"},"es2015":{"title":"ES 2015","code":"import setWeek from 'date-fns/fp/setWeek'"},"esm":{"title":"ESM","code":"import { setWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setWeek(week)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/setWeekWithOptions","category":"Week Helpers","title":"setWeekWithOptions","description":"Set the local week to the given date.","content":{"id":"setWeekWithOptions","longname":"setWeekWithOptions","name":"setWeekWithOptions","kind":"member","scope":"global","description":"Set the local week to the given date, saving the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"description":"the week of the new date","name":"week","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeek"},"summary":"Set the local week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Number"]},"description":"the week of the new date","name":"week","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"generatedFrom":"setWeek","relatedDocs":{"default":"setWeek","fp":"fp/setWeek","fpWithOptions":"fp/setWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeek = require('date-fns/fp/setWeek')"},"es2015":{"title":"ES 2015","code":"import setWeek from 'date-fns/fp/setWeek'"},"esm":{"title":"ESM","code":"import { setWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setWeek(options)(week)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfWeek","category":"Week Helpers","title":"startOfWeek","description":"Return the start of a week for the given date.","content":{"id":"startOfWeek","longname":"startOfWeek","name":"startOfWeek","kind":"member","scope":"global","description":"Return the start of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"}],"examples":["// The start of a week for 2 September 2014 11:55:00:\nvar result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Sun Aug 31 2014 00:00:00","// If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\nvar result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n//=> Mon Sep 01 2014 00:00:00"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeek"},"summary":"Return the start of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true}]}],"relatedDocs":{"default":"startOfWeek","fp":"fp/startOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeek = require('date-fns/startOfWeek')"},"es2015":{"title":"ES 2015","code":"import startOfWeek from 'date-fns/startOfWeek'"},"esm":{"title":"ESM","code":"import { startOfWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfWeek(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfWeek","category":"Week Helpers","title":"startOfWeek","description":"Return the start of a week for the given date.","content":{"id":"startOfWeek","longname":"startOfWeek","name":"startOfWeek","kind":"member","scope":"global","description":"Return the start of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeek"},"summary":"Return the start of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfWeek","relatedDocs":{"default":"startOfWeek","fp":"fp/startOfWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeek = require('date-fns/fp/startOfWeek')"},"es2015":{"title":"ES 2015","code":"import startOfWeek from 'date-fns/fp/startOfWeek'"},"esm":{"title":"ESM","code":"import { startOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfWeekWithOptions","category":"Week Helpers","title":"startOfWeekWithOptions","description":"Return the start of a week for the given date.","content":{"id":"startOfWeekWithOptions","longname":"startOfWeekWithOptions","name":"startOfWeekWithOptions","kind":"member","scope":"global","description":"Return the start of a week for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeek"},"summary":"Return the start of a week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"startOfWeek","relatedDocs":{"default":"startOfWeek","fp":"fp/startOfWeek","fpWithOptions":"fp/startOfWeekWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeek = require('date-fns/fp/startOfWeek')"},"es2015":{"title":"ES 2015","code":"import startOfWeek from 'date-fns/fp/startOfWeek'"},"esm":{"title":"ESM","code":"import { startOfWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfWeek(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"subWeeks","category":"Week Helpers","title":"subWeeks","description":"Subtract the specified number of weeks from the given date.","content":{"id":"subWeeks","longname":"subWeeks","name":"subWeeks","kind":"member","scope":"global","description":"Subtract the specified number of weeks from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 4 weeks from 1 September 2014:\nvar result = subWeeks(new Date(2014, 8, 1), 4)\n//=> Mon Aug 04 2014 00:00:00"],"category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subWeeks"},"summary":"Subtract the specified number of weeks from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the weeks subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subWeeks","fp":"fp/subWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var subWeeks = require('date-fns/subWeeks')"},"es2015":{"title":"ES 2015","code":"import subWeeks from 'date-fns/subWeeks'"},"esm":{"title":"ESM","code":"import { subWeeks } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subWeeks(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subWeeks","category":"Week Helpers","title":"subWeeks","description":"Subtract the specified number of weeks from the given date.","content":{"id":"subWeeks","longname":"subWeeks","name":"subWeeks","kind":"member","scope":"global","description":"Subtract the specified number of weeks from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subWeeks"},"summary":"Subtract the specified number of weeks from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the weeks subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subWeeks","relatedDocs":{"default":"subWeeks","fp":"fp/subWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var subWeeks = require('date-fns/fp/subWeeks')"},"es2015":{"title":"ES 2015","code":"import subWeeks from 'date-fns/fp/subWeeks'"},"esm":{"title":"ESM","code":"import { subWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subWeeks(amount)(date)"}],"ISO Week Helpers":[{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarISOWeeks","category":"ISO Week Helpers","title":"differenceInCalendarISOWeeks","description":"Get the number of calendar ISO weeks between the given dates.","content":{"id":"differenceInCalendarISOWeeks","longname":"differenceInCalendarISOWeeks","name":"differenceInCalendarISOWeeks","kind":"member","scope":"global","description":"Get the number of calendar ISO weeks between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\nvar result = differenceInCalendarISOWeeks(\n  new Date(2014, 6, 21),\n  new Date(2014, 6, 6)\n)\n//=> 3"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarISOWeeks"},"summary":"Get the number of calendar ISO weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar ISO weeks"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarISOWeeks","fp":"fp/differenceInCalendarISOWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarISOWeeks = require('date-fns/differenceInCalendarISOWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarISOWeeks from 'date-fns/differenceInCalendarISOWeeks'"},"esm":{"title":"ESM","code":"import { differenceInCalendarISOWeeks } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarISOWeeks(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarISOWeeks","category":"ISO Week Helpers","title":"differenceInCalendarISOWeeks","description":"Get the number of calendar ISO weeks between the given dates.","content":{"id":"differenceInCalendarISOWeeks","longname":"differenceInCalendarISOWeeks","name":"differenceInCalendarISOWeeks","kind":"member","scope":"global","description":"Get the number of calendar ISO weeks between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarISOWeeks"},"summary":"Get the number of calendar ISO weeks between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar ISO weeks"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarISOWeeks","relatedDocs":{"default":"differenceInCalendarISOWeeks","fp":"fp/differenceInCalendarISOWeeks"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarISOWeeks = require('date-fns/fp/differenceInCalendarISOWeeks')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarISOWeeks from 'date-fns/fp/differenceInCalendarISOWeeks'"},"esm":{"title":"ESM","code":"import { differenceInCalendarISOWeeks } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarISOWeeks(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfISOWeek","category":"ISO Week Helpers","title":"endOfISOWeek","description":"Return the end of an ISO week for the given date.","content":{"id":"endOfISOWeek","longname":"endOfISOWeek","name":"endOfISOWeek","kind":"member","scope":"global","description":"Return the end of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of an ISO week for 2 September 2014 11:55:00:\nvar result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Sun Sep 07 2014 23:59:59.999"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfISOWeek"},"summary":"Return the end of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfISOWeek","fp":"fp/endOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfISOWeek = require('date-fns/endOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import endOfISOWeek from 'date-fns/endOfISOWeek'"},"esm":{"title":"ESM","code":"import { endOfISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfISOWeek","category":"ISO Week Helpers","title":"endOfISOWeek","description":"Return the end of an ISO week for the given date.","content":{"id":"endOfISOWeek","longname":"endOfISOWeek","name":"endOfISOWeek","kind":"member","scope":"global","description":"Return the end of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfISOWeek"},"summary":"Return the end of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfISOWeek","relatedDocs":{"default":"endOfISOWeek","fp":"fp/endOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfISOWeek = require('date-fns/fp/endOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import endOfISOWeek from 'date-fns/fp/endOfISOWeek'"},"esm":{"title":"ESM","code":"import { endOfISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"getISOWeek","category":"ISO Week Helpers","title":"getISOWeek","description":"Get the ISO week of the given date.","content":{"id":"getISOWeek","longname":"getISOWeek","name":"getISOWeek","kind":"member","scope":"global","description":"Get the ISO week of the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which week of the ISO-week numbering year is 2 January 2005?\nvar result = getISOWeek(new Date(2005, 0, 2))\n//=> 53"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":8,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeek"},"summary":"Get the ISO week of the given date.","returns":[{"type":{"names":["Number"]},"description":"the ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getISOWeek","fp":"fp/getISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeek = require('date-fns/getISOWeek')"},"es2015":{"title":"ES 2015","code":"import getISOWeek from 'date-fns/getISOWeek'"},"esm":{"title":"ESM","code":"import { getISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getISOWeek","category":"ISO Week Helpers","title":"getISOWeek","description":"Get the ISO week of the given date.","content":{"id":"getISOWeek","longname":"getISOWeek","name":"getISOWeek","kind":"member","scope":"global","description":"Get the ISO week of the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":8,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeek"},"summary":"Get the ISO week of the given date.","returns":[{"type":{"names":["Number"]},"description":"the ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getISOWeek","relatedDocs":{"default":"getISOWeek","fp":"fp/getISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeek = require('date-fns/fp/getISOWeek')"},"es2015":{"title":"ES 2015","code":"import getISOWeek from 'date-fns/fp/getISOWeek'"},"esm":{"title":"ESM","code":"import { getISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameISOWeek","category":"ISO Week Helpers","title":"isSameISOWeek","description":"Are the given dates in the same ISO week?","content":{"id":"isSameISOWeek","longname":"isSameISOWeek","name":"isSameISOWeek","kind":"member","scope":"global","description":"Are the given dates in the same ISO week?\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 1 September 2014 and 7 September 2014 in the same ISO week?\nvar result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n//=> true"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameISOWeek"},"summary":"Are the given dates in the same ISO week?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameISOWeek","fp":"fp/isSameISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameISOWeek = require('date-fns/isSameISOWeek')"},"es2015":{"title":"ES 2015","code":"import isSameISOWeek from 'date-fns/isSameISOWeek'"},"esm":{"title":"ESM","code":"import { isSameISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameISOWeek(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameISOWeek","category":"ISO Week Helpers","title":"isSameISOWeek","description":"Are the given dates in the same ISO week?","content":{"id":"isSameISOWeek","longname":"isSameISOWeek","name":"isSameISOWeek","kind":"member","scope":"global","description":"Are the given dates in the same ISO week?\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameISOWeek"},"summary":"Are the given dates in the same ISO week?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameISOWeek","relatedDocs":{"default":"isSameISOWeek","fp":"fp/isSameISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameISOWeek = require('date-fns/fp/isSameISOWeek')"},"es2015":{"title":"ES 2015","code":"import isSameISOWeek from 'date-fns/fp/isSameISOWeek'"},"esm":{"title":"ESM","code":"import { isSameISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameISOWeek(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisISOWeek","category":"ISO Week Helpers","title":"isThisISOWeek","description":"Is the given date in the same ISO week as the current date?","content":{"id":"isThisISOWeek","longname":"isThisISOWeek","name":"isThisISOWeek","kind":"member","scope":"global","description":"Is the given date in the same ISO week as the current date?\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 25 September 2014, is 22 September 2014 in this ISO week?\nvar result = isThisISOWeek(new Date(2014, 8, 22))\n//=> true"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisISOWeek"},"summary":"Is the given date in the same ISO week as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this ISO week"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisISOWeek","fp":"fp/isThisISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisISOWeek = require('date-fns/isThisISOWeek')"},"es2015":{"title":"ES 2015","code":"import isThisISOWeek from 'date-fns/isThisISOWeek'"},"esm":{"title":"ESM","code":"import { isThisISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfISOWeek","category":"ISO Week Helpers","title":"lastDayOfISOWeek","description":"Return the last day of an ISO week for the given date.","content":{"id":"lastDayOfISOWeek","longname":"lastDayOfISOWeek","name":"lastDayOfISOWeek","kind":"member","scope":"global","description":"Return the last day of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The last day of an ISO week for 2 September 2014 11:55:00:\nvar result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Sun Sep 07 2014 00:00:00"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfISOWeek"},"summary":"Return the last day of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of an ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"lastDayOfISOWeek","fp":"fp/lastDayOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfISOWeek = require('date-fns/lastDayOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import lastDayOfISOWeek from 'date-fns/lastDayOfISOWeek'"},"esm":{"title":"ESM","code":"import { lastDayOfISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfISOWeek","category":"ISO Week Helpers","title":"lastDayOfISOWeek","description":"Return the last day of an ISO week for the given date.","content":{"id":"lastDayOfISOWeek","longname":"lastDayOfISOWeek","name":"lastDayOfISOWeek","kind":"member","scope":"global","description":"Return the last day of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfISOWeek"},"summary":"Return the last day of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of an ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfISOWeek","relatedDocs":{"default":"lastDayOfISOWeek","fp":"fp/lastDayOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfISOWeek = require('date-fns/fp/lastDayOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import lastDayOfISOWeek from 'date-fns/fp/lastDayOfISOWeek'"},"esm":{"title":"ESM","code":"import { lastDayOfISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"setISOWeek","category":"ISO Week Helpers","title":"setISOWeek","description":"Set the ISO week to the given date.","content":{"id":"setISOWeek","longname":"setISOWeek","name":"setISOWeek","kind":"member","scope":"global","description":"Set the ISO week to the given date, saving the weekday number.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the ISO week of the new date","name":"isoWeek"}],"examples":["// Set the 53rd ISO week to 7 August 2004:\nvar result = setISOWeek(new Date(2004, 7, 7), 53)\n//=> Sat Jan 01 2005 00:00:00"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISOWeek"},"summary":"Set the ISO week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the ISO week of the new date","name":"isoWeek"}],"relatedDocs":{"default":"setISOWeek","fp":"fp/setISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISOWeek = require('date-fns/setISOWeek')"},"es2015":{"title":"ES 2015","code":"import setISOWeek from 'date-fns/setISOWeek'"},"esm":{"title":"ESM","code":"import { setISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setISOWeek(date, isoWeek)"},{"type":"jsdoc","kind":"function","urlId":"fp/setISOWeek","category":"ISO Week Helpers","title":"setISOWeek","description":"Set the ISO week to the given date.","content":{"id":"setISOWeek","longname":"setISOWeek","name":"setISOWeek","kind":"member","scope":"global","description":"Set the ISO week to the given date, saving the weekday number.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the ISO week of the new date","name":"isoWeek"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISOWeek"},"summary":"Set the ISO week to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the ISO week of the new date","name":"isoWeek"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setISOWeek","relatedDocs":{"default":"setISOWeek","fp":"fp/setISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISOWeek = require('date-fns/fp/setISOWeek')"},"es2015":{"title":"ES 2015","code":"import setISOWeek from 'date-fns/fp/setISOWeek'"},"esm":{"title":"ESM","code":"import { setISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setISOWeek(isoWeek)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfISOWeek","category":"ISO Week Helpers","title":"startOfISOWeek","description":"Return the start of an ISO week for the given date.","content":{"id":"startOfISOWeek","longname":"startOfISOWeek","name":"startOfISOWeek","kind":"member","scope":"global","description":"Return the start of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of an ISO week for 2 September 2014 11:55:00:\nvar result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n//=> Mon Sep 01 2014 00:00:00"],"category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfISOWeek"},"summary":"Return the start of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an ISO week"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfISOWeek","fp":"fp/startOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfISOWeek = require('date-fns/startOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import startOfISOWeek from 'date-fns/startOfISOWeek'"},"esm":{"title":"ESM","code":"import { startOfISOWeek } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfISOWeek(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfISOWeek","category":"ISO Week Helpers","title":"startOfISOWeek","description":"Return the start of an ISO week for the given date.","content":{"id":"startOfISOWeek","longname":"startOfISOWeek","name":"startOfISOWeek","kind":"member","scope":"global","description":"Return the start of an ISO week for the given date.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfISOWeek"},"summary":"Return the start of an ISO week for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an ISO week"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfISOWeek","relatedDocs":{"default":"startOfISOWeek","fp":"fp/startOfISOWeek"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfISOWeek = require('date-fns/fp/startOfISOWeek')"},"es2015":{"title":"ES 2015","code":"import startOfISOWeek from 'date-fns/fp/startOfISOWeek'"},"esm":{"title":"ESM","code":"import { startOfISOWeek } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfISOWeek(date)"}],"Month Helpers":[{"type":"jsdoc","kind":"function","urlId":"addMonths","category":"Month Helpers","title":"addMonths","description":"Add the specified number of months to the given date.","content":{"id":"addMonths","longname":"addMonths","name":"addMonths","kind":"member","scope":"global","description":"Add the specified number of months to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 5 months to 1 September 2014:\nvar result = addMonths(new Date(2014, 8, 1), 5)\n//=> Sun Feb 01 2015 00:00:00"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMonths"},"summary":"Add the specified number of months to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the months added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addMonths","fp":"fp/addMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMonths = require('date-fns/addMonths')"},"es2015":{"title":"ES 2015","code":"import addMonths from 'date-fns/addMonths'"},"esm":{"title":"ESM","code":"import { addMonths } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addMonths(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addMonths","category":"Month Helpers","title":"addMonths","description":"Add the specified number of months to the given date.","content":{"id":"addMonths","longname":"addMonths","name":"addMonths","kind":"member","scope":"global","description":"Add the specified number of months to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addMonths"},"summary":"Add the specified number of months to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the months added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addMonths","relatedDocs":{"default":"addMonths","fp":"fp/addMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var addMonths = require('date-fns/fp/addMonths')"},"es2015":{"title":"ES 2015","code":"import addMonths from 'date-fns/fp/addMonths'"},"esm":{"title":"ESM","code":"import { addMonths } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addMonths(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarMonths","category":"Month Helpers","title":"differenceInCalendarMonths","description":"Get the number of calendar months between the given dates.","content":{"id":"differenceInCalendarMonths","longname":"differenceInCalendarMonths","name":"differenceInCalendarMonths","kind":"member","scope":"global","description":"Get the number of calendar months between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar months are between 31 January 2014 and 1 September 2014?\nvar result = differenceInCalendarMonths(\n  new Date(2014, 8, 1),\n  new Date(2014, 0, 31)\n)\n//=> 8"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarMonths"},"summary":"Get the number of calendar months between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar months"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarMonths","fp":"fp/differenceInCalendarMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarMonths = require('date-fns/differenceInCalendarMonths')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarMonths from 'date-fns/differenceInCalendarMonths'"},"esm":{"title":"ESM","code":"import { differenceInCalendarMonths } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarMonths(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarMonths","category":"Month Helpers","title":"differenceInCalendarMonths","description":"Get the number of calendar months between the given dates.","content":{"id":"differenceInCalendarMonths","longname":"differenceInCalendarMonths","name":"differenceInCalendarMonths","kind":"member","scope":"global","description":"Get the number of calendar months between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarMonths"},"summary":"Get the number of calendar months between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar months"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarMonths","relatedDocs":{"default":"differenceInCalendarMonths","fp":"fp/differenceInCalendarMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarMonths = require('date-fns/fp/differenceInCalendarMonths')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarMonths from 'date-fns/fp/differenceInCalendarMonths'"},"esm":{"title":"ESM","code":"import { differenceInCalendarMonths } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarMonths(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInMonths","category":"Month Helpers","title":"differenceInMonths","description":"Get the number of full months between the given dates.","content":{"id":"differenceInMonths","longname":"differenceInMonths","name":"differenceInMonths","kind":"member","scope":"global","description":"Get the number of full months between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full months are between 31 January 2014 and 1 September 2014?\nvar result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n//=> 7"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMonths"},"summary":"Get the number of full months between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full months"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInMonths","fp":"fp/differenceInMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMonths = require('date-fns/differenceInMonths')"},"es2015":{"title":"ES 2015","code":"import differenceInMonths from 'date-fns/differenceInMonths'"},"esm":{"title":"ESM","code":"import { differenceInMonths } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInMonths(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInMonths","category":"Month Helpers","title":"differenceInMonths","description":"Get the number of full months between the given dates.","content":{"id":"differenceInMonths","longname":"differenceInMonths","name":"differenceInMonths","kind":"member","scope":"global","description":"Get the number of full months between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInMonths"},"summary":"Get the number of full months between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full months"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInMonths","relatedDocs":{"default":"differenceInMonths","fp":"fp/differenceInMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInMonths = require('date-fns/fp/differenceInMonths')"},"es2015":{"title":"ES 2015","code":"import differenceInMonths from 'date-fns/fp/differenceInMonths'"},"esm":{"title":"ESM","code":"import { differenceInMonths } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInMonths(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"eachWeekendOfMonth","category":"Month Helpers","title":"eachWeekendOfMonth","description":"List all the Saturdays and Sundays in the given month.","content":{"id":"eachWeekendOfMonth","longname":"eachWeekendOfMonth","name":"eachWeekendOfMonth","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the given month.","params":[{"type":{"names":["Date","Number"]},"description":"the given month","name":"date"}],"examples":["// Lists all Saturdays and Sundays in the given month\nvar result = eachWeekendOfMonth(new Date(2022, 1, 1))\n//=> [\n//   Sat Feb 05 2022 00:00:00,\n//   Sun Feb 06 2022 00:00:00,\n//   Sat Feb 12 2022 00:00:00,\n//   Sun Feb 13 2022 00:00:00,\n//   Sat Feb 19 2022 00:00:00,\n//   Sun Feb 20 2022 00:00:00,\n//   Sat Feb 26 2022 00:00:00,\n//   Sun Feb 27 2022 00:00:00\n// ]"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The passed date is invalid"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfMonth"},"summary":"List all the Saturdays and Sundays in the given month.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given month","name":"date"}],"relatedDocs":{"default":"eachWeekendOfMonth","fp":"fp/eachWeekendOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfMonth = require('date-fns/eachWeekendOfMonth')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfMonth from 'date-fns/eachWeekendOfMonth'"},"esm":{"title":"ESM","code":"import { eachWeekendOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachWeekendOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachWeekendOfMonth","category":"Month Helpers","title":"eachWeekendOfMonth","description":"List all the Saturdays and Sundays in the given month.","content":{"id":"eachWeekendOfMonth","longname":"eachWeekendOfMonth","name":"eachWeekendOfMonth","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the given month.","params":[{"type":{"names":["Date","Number"]},"description":"the given month","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The passed date is invalid"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfMonth"},"summary":"List all the Saturdays and Sundays in the given month.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given month","name":"date"}],"generatedFrom":"eachWeekendOfMonth","relatedDocs":{"default":"eachWeekendOfMonth","fp":"fp/eachWeekendOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfMonth = require('date-fns/fp/eachWeekendOfMonth')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfMonth from 'date-fns/fp/eachWeekendOfMonth'"},"esm":{"title":"ESM","code":"import { eachWeekendOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachWeekendOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"endOfMonth","category":"Month Helpers","title":"endOfMonth","description":"Return the end of a month for the given date.","content":{"id":"endOfMonth","longname":"endOfMonth","name":"endOfMonth","kind":"member","scope":"global","description":"Return the end of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a month for 2 September 2014 11:55:00:\nvar result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 30 2014 23:59:59.999"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfMonth"},"summary":"Return the end of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfMonth","fp":"fp/endOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfMonth = require('date-fns/endOfMonth')"},"es2015":{"title":"ES 2015","code":"import endOfMonth from 'date-fns/endOfMonth'"},"esm":{"title":"ESM","code":"import { endOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfMonth","category":"Month Helpers","title":"endOfMonth","description":"Return the end of a month for the given date.","content":{"id":"endOfMonth","longname":"endOfMonth","name":"endOfMonth","kind":"member","scope":"global","description":"Return the end of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfMonth"},"summary":"Return the end of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfMonth","relatedDocs":{"default":"endOfMonth","fp":"fp/endOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfMonth = require('date-fns/fp/endOfMonth')"},"es2015":{"title":"ES 2015","code":"import endOfMonth from 'date-fns/fp/endOfMonth'"},"esm":{"title":"ESM","code":"import { endOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"getDaysInMonth","category":"Month Helpers","title":"getDaysInMonth","description":"Get the number of days in a month of the given date.","content":{"id":"getDaysInMonth","longname":"getDaysInMonth","name":"getDaysInMonth","kind":"member","scope":"global","description":"Get the number of days in a month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// How many days are in February 2000?\nvar result = getDaysInMonth(new Date(2000, 1))\n//=> 29"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDaysInMonth"},"summary":"Get the number of days in a month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of days in a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDaysInMonth","fp":"fp/getDaysInMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDaysInMonth = require('date-fns/getDaysInMonth')"},"es2015":{"title":"ES 2015","code":"import getDaysInMonth from 'date-fns/getDaysInMonth'"},"esm":{"title":"ESM","code":"import { getDaysInMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDaysInMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDaysInMonth","category":"Month Helpers","title":"getDaysInMonth","description":"Get the number of days in a month of the given date.","content":{"id":"getDaysInMonth","longname":"getDaysInMonth","name":"getDaysInMonth","kind":"member","scope":"global","description":"Get the number of days in a month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDaysInMonth"},"summary":"Get the number of days in a month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of days in a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDaysInMonth","relatedDocs":{"default":"getDaysInMonth","fp":"fp/getDaysInMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDaysInMonth = require('date-fns/fp/getDaysInMonth')"},"es2015":{"title":"ES 2015","code":"import getDaysInMonth from 'date-fns/fp/getDaysInMonth'"},"esm":{"title":"ESM","code":"import { getDaysInMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDaysInMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"getMonth","category":"Month Helpers","title":"getMonth","description":"Get the month of the given date.","content":{"id":"getMonth","longname":"getMonth","name":"getMonth","kind":"member","scope":"global","description":"Get the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which month is 29 February 2012?\nvar result = getMonth(new Date(2012, 1, 29))\n//=> 1"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMonth"},"summary":"Get the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getMonth","fp":"fp/getMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMonth = require('date-fns/getMonth')"},"es2015":{"title":"ES 2015","code":"import getMonth from 'date-fns/getMonth'"},"esm":{"title":"ESM","code":"import { getMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getMonth","category":"Month Helpers","title":"getMonth","description":"Get the month of the given date.","content":{"id":"getMonth","longname":"getMonth","name":"getMonth","kind":"member","scope":"global","description":"Get the month of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getMonth"},"summary":"Get the month of the given date.","returns":[{"type":{"names":["Number"]},"description":"the month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getMonth","relatedDocs":{"default":"getMonth","fp":"fp/getMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var getMonth = require('date-fns/fp/getMonth')"},"es2015":{"title":"ES 2015","code":"import getMonth from 'date-fns/fp/getMonth'"},"esm":{"title":"ESM","code":"import { getMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"isFirstDayOfMonth","category":"Month Helpers","title":"isFirstDayOfMonth","description":"Is the given date the first day of a month?","content":{"id":"isFirstDayOfMonth","longname":"isFirstDayOfMonth","name":"isFirstDayOfMonth","kind":"member","scope":"global","description":"Is the given date the first day of a month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 1 September 2014 the first day of a month?\nvar result = isFirstDayOfMonth(new Date(2014, 8, 1))\n//=> true"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isFirstDayOfMonth"},"summary":"Is the given date the first day of a month?","returns":[{"type":{"names":["Boolean"]},"description":"the date is the first day of a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isFirstDayOfMonth","fp":"fp/isFirstDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFirstDayOfMonth = require('date-fns/isFirstDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth'"},"esm":{"title":"ESM","code":"import { isFirstDayOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isFirstDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isFirstDayOfMonth","category":"Month Helpers","title":"isFirstDayOfMonth","description":"Is the given date the first day of a month?","content":{"id":"isFirstDayOfMonth","longname":"isFirstDayOfMonth","name":"isFirstDayOfMonth","kind":"member","scope":"global","description":"Is the given date the first day of a month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isFirstDayOfMonth"},"summary":"Is the given date the first day of a month?","returns":[{"type":{"names":["Boolean"]},"description":"the date is the first day of a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isFirstDayOfMonth","relatedDocs":{"default":"isFirstDayOfMonth","fp":"fp/isFirstDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isFirstDayOfMonth = require('date-fns/fp/isFirstDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import isFirstDayOfMonth from 'date-fns/fp/isFirstDayOfMonth'"},"esm":{"title":"ESM","code":"import { isFirstDayOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isFirstDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"isLastDayOfMonth","category":"Month Helpers","title":"isLastDayOfMonth","description":"Is the given date the last day of a month?","content":{"id":"isLastDayOfMonth","longname":"isLastDayOfMonth","name":"isLastDayOfMonth","kind":"member","scope":"global","description":"Is the given date the last day of a month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 28 February 2014 the last day of a month?\nvar result = isLastDayOfMonth(new Date(2014, 1, 28))\n//=> true"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isLastDayOfMonth"},"summary":"Is the given date the last day of a month?","returns":[{"type":{"names":["Boolean"]},"description":"the date is the last day of a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isLastDayOfMonth","fp":"fp/isLastDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isLastDayOfMonth = require('date-fns/isLastDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import isLastDayOfMonth from 'date-fns/isLastDayOfMonth'"},"esm":{"title":"ESM","code":"import { isLastDayOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isLastDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isLastDayOfMonth","category":"Month Helpers","title":"isLastDayOfMonth","description":"Is the given date the last day of a month?","content":{"id":"isLastDayOfMonth","longname":"isLastDayOfMonth","name":"isLastDayOfMonth","kind":"member","scope":"global","description":"Is the given date the last day of a month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isLastDayOfMonth"},"summary":"Is the given date the last day of a month?","returns":[{"type":{"names":["Boolean"]},"description":"the date is the last day of a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isLastDayOfMonth","relatedDocs":{"default":"isLastDayOfMonth","fp":"fp/isLastDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isLastDayOfMonth = require('date-fns/fp/isLastDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import isLastDayOfMonth from 'date-fns/fp/isLastDayOfMonth'"},"esm":{"title":"ESM","code":"import { isLastDayOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isLastDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameMonth","category":"Month Helpers","title":"isSameMonth","description":"Are the given dates in the same month?","content":{"id":"isSameMonth","longname":"isSameMonth","name":"isSameMonth","kind":"member","scope":"global","description":"Are the given dates in the same month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 2 September 2014 and 25 September 2014 in the same month?\nvar result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n//=> true"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameMonth"},"summary":"Are the given dates in the same month?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameMonth","fp":"fp/isSameMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameMonth = require('date-fns/isSameMonth')"},"es2015":{"title":"ES 2015","code":"import isSameMonth from 'date-fns/isSameMonth'"},"esm":{"title":"ESM","code":"import { isSameMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameMonth(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameMonth","category":"Month Helpers","title":"isSameMonth","description":"Are the given dates in the same month?","content":{"id":"isSameMonth","longname":"isSameMonth","name":"isSameMonth","kind":"member","scope":"global","description":"Are the given dates in the same month?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameMonth"},"summary":"Are the given dates in the same month?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameMonth","relatedDocs":{"default":"isSameMonth","fp":"fp/isSameMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameMonth = require('date-fns/fp/isSameMonth')"},"es2015":{"title":"ES 2015","code":"import isSameMonth from 'date-fns/fp/isSameMonth'"},"esm":{"title":"ESM","code":"import { isSameMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameMonth(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisMonth","category":"Month Helpers","title":"isThisMonth","description":"Is the given date in the same month as the current date?","content":{"id":"isThisMonth","longname":"isThisMonth","name":"isThisMonth","kind":"member","scope":"global","description":"Is the given date in the same month as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 25 September 2014, is 15 September 2014 in this month?\nvar result = isThisMonth(new Date(2014, 8, 15))\n//=> true"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisMonth"},"summary":"Is the given date in the same month as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this month"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisMonth","fp":"fp/isThisMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisMonth = require('date-fns/isThisMonth')"},"es2015":{"title":"ES 2015","code":"import isThisMonth from 'date-fns/isThisMonth'"},"esm":{"title":"ESM","code":"import { isThisMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfMonth","category":"Month Helpers","title":"lastDayOfMonth","description":"Return the last day of a month for the given date.","content":{"id":"lastDayOfMonth","longname":"lastDayOfMonth","name":"lastDayOfMonth","kind":"member","scope":"global","description":"Return the last day of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The last day of a month for 2 September 2014 11:55:00:\nvar result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 30 2014 00:00:00"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfMonth"},"summary":"Return the last day of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"lastDayOfMonth","fp":"fp/lastDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfMonth = require('date-fns/lastDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import lastDayOfMonth from 'date-fns/lastDayOfMonth'"},"esm":{"title":"ESM","code":"import { lastDayOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfMonth","category":"Month Helpers","title":"lastDayOfMonth","description":"Return the last day of a month for the given date.","content":{"id":"lastDayOfMonth","longname":"lastDayOfMonth","name":"lastDayOfMonth","kind":"member","scope":"global","description":"Return the last day of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfMonth"},"summary":"Return the last day of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfMonth","relatedDocs":{"default":"lastDayOfMonth","fp":"fp/lastDayOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfMonth = require('date-fns/fp/lastDayOfMonth')"},"es2015":{"title":"ES 2015","code":"import lastDayOfMonth from 'date-fns/fp/lastDayOfMonth'"},"esm":{"title":"ESM","code":"import { lastDayOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"setMonth","category":"Month Helpers","title":"setMonth","description":"Set the month to the given date.","content":{"id":"setMonth","longname":"setMonth","name":"setMonth","kind":"member","scope":"global","description":"Set the month to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the month of the new date","name":"month"}],"examples":["// Set February to 1 September 2014:\nvar result = setMonth(new Date(2014, 8, 1), 1)\n//=> Sat Feb 01 2014 00:00:00"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMonth"},"summary":"Set the month to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the month set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the month of the new date","name":"month"}],"relatedDocs":{"default":"setMonth","fp":"fp/setMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMonth = require('date-fns/setMonth')"},"es2015":{"title":"ES 2015","code":"import setMonth from 'date-fns/setMonth'"},"esm":{"title":"ESM","code":"import { setMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setMonth(date, month)"},{"type":"jsdoc","kind":"function","urlId":"fp/setMonth","category":"Month Helpers","title":"setMonth","description":"Set the month to the given date.","content":{"id":"setMonth","longname":"setMonth","name":"setMonth","kind":"member","scope":"global","description":"Set the month to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the month of the new date","name":"month"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setMonth"},"summary":"Set the month to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the month set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the month of the new date","name":"month"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setMonth","relatedDocs":{"default":"setMonth","fp":"fp/setMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var setMonth = require('date-fns/fp/setMonth')"},"es2015":{"title":"ES 2015","code":"import setMonth from 'date-fns/fp/setMonth'"},"esm":{"title":"ESM","code":"import { setMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setMonth(month)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfMonth","category":"Month Helpers","title":"startOfMonth","description":"Return the start of a month for the given date.","content":{"id":"startOfMonth","longname":"startOfMonth","name":"startOfMonth","kind":"member","scope":"global","description":"Return the start of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a month for 2 September 2014 11:55:00:\nvar result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n//=> Mon Sep 01 2014 00:00:00"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfMonth"},"summary":"Return the start of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a month"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfMonth","fp":"fp/startOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfMonth = require('date-fns/startOfMonth')"},"es2015":{"title":"ES 2015","code":"import startOfMonth from 'date-fns/startOfMonth'"},"esm":{"title":"ESM","code":"import { startOfMonth } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfMonth","category":"Month Helpers","title":"startOfMonth","description":"Return the start of a month for the given date.","content":{"id":"startOfMonth","longname":"startOfMonth","name":"startOfMonth","kind":"member","scope":"global","description":"Return the start of a month for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfMonth"},"summary":"Return the start of a month for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a month"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfMonth","relatedDocs":{"default":"startOfMonth","fp":"fp/startOfMonth"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfMonth = require('date-fns/fp/startOfMonth')"},"es2015":{"title":"ES 2015","code":"import startOfMonth from 'date-fns/fp/startOfMonth'"},"esm":{"title":"ESM","code":"import { startOfMonth } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfMonth(date)"},{"type":"jsdoc","kind":"function","urlId":"subMonths","category":"Month Helpers","title":"subMonths","description":"Subtract the specified number of months from the given date.","content":{"id":"subMonths","longname":"subMonths","name":"subMonths","kind":"member","scope":"global","description":"Subtract the specified number of months from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 5 months from 1 February 2015:\nvar result = subMonths(new Date(2015, 1, 1), 5)\n//=> Mon Sep 01 2014 00:00:00"],"category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMonths"},"summary":"Subtract the specified number of months from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the months subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subMonths","fp":"fp/subMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMonths = require('date-fns/subMonths')"},"es2015":{"title":"ES 2015","code":"import subMonths from 'date-fns/subMonths'"},"esm":{"title":"ESM","code":"import { subMonths } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subMonths(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subMonths","category":"Month Helpers","title":"subMonths","description":"Subtract the specified number of months from the given date.","content":{"id":"subMonths","longname":"subMonths","name":"subMonths","kind":"member","scope":"global","description":"Subtract the specified number of months from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Month Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subMonths"},"summary":"Subtract the specified number of months from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the months subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subMonths","relatedDocs":{"default":"subMonths","fp":"fp/subMonths"},"usage":{"commonjs":{"title":"CommonJS","code":"var subMonths = require('date-fns/fp/subMonths')"},"es2015":{"title":"ES 2015","code":"import subMonths from 'date-fns/fp/subMonths'"},"esm":{"title":"ESM","code":"import { subMonths } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subMonths(amount)(date)"}],"Quarter Helpers":[{"type":"jsdoc","kind":"function","urlId":"addQuarters","category":"Quarter Helpers","title":"addQuarters","description":"Add the specified number of year quarters to the given date.","content":{"id":"addQuarters","longname":"addQuarters","name":"addQuarters","kind":"member","scope":"global","description":"Add the specified number of year quarters to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 1 quarter to 1 September 2014:\nvar result = addQuarters(new Date(2014, 8, 1), 1)\n//=> Mon Dec 01 2014 00:00:00"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addQuarters"},"summary":"Add the specified number of year quarters to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarters added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addQuarters","fp":"fp/addQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var addQuarters = require('date-fns/addQuarters')"},"es2015":{"title":"ES 2015","code":"import addQuarters from 'date-fns/addQuarters'"},"esm":{"title":"ESM","code":"import { addQuarters } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addQuarters(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addQuarters","category":"Quarter Helpers","title":"addQuarters","description":"Add the specified number of year quarters to the given date.","content":{"id":"addQuarters","longname":"addQuarters","name":"addQuarters","kind":"member","scope":"global","description":"Add the specified number of year quarters to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addQuarters"},"summary":"Add the specified number of year quarters to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarters added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addQuarters","relatedDocs":{"default":"addQuarters","fp":"fp/addQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var addQuarters = require('date-fns/fp/addQuarters')"},"es2015":{"title":"ES 2015","code":"import addQuarters from 'date-fns/fp/addQuarters'"},"esm":{"title":"ESM","code":"import { addQuarters } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addQuarters(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarQuarters","category":"Quarter Helpers","title":"differenceInCalendarQuarters","description":"Get the number of calendar quarters between the given dates.","content":{"id":"differenceInCalendarQuarters","longname":"differenceInCalendarQuarters","name":"differenceInCalendarQuarters","kind":"member","scope":"global","description":"Get the number of calendar quarters between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar quarters are between 31 December 2013 and 2 July 2014?\nvar result = differenceInCalendarQuarters(\n  new Date(2014, 6, 2),\n  new Date(2013, 11, 31)\n)\n//=> 3"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarQuarters"},"summary":"Get the number of calendar quarters between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar quarters"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarQuarters","fp":"fp/differenceInCalendarQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarQuarters = require('date-fns/differenceInCalendarQuarters')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarQuarters from 'date-fns/differenceInCalendarQuarters'"},"esm":{"title":"ESM","code":"import { differenceInCalendarQuarters } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarQuarters(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarQuarters","category":"Quarter Helpers","title":"differenceInCalendarQuarters","description":"Get the number of calendar quarters between the given dates.","content":{"id":"differenceInCalendarQuarters","longname":"differenceInCalendarQuarters","name":"differenceInCalendarQuarters","kind":"member","scope":"global","description":"Get the number of calendar quarters between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarQuarters"},"summary":"Get the number of calendar quarters between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar quarters"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarQuarters","relatedDocs":{"default":"differenceInCalendarQuarters","fp":"fp/differenceInCalendarQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarQuarters = require('date-fns/fp/differenceInCalendarQuarters')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarQuarters from 'date-fns/fp/differenceInCalendarQuarters'"},"esm":{"title":"ESM","code":"import { differenceInCalendarQuarters } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarQuarters(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInQuarters","category":"Quarter Helpers","title":"differenceInQuarters","description":"Get the number of full quarters between the given dates.","content":{"id":"differenceInQuarters","longname":"differenceInQuarters","name":"differenceInQuarters","kind":"member","scope":"global","description":"Get the number of full quarters between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full quarters are between 31 December 2013 and 2 July 2014?\nvar result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n//=> 2"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInQuarters"},"summary":"Get the number of full quarters between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full quarters"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInQuarters","fp":"fp/differenceInQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInQuarters = require('date-fns/differenceInQuarters')"},"es2015":{"title":"ES 2015","code":"import differenceInQuarters from 'date-fns/differenceInQuarters'"},"esm":{"title":"ESM","code":"import { differenceInQuarters } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInQuarters(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInQuarters","category":"Quarter Helpers","title":"differenceInQuarters","description":"Get the number of full quarters between the given dates.","content":{"id":"differenceInQuarters","longname":"differenceInQuarters","name":"differenceInQuarters","kind":"member","scope":"global","description":"Get the number of full quarters between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInQuarters"},"summary":"Get the number of full quarters between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full quarters"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInQuarters","relatedDocs":{"default":"differenceInQuarters","fp":"fp/differenceInQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInQuarters = require('date-fns/fp/differenceInQuarters')"},"es2015":{"title":"ES 2015","code":"import differenceInQuarters from 'date-fns/fp/differenceInQuarters'"},"esm":{"title":"ESM","code":"import { differenceInQuarters } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInQuarters(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfQuarter","category":"Quarter Helpers","title":"endOfQuarter","description":"Return the end of a year quarter for the given date.","content":{"id":"endOfQuarter","longname":"endOfQuarter","name":"endOfQuarter","kind":"member","scope":"global","description":"Return the end of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a quarter for 2 September 2014 11:55:00:\nvar result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 30 2014 23:59:59.999"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfQuarter"},"summary":"Return the end of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a quarter"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfQuarter","fp":"fp/endOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfQuarter = require('date-fns/endOfQuarter')"},"es2015":{"title":"ES 2015","code":"import endOfQuarter from 'date-fns/endOfQuarter'"},"esm":{"title":"ESM","code":"import { endOfQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfQuarter","category":"Quarter Helpers","title":"endOfQuarter","description":"Return the end of a year quarter for the given date.","content":{"id":"endOfQuarter","longname":"endOfQuarter","name":"endOfQuarter","kind":"member","scope":"global","description":"Return the end of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfQuarter"},"summary":"Return the end of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfQuarter","relatedDocs":{"default":"endOfQuarter","fp":"fp/endOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfQuarter = require('date-fns/fp/endOfQuarter')"},"es2015":{"title":"ES 2015","code":"import endOfQuarter from 'date-fns/fp/endOfQuarter'"},"esm":{"title":"ESM","code":"import { endOfQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"getQuarter","category":"Quarter Helpers","title":"getQuarter","description":"Get the year quarter of the given date.","content":{"id":"getQuarter","longname":"getQuarter","name":"getQuarter","kind":"member","scope":"global","description":"Get the year quarter of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which quarter is 2 July 2014?\nvar result = getQuarter(new Date(2014, 6, 2))\n//=> 3"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getQuarter"},"summary":"Get the year quarter of the given date.","returns":[{"type":{"names":["Number"]},"description":"the quarter"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getQuarter","fp":"fp/getQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var getQuarter = require('date-fns/getQuarter')"},"es2015":{"title":"ES 2015","code":"import getQuarter from 'date-fns/getQuarter'"},"esm":{"title":"ESM","code":"import { getQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getQuarter","category":"Quarter Helpers","title":"getQuarter","description":"Get the year quarter of the given date.","content":{"id":"getQuarter","longname":"getQuarter","name":"getQuarter","kind":"member","scope":"global","description":"Get the year quarter of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getQuarter"},"summary":"Get the year quarter of the given date.","returns":[{"type":{"names":["Number"]},"description":"the quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getQuarter","relatedDocs":{"default":"getQuarter","fp":"fp/getQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var getQuarter = require('date-fns/fp/getQuarter')"},"es2015":{"title":"ES 2015","code":"import getQuarter from 'date-fns/fp/getQuarter'"},"esm":{"title":"ESM","code":"import { getQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameQuarter","category":"Quarter Helpers","title":"isSameQuarter","description":"Are the given dates in the same year quarter?","content":{"id":"isSameQuarter","longname":"isSameQuarter","name":"isSameQuarter","kind":"member","scope":"global","description":"Are the given dates in the same year quarter?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 1 January 2014 and 8 March 2014 in the same quarter?\nvar result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n//=> true"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameQuarter"},"summary":"Are the given dates in the same year quarter?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same quarter"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameQuarter","fp":"fp/isSameQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameQuarter = require('date-fns/isSameQuarter')"},"es2015":{"title":"ES 2015","code":"import isSameQuarter from 'date-fns/isSameQuarter'"},"esm":{"title":"ESM","code":"import { isSameQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameQuarter(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameQuarter","category":"Quarter Helpers","title":"isSameQuarter","description":"Are the given dates in the same year quarter?","content":{"id":"isSameQuarter","longname":"isSameQuarter","name":"isSameQuarter","kind":"member","scope":"global","description":"Are the given dates in the same year quarter?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameQuarter"},"summary":"Are the given dates in the same year quarter?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameQuarter","relatedDocs":{"default":"isSameQuarter","fp":"fp/isSameQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameQuarter = require('date-fns/fp/isSameQuarter')"},"es2015":{"title":"ES 2015","code":"import isSameQuarter from 'date-fns/fp/isSameQuarter'"},"esm":{"title":"ESM","code":"import { isSameQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameQuarter(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisQuarter","category":"Quarter Helpers","title":"isThisQuarter","description":"Is the given date in the same quarter as the current date?","content":{"id":"isThisQuarter","longname":"isThisQuarter","name":"isThisQuarter","kind":"member","scope":"global","description":"Is the given date in the same quarter as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 25 September 2014, is 2 July 2014 in this quarter?\nvar result = isThisQuarter(new Date(2014, 6, 2))\n//=> true"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisQuarter"},"summary":"Is the given date in the same quarter as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this quarter"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisQuarter","fp":"fp/isThisQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisQuarter = require('date-fns/isThisQuarter')"},"es2015":{"title":"ES 2015","code":"import isThisQuarter from 'date-fns/isThisQuarter'"},"esm":{"title":"ESM","code":"import { isThisQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfQuarter","category":"Quarter Helpers","title":"lastDayOfQuarter","description":"Return the last day of a year quarter for the given date.","content":{"id":"lastDayOfQuarter","longname":"lastDayOfQuarter","name":"lastDayOfQuarter","kind":"member","scope":"global","description":"Return the last day of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"options.additionalDigits"}],"examples":["// The last day of a quarter for 2 September 2014 11:55:00:\nvar result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Sep 30 2014 00:00:00"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfQuarter"},"summary":"Return the last day of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a quarter"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"additionalDigits","isProperty":true}]}],"relatedDocs":{"default":"lastDayOfQuarter","fp":"fp/lastDayOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfQuarter = require('date-fns/lastDayOfQuarter')"},"es2015":{"title":"ES 2015","code":"import lastDayOfQuarter from 'date-fns/lastDayOfQuarter'"},"esm":{"title":"ESM","code":"import { lastDayOfQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfQuarter(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfQuarter","category":"Quarter Helpers","title":"lastDayOfQuarter","description":"Return the last day of a year quarter for the given date.","content":{"id":"lastDayOfQuarter","longname":"lastDayOfQuarter","name":"lastDayOfQuarter","kind":"member","scope":"global","description":"Return the last day of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfQuarter"},"summary":"Return the last day of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfQuarter","relatedDocs":{"default":"lastDayOfQuarter","fp":"fp/lastDayOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfQuarter = require('date-fns/fp/lastDayOfQuarter')"},"es2015":{"title":"ES 2015","code":"import lastDayOfQuarter from 'date-fns/fp/lastDayOfQuarter'"},"esm":{"title":"ESM","code":"import { lastDayOfQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfQuarterWithOptions","category":"Quarter Helpers","title":"lastDayOfQuarterWithOptions","description":"Return the last day of a year quarter for the given date.","content":{"id":"lastDayOfQuarterWithOptions","longname":"lastDayOfQuarterWithOptions","name":"lastDayOfQuarterWithOptions","kind":"member","scope":"global","description":"Return the last day of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"options.additionalDigits"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfQuarter"},"summary":"Return the last day of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"additionalDigits","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"lastDayOfQuarter","relatedDocs":{"default":"lastDayOfQuarter","fp":"fp/lastDayOfQuarter","fpWithOptions":"fp/lastDayOfQuarterWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfQuarter = require('date-fns/fp/lastDayOfQuarter')"},"es2015":{"title":"ES 2015","code":"import lastDayOfQuarter from 'date-fns/fp/lastDayOfQuarter'"},"esm":{"title":"ESM","code":"import { lastDayOfQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfQuarter(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"setQuarter","category":"Quarter Helpers","title":"setQuarter","description":"Set the year quarter to the given date.","content":{"id":"setQuarter","longname":"setQuarter","name":"setQuarter","kind":"member","scope":"global","description":"Set the year quarter to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the quarter of the new date","name":"quarter"}],"examples":["// Set the 2nd quarter to 2 July 2014:\nvar result = setQuarter(new Date(2014, 6, 2), 2)\n//=> Wed Apr 02 2014 00:00:00"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setQuarter"},"summary":"Set the year quarter to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarter set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the quarter of the new date","name":"quarter"}],"relatedDocs":{"default":"setQuarter","fp":"fp/setQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var setQuarter = require('date-fns/setQuarter')"},"es2015":{"title":"ES 2015","code":"import setQuarter from 'date-fns/setQuarter'"},"esm":{"title":"ESM","code":"import { setQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setQuarter(date, quarter)"},{"type":"jsdoc","kind":"function","urlId":"fp/setQuarter","category":"Quarter Helpers","title":"setQuarter","description":"Set the year quarter to the given date.","content":{"id":"setQuarter","longname":"setQuarter","name":"setQuarter","kind":"member","scope":"global","description":"Set the year quarter to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the quarter of the new date","name":"quarter"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setQuarter"},"summary":"Set the year quarter to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarter set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the quarter of the new date","name":"quarter"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setQuarter","relatedDocs":{"default":"setQuarter","fp":"fp/setQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var setQuarter = require('date-fns/fp/setQuarter')"},"es2015":{"title":"ES 2015","code":"import setQuarter from 'date-fns/fp/setQuarter'"},"esm":{"title":"ESM","code":"import { setQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setQuarter(quarter)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfQuarter","category":"Quarter Helpers","title":"startOfQuarter","description":"Return the start of a year quarter for the given date.","content":{"id":"startOfQuarter","longname":"startOfQuarter","name":"startOfQuarter","kind":"member","scope":"global","description":"Return the start of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a quarter for 2 September 2014 11:55:00:\nvar result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n//=> Tue Jul 01 2014 00:00:00"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfQuarter"},"summary":"Return the start of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a quarter"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfQuarter","fp":"fp/startOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfQuarter = require('date-fns/startOfQuarter')"},"es2015":{"title":"ES 2015","code":"import startOfQuarter from 'date-fns/startOfQuarter'"},"esm":{"title":"ESM","code":"import { startOfQuarter } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfQuarter","category":"Quarter Helpers","title":"startOfQuarter","description":"Return the start of a year quarter for the given date.","content":{"id":"startOfQuarter","longname":"startOfQuarter","name":"startOfQuarter","kind":"member","scope":"global","description":"Return the start of a year quarter for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfQuarter"},"summary":"Return the start of a year quarter for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a quarter"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfQuarter","relatedDocs":{"default":"startOfQuarter","fp":"fp/startOfQuarter"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfQuarter = require('date-fns/fp/startOfQuarter')"},"es2015":{"title":"ES 2015","code":"import startOfQuarter from 'date-fns/fp/startOfQuarter'"},"esm":{"title":"ESM","code":"import { startOfQuarter } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfQuarter(date)"},{"type":"jsdoc","kind":"function","urlId":"subQuarters","category":"Quarter Helpers","title":"subQuarters","description":"Subtract the specified number of year quarters from the given date.","content":{"id":"subQuarters","longname":"subQuarters","name":"subQuarters","kind":"member","scope":"global","description":"Subtract the specified number of year quarters from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 3 quarters from 1 September 2014:\nvar result = subQuarters(new Date(2014, 8, 1), 3)\n//=> Sun Dec 01 2013 00:00:00"],"category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subQuarters"},"summary":"Subtract the specified number of year quarters from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarters subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subQuarters","fp":"fp/subQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var subQuarters = require('date-fns/subQuarters')"},"es2015":{"title":"ES 2015","code":"import subQuarters from 'date-fns/subQuarters'"},"esm":{"title":"ESM","code":"import { subQuarters } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subQuarters(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subQuarters","category":"Quarter Helpers","title":"subQuarters","description":"Subtract the specified number of year quarters from the given date.","content":{"id":"subQuarters","longname":"subQuarters","name":"subQuarters","kind":"member","scope":"global","description":"Subtract the specified number of year quarters from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Quarter Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subQuarters"},"summary":"Subtract the specified number of year quarters from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the quarters subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subQuarters","relatedDocs":{"default":"subQuarters","fp":"fp/subQuarters"},"usage":{"commonjs":{"title":"CommonJS","code":"var subQuarters = require('date-fns/fp/subQuarters')"},"es2015":{"title":"ES 2015","code":"import subQuarters from 'date-fns/fp/subQuarters'"},"esm":{"title":"ESM","code":"import { subQuarters } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subQuarters(amount)(date)"}],"Year Helpers":[{"type":"jsdoc","kind":"function","urlId":"addYears","category":"Year Helpers","title":"addYears","description":"Add the specified number of years to the given date.","content":{"id":"addYears","longname":"addYears","name":"addYears","kind":"member","scope":"global","description":"Add the specified number of years to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 5 years to 1 September 2014:\nvar result = addYears(new Date(2014, 8, 1), 5)\n//=> Sun Sep 01 2019 00:00:00"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addYears"},"summary":"Add the specified number of years to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the years added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addYears","fp":"fp/addYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var addYears = require('date-fns/addYears')"},"es2015":{"title":"ES 2015","code":"import addYears from 'date-fns/addYears'"},"esm":{"title":"ESM","code":"import { addYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addYears(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addYears","category":"Year Helpers","title":"addYears","description":"Add the specified number of years to the given date.","content":{"id":"addYears","longname":"addYears","name":"addYears","kind":"member","scope":"global","description":"Add the specified number of years to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addYears"},"summary":"Add the specified number of years to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the years added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addYears","relatedDocs":{"default":"addYears","fp":"fp/addYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var addYears = require('date-fns/fp/addYears')"},"es2015":{"title":"ES 2015","code":"import addYears from 'date-fns/fp/addYears'"},"esm":{"title":"ESM","code":"import { addYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addYears(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarYears","category":"Year Helpers","title":"differenceInCalendarYears","description":"Get the number of calendar years between the given dates.","content":{"id":"differenceInCalendarYears","longname":"differenceInCalendarYears","name":"differenceInCalendarYears","kind":"member","scope":"global","description":"Get the number of calendar years between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar years are between 31 December 2013 and 11 February 2015?\nvar result = differenceInCalendarYears(\n  new Date(2015, 1, 11),\n  new Date(2013, 11, 31)\n)\n//=> 2"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarYears"},"summary":"Get the number of calendar years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar years"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarYears","fp":"fp/differenceInCalendarYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarYears = require('date-fns/differenceInCalendarYears')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarYears from 'date-fns/differenceInCalendarYears'"},"esm":{"title":"ESM","code":"import { differenceInCalendarYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarYears(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarYears","category":"Year Helpers","title":"differenceInCalendarYears","description":"Get the number of calendar years between the given dates.","content":{"id":"differenceInCalendarYears","longname":"differenceInCalendarYears","name":"differenceInCalendarYears","kind":"member","scope":"global","description":"Get the number of calendar years between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarYears"},"summary":"Get the number of calendar years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar years"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarYears","relatedDocs":{"default":"differenceInCalendarYears","fp":"fp/differenceInCalendarYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarYears = require('date-fns/fp/differenceInCalendarYears')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarYears from 'date-fns/fp/differenceInCalendarYears'"},"esm":{"title":"ESM","code":"import { differenceInCalendarYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarYears(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInYears","category":"Year Helpers","title":"differenceInYears","description":"Get the number of full years between the given dates.","content":{"id":"differenceInYears","longname":"differenceInYears","name":"differenceInYears","kind":"member","scope":"global","description":"Get the number of full years between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full years are between 31 December 2013 and 11 February 2015?\nvar result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n//=> 1"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInYears"},"summary":"Get the number of full years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full years"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInYears","fp":"fp/differenceInYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInYears = require('date-fns/differenceInYears')"},"es2015":{"title":"ES 2015","code":"import differenceInYears from 'date-fns/differenceInYears'"},"esm":{"title":"ESM","code":"import { differenceInYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInYears(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInYears","category":"Year Helpers","title":"differenceInYears","description":"Get the number of full years between the given dates.","content":{"id":"differenceInYears","longname":"differenceInYears","name":"differenceInYears","kind":"member","scope":"global","description":"Get the number of full years between the given dates.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInYears"},"summary":"Get the number of full years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full years"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInYears","relatedDocs":{"default":"differenceInYears","fp":"fp/differenceInYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInYears = require('date-fns/fp/differenceInYears')"},"es2015":{"title":"ES 2015","code":"import differenceInYears from 'date-fns/fp/differenceInYears'"},"esm":{"title":"ESM","code":"import { differenceInYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInYears(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"eachWeekendOfYear","category":"Year Helpers","title":"eachWeekendOfYear","description":"List all the Saturdays and Sundays in the year.","content":{"id":"eachWeekendOfYear","longname":"eachWeekendOfYear","name":"eachWeekendOfYear","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the year.","params":[{"type":{"names":["Date","Number"]},"description":"the given year","name":"date"}],"examples":["// Lists all Saturdays and Sundays in the year\nvar result = eachWeekendOfYear(new Date(2020, 1, 1))\n//=> [\n//   Sat Jan 03 2020 00:00:00,\n//   Sun Jan 04 2020 00:00:00,\n//   ...\n//   Sun Dec 27 2020 00:00:00\n// ]\n]"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The passed date is invalid"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfYear"},"summary":"List all the Saturdays and Sundays in the year.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given year","name":"date"}],"relatedDocs":{"default":"eachWeekendOfYear","fp":"fp/eachWeekendOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfYear = require('date-fns/eachWeekendOfYear')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfYear from 'date-fns/eachWeekendOfYear'"},"esm":{"title":"ESM","code":"import { eachWeekendOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"eachWeekendOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/eachWeekendOfYear","category":"Year Helpers","title":"eachWeekendOfYear","description":"List all the Saturdays and Sundays in the year.","content":{"id":"eachWeekendOfYear","longname":"eachWeekendOfYear","name":"eachWeekendOfYear","kind":"member","scope":"global","description":"Get all the Saturdays and Sundays in the year.","params":[{"type":{"names":["Date","Number"]},"description":"the given year","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"The passed date is invalid"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/eachWeekendOfYear"},"summary":"List all the Saturdays and Sundays in the year.","returns":[{"type":{"names":["Array.<Date>"]},"description":"an array containing all the Saturdays and Sundays"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given year","name":"date"}],"generatedFrom":"eachWeekendOfYear","relatedDocs":{"default":"eachWeekendOfYear","fp":"fp/eachWeekendOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var eachWeekendOfYear = require('date-fns/fp/eachWeekendOfYear')"},"es2015":{"title":"ES 2015","code":"import eachWeekendOfYear from 'date-fns/fp/eachWeekendOfYear'"},"esm":{"title":"ESM","code":"import { eachWeekendOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"eachWeekendOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"endOfYear","category":"Year Helpers","title":"endOfYear","description":"Return the end of a year for the given date.","content":{"id":"endOfYear","longname":"endOfYear","name":"endOfYear","kind":"member","scope":"global","description":"Return the end of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of a year for 2 September 2014 11:55:00:\nvar result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n//=> Wed Dec 31 2014 23:59:59.999"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfYear"},"summary":"Return the end of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfYear","fp":"fp/endOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfYear = require('date-fns/endOfYear')"},"es2015":{"title":"ES 2015","code":"import endOfYear from 'date-fns/endOfYear'"},"esm":{"title":"ESM","code":"import { endOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfYear","category":"Year Helpers","title":"endOfYear","description":"Return the end of a year for the given date.","content":{"id":"endOfYear","longname":"endOfYear","name":"endOfYear","kind":"member","scope":"global","description":"Return the end of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfYear"},"summary":"Return the end of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfYear","relatedDocs":{"default":"endOfYear","fp":"fp/endOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfYear = require('date-fns/fp/endOfYear')"},"es2015":{"title":"ES 2015","code":"import endOfYear from 'date-fns/fp/endOfYear'"},"esm":{"title":"ESM","code":"import { endOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"getDaysInYear","category":"Year Helpers","title":"getDaysInYear","description":"Get the number of days in a year of the given date.","content":{"id":"getDaysInYear","longname":"getDaysInYear","name":"getDaysInYear","kind":"member","scope":"global","description":"Get the number of days in a year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// How many days are in 2012?\nvar result = getDaysInYear(new Date(2012, 0, 1))\n//=> 366"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDaysInYear"},"summary":"Get the number of days in a year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of days in a year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDaysInYear","fp":"fp/getDaysInYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDaysInYear = require('date-fns/getDaysInYear')"},"es2015":{"title":"ES 2015","code":"import getDaysInYear from 'date-fns/getDaysInYear'"},"esm":{"title":"ESM","code":"import { getDaysInYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDaysInYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDaysInYear","category":"Year Helpers","title":"getDaysInYear","description":"Get the number of days in a year of the given date.","content":{"id":"getDaysInYear","longname":"getDaysInYear","name":"getDaysInYear","kind":"member","scope":"global","description":"Get the number of days in a year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDaysInYear"},"summary":"Get the number of days in a year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of days in a year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDaysInYear","relatedDocs":{"default":"getDaysInYear","fp":"fp/getDaysInYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDaysInYear = require('date-fns/fp/getDaysInYear')"},"es2015":{"title":"ES 2015","code":"import getDaysInYear from 'date-fns/fp/getDaysInYear'"},"esm":{"title":"ESM","code":"import { getDaysInYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDaysInYear(date)"},{"type":"jsdoc","kind":"function","urlId":"getYear","category":"Year Helpers","title":"getYear","description":"Get the year of the given date.","content":{"id":"getYear","longname":"getYear","name":"getYear","kind":"member","scope":"global","description":"Get the year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which year is 2 July 2014?\nvar result = getYear(new Date(2014, 6, 2))\n//=> 2014"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getYear"},"summary":"Get the year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getYear","fp":"fp/getYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getYear = require('date-fns/getYear')"},"es2015":{"title":"ES 2015","code":"import getYear from 'date-fns/getYear'"},"esm":{"title":"ESM","code":"import { getYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getYear","category":"Year Helpers","title":"getYear","description":"Get the year of the given date.","content":{"id":"getYear","longname":"getYear","name":"getYear","kind":"member","scope":"global","description":"Get the year of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getYear"},"summary":"Get the year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getYear","relatedDocs":{"default":"getYear","fp":"fp/getYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getYear = require('date-fns/fp/getYear')"},"es2015":{"title":"ES 2015","code":"import getYear from 'date-fns/fp/getYear'"},"esm":{"title":"ESM","code":"import { getYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getYear(date)"},{"type":"jsdoc","kind":"function","urlId":"isLeapYear","category":"Year Helpers","title":"isLeapYear","description":"Is the given date in the leap year?","content":{"id":"isLeapYear","longname":"isLeapYear","name":"isLeapYear","kind":"member","scope":"global","description":"Is the given date in the leap year?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// Is 1 September 2012 in the leap year?\nvar result = isLeapYear(new Date(2012, 8, 1))\n//=> true"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isLeapYear"},"summary":"Is the given date in the leap year?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in the leap year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isLeapYear","fp":"fp/isLeapYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isLeapYear = require('date-fns/isLeapYear')"},"es2015":{"title":"ES 2015","code":"import isLeapYear from 'date-fns/isLeapYear'"},"esm":{"title":"ESM","code":"import { isLeapYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isLeapYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/isLeapYear","category":"Year Helpers","title":"isLeapYear","description":"Is the given date in the leap year?","content":{"id":"isLeapYear","longname":"isLeapYear","name":"isLeapYear","kind":"member","scope":"global","description":"Is the given date in the leap year?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isLeapYear"},"summary":"Is the given date in the leap year?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in the leap year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"generatedFrom":"isLeapYear","relatedDocs":{"default":"isLeapYear","fp":"fp/isLeapYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isLeapYear = require('date-fns/fp/isLeapYear')"},"es2015":{"title":"ES 2015","code":"import isLeapYear from 'date-fns/fp/isLeapYear'"},"esm":{"title":"ESM","code":"import { isLeapYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isLeapYear(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameYear","category":"Year Helpers","title":"isSameYear","description":"Are the given dates in the same year?","content":{"id":"isSameYear","longname":"isSameYear","name":"isSameYear","kind":"member","scope":"global","description":"Are the given dates in the same year?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 2 September 2014 and 25 September 2014 in the same year?\nvar result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n//=> true"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameYear"},"summary":"Are the given dates in the same year?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameYear","fp":"fp/isSameYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameYear = require('date-fns/isSameYear')"},"es2015":{"title":"ES 2015","code":"import isSameYear from 'date-fns/isSameYear'"},"esm":{"title":"ESM","code":"import { isSameYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameYear(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameYear","category":"Year Helpers","title":"isSameYear","description":"Are the given dates in the same year?","content":{"id":"isSameYear","longname":"isSameYear","name":"isSameYear","kind":"member","scope":"global","description":"Are the given dates in the same year?\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameYear"},"summary":"Are the given dates in the same year?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameYear","relatedDocs":{"default":"isSameYear","fp":"fp/isSameYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameYear = require('date-fns/fp/isSameYear')"},"es2015":{"title":"ES 2015","code":"import isSameYear from 'date-fns/fp/isSameYear'"},"esm":{"title":"ESM","code":"import { isSameYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameYear(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"isThisYear","category":"Year Helpers","title":"isThisYear","description":"Is the given date in the same year as the current date?","content":{"id":"isThisYear","longname":"isThisYear","name":"isThisYear","kind":"member","scope":"global","description":"Is the given date in the same year as the current date?\n\n> ⚠️ Please note that this function is not present in the FP submodule as\n> it uses `Date.now()` internally hence impure and can't be safely curried.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"examples":["// If today is 25 September 2014, is 2 July 2014 in this year?\nvar result = isThisYear(new Date(2014, 6, 2))\n//=> true"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"customTags":[{"tag":"pure","value":"false"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isThisYear"},"summary":"Is the given date in the same year as the current date?","returns":[{"type":{"names":["Boolean"]},"description":"the date is in this year"}],"order":0},"pure":false,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to check","name":"date"}],"relatedDocs":{"default":"isThisYear","fp":"fp/isThisYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isThisYear = require('date-fns/isThisYear')"},"es2015":{"title":"ES 2015","code":"import isThisYear from 'date-fns/isThisYear'"},"esm":{"title":"ESM","code":"import { isThisYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isThisYear(date)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfYear","category":"Year Helpers","title":"lastDayOfYear","description":"Return the last day of a year for the given date.","content":{"id":"lastDayOfYear","longname":"lastDayOfYear","name":"lastDayOfYear","kind":"member","scope":"global","description":"Return the last day of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The last day of a year for 2 September 2014 11:55:00:\nvar result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n//=> Wed Dec 31 2014 00:00:00"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfYear"},"summary":"Return the last day of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"lastDayOfYear","fp":"fp/lastDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfYear = require('date-fns/lastDayOfYear')"},"es2015":{"title":"ES 2015","code":"import lastDayOfYear from 'date-fns/lastDayOfYear'"},"esm":{"title":"ESM","code":"import { lastDayOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfYear","category":"Year Helpers","title":"lastDayOfYear","description":"Return the last day of a year for the given date.","content":{"id":"lastDayOfYear","longname":"lastDayOfYear","name":"lastDayOfYear","kind":"member","scope":"global","description":"Return the last day of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfYear"},"summary":"Return the last day of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfYear","relatedDocs":{"default":"lastDayOfYear","fp":"fp/lastDayOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfYear = require('date-fns/fp/lastDayOfYear')"},"es2015":{"title":"ES 2015","code":"import lastDayOfYear from 'date-fns/fp/lastDayOfYear'"},"esm":{"title":"ESM","code":"import { lastDayOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"setYear","category":"Year Helpers","title":"setYear","description":"Set the year to the given date.","content":{"id":"setYear","longname":"setYear","name":"setYear","kind":"member","scope":"global","description":"Set the year to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the year of the new date","name":"year"}],"examples":["// Set year 2013 to 1 September 2014:\nvar result = setYear(new Date(2014, 8, 1), 2013)\n//=> Sun Sep 01 2013 00:00:00"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setYear"},"summary":"Set the year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the year set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the year of the new date","name":"year"}],"relatedDocs":{"default":"setYear","fp":"fp/setYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setYear = require('date-fns/setYear')"},"es2015":{"title":"ES 2015","code":"import setYear from 'date-fns/setYear'"},"esm":{"title":"ESM","code":"import { setYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setYear(date, year)"},{"type":"jsdoc","kind":"function","urlId":"fp/setYear","category":"Year Helpers","title":"setYear","description":"Set the year to the given date.","content":{"id":"setYear","longname":"setYear","name":"setYear","kind":"member","scope":"global","description":"Set the year to the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the year of the new date","name":"year"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setYear"},"summary":"Set the year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the year set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the year of the new date","name":"year"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setYear","relatedDocs":{"default":"setYear","fp":"fp/setYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setYear = require('date-fns/fp/setYear')"},"es2015":{"title":"ES 2015","code":"import setYear from 'date-fns/fp/setYear'"},"esm":{"title":"ESM","code":"import { setYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setYear(year)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfYear","category":"Year Helpers","title":"startOfYear","description":"Return the start of a year for the given date.","content":{"id":"startOfYear","longname":"startOfYear","name":"startOfYear","kind":"member","scope":"global","description":"Return the start of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a year for 2 September 2014 11:55:00:\nvar result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n//=> Wed Jan 01 2014 00:00:00"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfYear"},"summary":"Return the start of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfYear","fp":"fp/startOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfYear = require('date-fns/startOfYear')"},"es2015":{"title":"ES 2015","code":"import startOfYear from 'date-fns/startOfYear'"},"esm":{"title":"ESM","code":"import { startOfYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfYear","category":"Year Helpers","title":"startOfYear","description":"Return the start of a year for the given date.","content":{"id":"startOfYear","longname":"startOfYear","name":"startOfYear","kind":"member","scope":"global","description":"Return the start of a year for the given date.\nThe result will be in the local timezone.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfYear"},"summary":"Return the start of a year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfYear","relatedDocs":{"default":"startOfYear","fp":"fp/startOfYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfYear = require('date-fns/fp/startOfYear')"},"es2015":{"title":"ES 2015","code":"import startOfYear from 'date-fns/fp/startOfYear'"},"esm":{"title":"ESM","code":"import { startOfYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfYear(date)"},{"type":"jsdoc","kind":"function","urlId":"subYears","category":"Year Helpers","title":"subYears","description":"Subtract the specified number of years from the given date.","content":{"id":"subYears","longname":"subYears","name":"subYears","kind":"member","scope":"global","description":"Subtract the specified number of years from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 5 years from 1 September 2014:\nvar result = subYears(new Date(2014, 8, 1), 5)\n//=> Tue Sep 01 2009 00:00:00"],"category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subYears"},"summary":"Subtract the specified number of years from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the years subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subYears","fp":"fp/subYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var subYears = require('date-fns/subYears')"},"es2015":{"title":"ES 2015","code":"import subYears from 'date-fns/subYears'"},"esm":{"title":"ESM","code":"import { subYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subYears(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subYears","category":"Year Helpers","title":"subYears","description":"Subtract the specified number of years from the given date.","content":{"id":"subYears","longname":"subYears","name":"subYears","kind":"member","scope":"global","description":"Subtract the specified number of years from the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subYears"},"summary":"Subtract the specified number of years from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the years subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subYears","relatedDocs":{"default":"subYears","fp":"fp/subYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var subYears = require('date-fns/fp/subYears')"},"es2015":{"title":"ES 2015","code":"import subYears from 'date-fns/fp/subYears'"},"esm":{"title":"ESM","code":"import { subYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subYears(amount)(date)"}],"ISO Week-Numbering Year Helpers":[{"type":"jsdoc","kind":"function","urlId":"addISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"addISOWeekYears","description":"Add the specified number of ISO week-numbering years to the given date.","content":{"id":"addISOWeekYears","longname":"addISOWeekYears","name":"addISOWeekYears","kind":"member","scope":"global","description":"Add the specified number of ISO week-numbering years to the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `addISOYears` to `addISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Add 5 ISO week-numbering years to 2 July 2010:\nvar result = addISOWeekYears(new Date(2010, 6, 2), 5)\n//=> Fri Jun 26 2015 00:00:00"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addISOWeekYears"},"summary":"Add the specified number of ISO week-numbering years to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering years added"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"addISOWeekYears","fp":"fp/addISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var addISOWeekYears = require('date-fns/addISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import addISOWeekYears from 'date-fns/addISOWeekYears'"},"esm":{"title":"ESM","code":"import { addISOWeekYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"addISOWeekYears(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/addISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"addISOWeekYears","description":"Add the specified number of ISO week-numbering years to the given date.","content":{"id":"addISOWeekYears","longname":"addISOWeekYears","name":"addISOWeekYears","kind":"member","scope":"global","description":"Add the specified number of ISO week-numbering years to the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `addISOYears` to `addISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/addISOWeekYears"},"summary":"Add the specified number of ISO week-numbering years to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering years added"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"addISOWeekYears","relatedDocs":{"default":"addISOWeekYears","fp":"fp/addISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var addISOWeekYears = require('date-fns/fp/addISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import addISOWeekYears from 'date-fns/fp/addISOWeekYears'"},"esm":{"title":"ESM","code":"import { addISOWeekYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"addISOWeekYears(amount)(date)"},{"type":"jsdoc","kind":"function","urlId":"differenceInCalendarISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"differenceInCalendarISOWeekYears","description":"Get the number of calendar ISO week-numbering years between the given dates.","content":{"id":"differenceInCalendarISOWeekYears","longname":"differenceInCalendarISOWeekYears","name":"differenceInCalendarISOWeekYears","kind":"member","scope":"global","description":"Get the number of calendar ISO week-numbering years between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\nvar result = differenceInCalendarISOWeekYears(\n  new Date(2012, 0, 1),\n  new Date(2010, 0, 1)\n)\n//=> 2"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarISOWeekYears"},"summary":"Get the number of calendar ISO week-numbering years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar ISO week-numbering years"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInCalendarISOWeekYears","fp":"fp/differenceInCalendarISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarISOWeekYears = require('date-fns/differenceInCalendarISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarISOWeekYears from 'date-fns/differenceInCalendarISOWeekYears'"},"esm":{"title":"ESM","code":"import { differenceInCalendarISOWeekYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInCalendarISOWeekYears(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInCalendarISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"differenceInCalendarISOWeekYears","description":"Get the number of calendar ISO week-numbering years between the given dates.","content":{"id":"differenceInCalendarISOWeekYears","longname":"differenceInCalendarISOWeekYears","name":"differenceInCalendarISOWeekYears","kind":"member","scope":"global","description":"Get the number of calendar ISO week-numbering years between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInCalendarISOWeekYears"},"summary":"Get the number of calendar ISO week-numbering years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of calendar ISO week-numbering years"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInCalendarISOWeekYears","relatedDocs":{"default":"differenceInCalendarISOWeekYears","fp":"fp/differenceInCalendarISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInCalendarISOWeekYears = require('date-fns/fp/differenceInCalendarISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import differenceInCalendarISOWeekYears from 'date-fns/fp/differenceInCalendarISOWeekYears'"},"esm":{"title":"ESM","code":"import { differenceInCalendarISOWeekYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInCalendarISOWeekYears(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"differenceInISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"differenceInISOWeekYears","description":"Get the number of full ISO week-numbering years between the given dates.","content":{"id":"differenceInISOWeekYears","longname":"differenceInISOWeekYears","name":"differenceInISOWeekYears","kind":"member","scope":"global","description":"Get the number of full ISO week-numbering years between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"examples":["// How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\nvar result = differenceInISOWeekYears(\n  new Date(2012, 0, 1),\n  new Date(2010, 0, 1)\n)\n//=> 1"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInISOWeekYears"},"summary":"Get the number of full ISO week-numbering years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full ISO week-numbering years"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"}],"relatedDocs":{"default":"differenceInISOWeekYears","fp":"fp/differenceInISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInISOWeekYears = require('date-fns/differenceInISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import differenceInISOWeekYears from 'date-fns/differenceInISOWeekYears'"},"esm":{"title":"ESM","code":"import { differenceInISOWeekYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"differenceInISOWeekYears(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/differenceInISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"differenceInISOWeekYears","description":"Get the number of full ISO week-numbering years between the given dates.","content":{"id":"differenceInISOWeekYears","longname":"differenceInISOWeekYears","name":"differenceInISOWeekYears","kind":"member","scope":"global","description":"Get the number of full ISO week-numbering years between the given dates.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/differenceInISOWeekYears"},"summary":"Get the number of full ISO week-numbering years between the given dates.","returns":[{"type":{"names":["Number"]},"description":"the number of full ISO week-numbering years"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the earlier date","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the later date","name":"dateLeft"}],"generatedFrom":"differenceInISOWeekYears","relatedDocs":{"default":"differenceInISOWeekYears","fp":"fp/differenceInISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var differenceInISOWeekYears = require('date-fns/fp/differenceInISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import differenceInISOWeekYears from 'date-fns/fp/differenceInISOWeekYears'"},"esm":{"title":"ESM","code":"import { differenceInISOWeekYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"differenceInISOWeekYears(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"endOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"endOfISOWeekYear","description":"Return the end of an ISO week-numbering year for the given date.","content":{"id":"endOfISOWeekYear","longname":"endOfISOWeekYear","name":"endOfISOWeekYear","kind":"member","scope":"global","description":"Return the end of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The end of an ISO week-numbering year for 2 July 2005:\nvar result = endOfISOWeekYear(new Date(2005, 6, 2))\n//=> Sun Jan 01 2006 23:59:59.999"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfISOWeekYear"},"summary":"Return the end of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"endOfISOWeekYear","fp":"fp/endOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfISOWeekYear = require('date-fns/endOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import endOfISOWeekYear from 'date-fns/endOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { endOfISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"endOfISOWeekYear","description":"Return the end of an ISO week-numbering year for the given date.","content":{"id":"endOfISOWeekYear","longname":"endOfISOWeekYear","name":"endOfISOWeekYear","kind":"member","scope":"global","description":"Return the end of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `addWeekYears`.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfISOWeekYear"},"summary":"Return the end of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfISOWeekYear","relatedDocs":{"default":"endOfISOWeekYear","fp":"fp/endOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfISOWeekYear = require('date-fns/fp/endOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import endOfISOWeekYear from 'date-fns/fp/endOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { endOfISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"getISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"getISOWeekYear","description":"Get the ISO week-numbering year of the given date.","content":{"id":"getISOWeekYear","longname":"getISOWeekYear","name":"getISOWeekYear","kind":"member","scope":"global","description":"Get the ISO week-numbering year of the given date,\nwhich always starts 3 days before the year's first Thursday.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `getISOYear` to `getISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which ISO-week numbering year is 2 January 2005?\nvar result = getISOWeekYear(new Date(2005, 0, 2))\n//=> 2004"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeekYear"},"summary":"Get the ISO week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getISOWeekYear","fp":"fp/getISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeekYear = require('date-fns/getISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import getISOWeekYear from 'date-fns/getISOWeekYear'"},"esm":{"title":"ESM","code":"import { getISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"getISOWeekYear","description":"Get the ISO week-numbering year of the given date.","content":{"id":"getISOWeekYear","longname":"getISOWeekYear","name":"getISOWeekYear","kind":"member","scope":"global","description":"Get the ISO week-numbering year of the given date,\nwhich always starts 3 days before the year's first Thursday.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `getISOYear` to `getISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeekYear"},"summary":"Get the ISO week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getISOWeekYear","relatedDocs":{"default":"getISOWeekYear","fp":"fp/getISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeekYear = require('date-fns/fp/getISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import getISOWeekYear from 'date-fns/fp/getISOWeekYear'"},"esm":{"title":"ESM","code":"import { getISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"getISOWeeksInYear","category":"ISO Week-Numbering Year Helpers","title":"getISOWeeksInYear","description":"Get the number of weeks in an ISO week-numbering year of the given date.","content":{"id":"getISOWeeksInYear","longname":"getISOWeeksInYear","name":"getISOWeeksInYear","kind":"member","scope":"global","description":"Get the number of weeks in an ISO week-numbering year of the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// How many weeks are in ISO week-numbering year 2015?\nvar result = getISOWeeksInYear(new Date(2015, 1, 11))\n//=> 53"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeeksInYear"},"summary":"Get the number of weeks in an ISO week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of ISO weeks in a year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getISOWeeksInYear","fp":"fp/getISOWeeksInYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeeksInYear = require('date-fns/getISOWeeksInYear')"},"es2015":{"title":"ES 2015","code":"import getISOWeeksInYear from 'date-fns/getISOWeeksInYear'"},"esm":{"title":"ESM","code":"import { getISOWeeksInYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getISOWeeksInYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getISOWeeksInYear","category":"ISO Week-Numbering Year Helpers","title":"getISOWeeksInYear","description":"Get the number of weeks in an ISO week-numbering year of the given date.","content":{"id":"getISOWeeksInYear","longname":"getISOWeeksInYear","name":"getISOWeeksInYear","kind":"member","scope":"global","description":"Get the number of weeks in an ISO week-numbering year of the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getISOWeeksInYear"},"summary":"Get the number of weeks in an ISO week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the number of ISO weeks in a year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getISOWeeksInYear","relatedDocs":{"default":"getISOWeeksInYear","fp":"fp/getISOWeeksInYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getISOWeeksInYear = require('date-fns/fp/getISOWeeksInYear')"},"es2015":{"title":"ES 2015","code":"import getISOWeeksInYear from 'date-fns/fp/getISOWeeksInYear'"},"esm":{"title":"ESM","code":"import { getISOWeeksInYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getISOWeeksInYear(date)"},{"type":"jsdoc","kind":"function","urlId":"isSameISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"isSameISOWeekYear","description":"Are the given dates in the same ISO week-numbering year?","content":{"id":"isSameISOWeekYear","longname":"isSameISOWeekYear","name":"isSameISOWeekYear","kind":"member","scope":"global","description":"Are the given dates in the same ISO week-numbering year?\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"examples":["// Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\nvar result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n//=> true"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameISOWeekYear"},"summary":"Are the given dates in the same ISO week-numbering year?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"},{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"}],"relatedDocs":{"default":"isSameISOWeekYear","fp":"fp/isSameISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameISOWeekYear = require('date-fns/isSameISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import isSameISOWeekYear from 'date-fns/isSameISOWeekYear'"},"esm":{"title":"ESM","code":"import { isSameISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"isSameISOWeekYear(dateLeft, dateRight)"},{"type":"jsdoc","kind":"function","urlId":"fp/isSameISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"isSameISOWeekYear","description":"Are the given dates in the same ISO week-numbering year?","content":{"id":"isSameISOWeekYear","longname":"isSameISOWeekYear","name":"isSameISOWeekYear","kind":"member","scope":"global","description":"Are the given dates in the same ISO week-numbering year?\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/isSameISOWeekYear"},"summary":"Are the given dates in the same ISO week-numbering year?","returns":[{"type":{"names":["Boolean"]},"description":"the dates are in the same ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the second date to check","name":"dateRight"},{"type":{"names":["Date","Number"]},"description":"the first date to check","name":"dateLeft"}],"generatedFrom":"isSameISOWeekYear","relatedDocs":{"default":"isSameISOWeekYear","fp":"fp/isSameISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var isSameISOWeekYear = require('date-fns/fp/isSameISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import isSameISOWeekYear from 'date-fns/fp/isSameISOWeekYear'"},"esm":{"title":"ESM","code":"import { isSameISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"isSameISOWeekYear(dateRight)(dateLeft)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"lastDayOfISOWeekYear","description":"Return the last day of an ISO week-numbering year for the given date.","content":{"id":"lastDayOfISOWeekYear","longname":"lastDayOfISOWeekYear","name":"lastDayOfISOWeekYear","kind":"member","scope":"global","description":"Return the last day of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The last day of an ISO week-numbering year for 2 July 2005:\nvar result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n//=> Sun Jan 01 2006 00:00:00"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfISOWeekYear"},"summary":"Return the last day of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"lastDayOfISOWeekYear","fp":"fp/lastDayOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfISOWeekYear = require('date-fns/lastDayOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import lastDayOfISOWeekYear from 'date-fns/lastDayOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { lastDayOfISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"lastDayOfISOWeekYear","description":"Return the last day of an ISO week-numbering year for the given date.","content":{"id":"lastDayOfISOWeekYear","longname":"lastDayOfISOWeekYear","name":"lastDayOfISOWeekYear","kind":"member","scope":"global","description":"Return the last day of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `getWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfISOWeekYear"},"summary":"Return the last day of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfISOWeekYear","relatedDocs":{"default":"lastDayOfISOWeekYear","fp":"fp/lastDayOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfISOWeekYear = require('date-fns/fp/lastDayOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import lastDayOfISOWeekYear from 'date-fns/fp/lastDayOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { lastDayOfISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"setISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"setISOWeekYear","description":"Set the ISO week-numbering year to the given date.","content":{"id":"setISOWeekYear","longname":"setISOWeekYear","name":"setISOWeekYear","kind":"member","scope":"global","description":"Set the ISO week-numbering year to the given date,\nsaving the week number and the weekday number.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `setISOYear` to `setISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `setWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the ISO week-numbering year of the new date","name":"isoWeekYear"}],"examples":["// Set ISO week-numbering year 2007 to 29 December 2008:\nvar result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n//=> Mon Jan 01 2007 00:00:00"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISOWeekYear"},"summary":"Set the ISO week-numbering year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering year set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the ISO week-numbering year of the new date","name":"isoWeekYear"}],"relatedDocs":{"default":"setISOWeekYear","fp":"fp/setISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISOWeekYear = require('date-fns/setISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import setISOWeekYear from 'date-fns/setISOWeekYear'"},"esm":{"title":"ESM","code":"import { setISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setISOWeekYear(date, isoWeekYear)"},{"type":"jsdoc","kind":"function","urlId":"fp/setISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"setISOWeekYear","description":"Set the ISO week-numbering year to the given date.","content":{"id":"setISOWeekYear","longname":"setISOWeekYear","name":"setISOWeekYear","kind":"member","scope":"global","description":"Set the ISO week-numbering year to the given date,\nsaving the week number and the weekday number.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `setISOYear` to `setISOWeekYear`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `setWeekYear`.","params":[{"type":{"names":["Number"]},"description":"the ISO week-numbering year of the new date","name":"isoWeekYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setISOWeekYear"},"summary":"Set the ISO week-numbering year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering year set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the ISO week-numbering year of the new date","name":"isoWeekYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setISOWeekYear","relatedDocs":{"default":"setISOWeekYear","fp":"fp/setISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setISOWeekYear = require('date-fns/fp/setISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import setISOWeekYear from 'date-fns/fp/setISOWeekYear'"},"esm":{"title":"ESM","code":"import { setISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setISOWeekYear(isoWeekYear)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"startOfISOWeekYear","description":"Return the start of an ISO week-numbering year for the given date.","content":{"id":"startOfISOWeekYear","longname":"startOfISOWeekYear","name":"startOfISOWeekYear","kind":"member","scope":"global","description":"Return the start of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of an ISO week-numbering year for 2 July 2005:\nvar result = startOfISOWeekYear(new Date(2005, 6, 2))\n//=> Mon Jan 03 2005 00:00:00"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfISOWeekYear"},"summary":"Return the start of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfISOWeekYear","fp":"fp/startOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfISOWeekYear = require('date-fns/startOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import startOfISOWeekYear from 'date-fns/startOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { startOfISOWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfISOWeekYear","category":"ISO Week-Numbering Year Helpers","title":"startOfISOWeekYear","description":"Return the start of an ISO week-numbering year for the given date.","content":{"id":"startOfISOWeekYear","longname":"startOfISOWeekYear","name":"startOfISOWeekYear","kind":"member","scope":"global","description":"Return the start of an ISO week-numbering year,\nwhich always starts 3 days before the year's first Thursday.\nThe result will be in the local timezone.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfISOWeekYear"},"summary":"Return the start of an ISO week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of an ISO week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfISOWeekYear","relatedDocs":{"default":"startOfISOWeekYear","fp":"fp/startOfISOWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfISOWeekYear = require('date-fns/fp/startOfISOWeekYear')"},"es2015":{"title":"ES 2015","code":"import startOfISOWeekYear from 'date-fns/fp/startOfISOWeekYear'"},"esm":{"title":"ESM","code":"import { startOfISOWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfISOWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"subISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"subISOWeekYears","description":"Subtract the specified number of ISO week-numbering years from the given date.","content":{"id":"subISOWeekYears","longname":"subISOWeekYears","name":"subISOWeekYears","kind":"member","scope":"global","description":"Subtract the specified number of ISO week-numbering years from the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `subISOYears` to `subISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `setWeekYear`.","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"examples":["// Subtract 5 ISO week-numbering years from 1 September 2014:\nvar result = subISOWeekYears(new Date(2014, 8, 1), 5)\n//=> Mon Aug 31 2009 00:00:00"],"category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subISOWeekYears"},"summary":"Subtract the specified number of ISO week-numbering years from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering years subtracted"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"}],"relatedDocs":{"default":"subISOWeekYears","fp":"fp/subISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var subISOWeekYears = require('date-fns/subISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import subISOWeekYears from 'date-fns/subISOWeekYears'"},"esm":{"title":"ESM","code":"import { subISOWeekYears } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"subISOWeekYears(date, amount)"},{"type":"jsdoc","kind":"function","urlId":"fp/subISOWeekYears","category":"ISO Week-Numbering Year Helpers","title":"subISOWeekYears","description":"Subtract the specified number of ISO week-numbering years from the given date.","content":{"id":"subISOWeekYears","longname":"subISOWeekYears","name":"subISOWeekYears","kind":"member","scope":"global","description":"Subtract the specified number of ISO week-numbering years from the given date.\n\nISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n\n- The function was renamed from `subISOYears` to `subISOWeekYears`.\n  \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n  This change makes the name consistent with\n  locale-dependent week-numbering year helpers, e.g., `setWeekYear`.","params":[{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"ISO Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":5,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/subISOWeekYears"},"summary":"Subtract the specified number of ISO week-numbering years from the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the ISO week-numbering years subtracted"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.","name":"amount"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"subISOWeekYears","relatedDocs":{"default":"subISOWeekYears","fp":"fp/subISOWeekYears"},"usage":{"commonjs":{"title":"CommonJS","code":"var subISOWeekYears = require('date-fns/fp/subISOWeekYears')"},"es2015":{"title":"ES 2015","code":"import subISOWeekYears from 'date-fns/fp/subISOWeekYears'"},"esm":{"title":"ESM","code":"import { subISOWeekYears } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"subISOWeekYears(amount)(date)"}],"Decade Helpers":[{"type":"jsdoc","kind":"function","urlId":"endOfDecade","category":"Decade Helpers","title":"endOfDecade","description":"Return the end of a decade for the given date.","content":{"id":"endOfDecade","longname":"endOfDecade","name":"endOfDecade","kind":"member","scope":"global","description":"Return the end of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"options.additionalDigits"}],"examples":["// The end of a decade for 12 May 1984 00:00:00:\nvar result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n//=> Dec 31 1989 23:59:59.999"],"category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfDecade"},"summary":"Return the end of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a decade"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"additionalDigits","isProperty":true}]}],"relatedDocs":{"default":"endOfDecade","fp":"fp/endOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfDecade = require('date-fns/endOfDecade')"},"es2015":{"title":"ES 2015","code":"import endOfDecade from 'date-fns/endOfDecade'"},"esm":{"title":"ESM","code":"import { endOfDecade } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"endOfDecade(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfDecade","category":"Decade Helpers","title":"endOfDecade","description":"Return the end of a decade for the given date.","content":{"id":"endOfDecade","longname":"endOfDecade","name":"endOfDecade","kind":"member","scope":"global","description":"Return the end of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfDecade"},"summary":"Return the end of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a decade"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"endOfDecade","relatedDocs":{"default":"endOfDecade","fp":"fp/endOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfDecade = require('date-fns/fp/endOfDecade')"},"es2015":{"title":"ES 2015","code":"import endOfDecade from 'date-fns/fp/endOfDecade'"},"esm":{"title":"ESM","code":"import { endOfDecade } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/endOfDecadeWithOptions","category":"Decade Helpers","title":"endOfDecadeWithOptions","description":"Return the end of a decade for the given date.","content":{"id":"endOfDecadeWithOptions","longname":"endOfDecadeWithOptions","name":"endOfDecadeWithOptions","kind":"member","scope":"global","description":"Return the end of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"options.additionalDigits"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.additionalDigits` must be 0, 1 or 2"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/endOfDecade"},"summary":"Return the end of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the end of a decade"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["0","1","2"]},"optional":true,"defaultvalue":2,"description":"passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}","name":"additionalDigits","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"endOfDecade","relatedDocs":{"default":"endOfDecade","fp":"fp/endOfDecade","fpWithOptions":"fp/endOfDecadeWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var endOfDecade = require('date-fns/fp/endOfDecade')"},"es2015":{"title":"ES 2015","code":"import endOfDecade from 'date-fns/fp/endOfDecade'"},"esm":{"title":"ESM","code":"import { endOfDecade } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"endOfDecade(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"getDecade","category":"Decade Helpers","title":"getDecade","description":"Get the decade of the given date.","content":{"id":"getDecade","longname":"getDecade","name":"getDecade","kind":"member","scope":"global","description":"Get the decade of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":["// Which decade belongs 27 November 1942?\nvar result = getDecade(new Date(1942, 10, 27))\n//=> 1940"],"category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDecade"},"summary":"Get the decade of the given date.","returns":[{"type":{"names":["Number"]},"description":"the year of decade"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"relatedDocs":{"default":"getDecade","fp":"fp/getDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDecade = require('date-fns/getDecade')"},"es2015":{"title":"ES 2015","code":"import getDecade from 'date-fns/getDecade'"},"esm":{"title":"ESM","code":"import { getDecade } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getDecade","category":"Decade Helpers","title":"getDecade","description":"Get the decade of the given date.","content":{"id":"getDecade","longname":"getDecade","name":"getDecade","kind":"member","scope":"global","description":"Get the decade of the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getDecade"},"summary":"Get the decade of the given date.","returns":[{"type":{"names":["Number"]},"description":"the year of decade"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getDecade","relatedDocs":{"default":"getDecade","fp":"fp/getDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var getDecade = require('date-fns/fp/getDecade')"},"es2015":{"title":"ES 2015","code":"import getDecade from 'date-fns/fp/getDecade'"},"esm":{"title":"ESM","code":"import { getDecade } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"lastDayOfDecade","category":"Decade Helpers","title":"lastDayOfDecade","description":"Return the last day of a decade for the given date.","content":{"id":"lastDayOfDecade","longname":"lastDayOfDecade","name":"lastDayOfDecade","kind":"member","scope":"global","description":"Return the last day of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The last day of a decade for 21 December 2012 21:12:00:\nvar result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n//=> Wed Dec 31 2019 00:00:00"],"category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfDecade"},"summary":"Return the last day of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a decade"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"lastDayOfDecade","fp":"fp/lastDayOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfDecade = require('date-fns/lastDayOfDecade')"},"es2015":{"title":"ES 2015","code":"import lastDayOfDecade from 'date-fns/lastDayOfDecade'"},"esm":{"title":"ESM","code":"import { lastDayOfDecade } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"lastDayOfDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/lastDayOfDecade","category":"Decade Helpers","title":"lastDayOfDecade","description":"Return the last day of a decade for the given date.","content":{"id":"lastDayOfDecade","longname":"lastDayOfDecade","name":"lastDayOfDecade","kind":"member","scope":"global","description":"Return the last day of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/lastDayOfDecade"},"summary":"Return the last day of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the last day of a decade"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"lastDayOfDecade","relatedDocs":{"default":"lastDayOfDecade","fp":"fp/lastDayOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var lastDayOfDecade = require('date-fns/fp/lastDayOfDecade')"},"es2015":{"title":"ES 2015","code":"import lastDayOfDecade from 'date-fns/fp/lastDayOfDecade'"},"esm":{"title":"ESM","code":"import { lastDayOfDecade } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"lastDayOfDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfDecade","category":"Decade Helpers","title":"startOfDecade","description":"Return the start of a decade for the given date.","content":{"id":"startOfDecade","longname":"startOfDecade","name":"startOfDecade","kind":"member","scope":"global","description":"Return the start of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":["// The start of a decade for 21 October 2015 00:00:00:\nvar result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n//=> Jan 01 2010 00:00:00"],"category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfDecade"},"summary":"Return the start of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a decade"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"relatedDocs":{"default":"startOfDecade","fp":"fp/startOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfDecade = require('date-fns/startOfDecade')"},"es2015":{"title":"ES 2015","code":"import startOfDecade from 'date-fns/startOfDecade'"},"esm":{"title":"ESM","code":"import { startOfDecade } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfDecade(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfDecade","category":"Decade Helpers","title":"startOfDecade","description":"Return the start of a decade for the given date.","content":{"id":"startOfDecade","longname":"startOfDecade","name":"startOfDecade","kind":"member","scope":"global","description":"Return the start of a decade for the given date.\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Decade Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":4,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfDecade"},"summary":"Return the start of a decade for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a decade"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfDecade","relatedDocs":{"default":"startOfDecade","fp":"fp/startOfDecade"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfDecade = require('date-fns/fp/startOfDecade')"},"es2015":{"title":"ES 2015","code":"import startOfDecade from 'date-fns/fp/startOfDecade'"},"esm":{"title":"ESM","code":"import { startOfDecade } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfDecade(date)"}],"Week-Numbering Year Helpers":[{"type":"jsdoc","kind":"function","urlId":"getWeekYear","category":"Week-Numbering Year Helpers","title":"getWeekYear","description":"Get the local week-numbering year of the given date.","content":{"id":"getWeekYear","longname":"getWeekYear","name":"getWeekYear","kind":"member","scope":"global","description":"Get the local week-numbering year of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"}],"examples":["// Which week numbering year is 26 December 2004 with the default settings?\nvar result = getWeekYear(new Date(2004, 11, 26))\n//=> 2005","// Which week numbering year is 26 December 2004 if week starts on Saturday?\nvar result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n//=> 2004","// Which week numbering year is 26 December 2004 if the first week contains 4 January?\nvar result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n//=> 2004"],"category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekYear"},"summary":"Get the local week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the local week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true}]}],"relatedDocs":{"default":"getWeekYear","fp":"fp/getWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekYear = require('date-fns/getWeekYear')"},"es2015":{"title":"ES 2015","code":"import getWeekYear from 'date-fns/getWeekYear'"},"esm":{"title":"ESM","code":"import { getWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"getWeekYear(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeekYear","category":"Week-Numbering Year Helpers","title":"getWeekYear","description":"Get the local week-numbering year of the given date.","content":{"id":"getWeekYear","longname":"getWeekYear","name":"getWeekYear","kind":"member","scope":"global","description":"Get the local week-numbering year of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekYear"},"summary":"Get the local week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the local week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the given date","name":"date"}],"generatedFrom":"getWeekYear","relatedDocs":{"default":"getWeekYear","fp":"fp/getWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekYear = require('date-fns/fp/getWeekYear')"},"es2015":{"title":"ES 2015","code":"import getWeekYear from 'date-fns/fp/getWeekYear'"},"esm":{"title":"ESM","code":"import { getWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/getWeekYearWithOptions","category":"Week-Numbering Year Helpers","title":"getWeekYearWithOptions","description":"Get the local week-numbering year of the given date.","content":{"id":"getWeekYearWithOptions","longname":"getWeekYearWithOptions","name":"getWeekYearWithOptions","kind":"member","scope":"global","description":"Get the local week-numbering year of the given date.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/getWeekYear"},"summary":"Get the local week-numbering year of the given date.","returns":[{"type":{"names":["Number"]},"description":"the local week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the given date","name":"date","optional":false}],"generatedFrom":"getWeekYear","relatedDocs":{"default":"getWeekYear","fp":"fp/getWeekYear","fpWithOptions":"fp/getWeekYearWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var getWeekYear = require('date-fns/fp/getWeekYear')"},"es2015":{"title":"ES 2015","code":"import getWeekYear from 'date-fns/fp/getWeekYear'"},"esm":{"title":"ESM","code":"import { getWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"getWeekYear(options)(date)"},{"type":"jsdoc","kind":"function","urlId":"setWeekYear","category":"Week-Numbering Year Helpers","title":"setWeekYear","description":"Set the local week-numbering year to the given date.","content":{"id":"setWeekYear","longname":"setWeekYear","name":"setWeekYear","kind":"member","scope":"global","description":"Set the local week-numbering year to the given date,\nsaving the week number and the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"}],"examples":["// Set the local week-numbering year 2004 to 2 January 2010 with default options:\nvar result = setWeekYear(new Date(2010, 0, 2), 2004)\n//=> Sat Jan 03 2004 00:00:00","// Set the local week-numbering year 2004 to 2 January 2010,\n// if Monday is the first day of week\n// and 4 January is always in the first week of the year:\nvar result = setWeekYear(new Date(2010, 0, 2), 2004, {\n  weekStartsOn: 1,\n  firstWeekContainsDate: 4\n})\n//=> Sat Jan 01 2005 00:00:00"],"category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeekYear"},"summary":"Set the local week-numbering year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week-numbering year set"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"},{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true}]}],"relatedDocs":{"default":"setWeekYear","fp":"fp/setWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeekYear = require('date-fns/setWeekYear')"},"es2015":{"title":"ES 2015","code":"import setWeekYear from 'date-fns/setWeekYear'"},"esm":{"title":"ESM","code":"import { setWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"setWeekYear(date, weekYear, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/setWeekYear","category":"Week-Numbering Year Helpers","title":"setWeekYear","description":"Set the local week-numbering year to the given date.","content":{"id":"setWeekYear","longname":"setWeekYear","name":"setWeekYear","kind":"member","scope":"global","description":"Set the local week-numbering year to the given date,\nsaving the week number and the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeekYear"},"summary":"Set the local week-numbering year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week-numbering year set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear"},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date"}],"generatedFrom":"setWeekYear","relatedDocs":{"default":"setWeekYear","fp":"fp/setWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeekYear = require('date-fns/fp/setWeekYear')"},"es2015":{"title":"ES 2015","code":"import setWeekYear from 'date-fns/fp/setWeekYear'"},"esm":{"title":"ESM","code":"import { setWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setWeekYear(weekYear)(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/setWeekYearWithOptions","category":"Week-Numbering Year Helpers","title":"setWeekYearWithOptions","description":"Set the local week-numbering year to the given date.","content":{"id":"setWeekYearWithOptions","longname":"setWeekYearWithOptions","name":"setWeekYearWithOptions","kind":"member","scope":"global","description":"Set the local week-numbering year to the given date,\nsaving the week number and the weekday number.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"2 arguments required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":7,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/setWeekYear"},"summary":"Set the local week-numbering year to the given date.","returns":[{"type":{"names":["Date"]},"description":"the new date with the local week-numbering year set"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Number"]},"description":"the local week-numbering year of the new date","name":"weekYear","optional":false},{"type":{"names":["Date","Number"]},"description":"the date to be changed","name":"date","optional":false}],"generatedFrom":"setWeekYear","relatedDocs":{"default":"setWeekYear","fp":"fp/setWeekYear","fpWithOptions":"fp/setWeekYearWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var setWeekYear = require('date-fns/fp/setWeekYear')"},"es2015":{"title":"ES 2015","code":"import setWeekYear from 'date-fns/fp/setWeekYear'"},"esm":{"title":"ESM","code":"import { setWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"setWeekYear(options)(weekYear)(date)"},{"type":"jsdoc","kind":"function","urlId":"startOfWeekYear","category":"Week-Numbering Year Helpers","title":"startOfWeekYear","description":"Return the start of a local week-numbering year for the given date.","content":{"id":"startOfWeekYear","longname":"startOfWeekYear","name":"startOfWeekYear","kind":"member","scope":"global","description":"Return the start of a local week-numbering year.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"}],"examples":["// The start of an a week-numbering year for 2 July 2005 with default settings:\nvar result = startOfWeekYear(new Date(2005, 6, 2))\n//=> Sun Dec 26 2004 00:00:00","// The start of a week-numbering year for 2 July 2005\n// if Monday is the first day of week\n// and 4 January is always in the first week of the year:\nvar result = startOfWeekYear(new Date(2005, 6, 2), {\n  weekStartsOn: 1,\n  firstWeekContainsDate: 4\n})\n//=> Mon Jan 03 2005 00:00:00"],"category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeekYear"},"summary":"Return the start of a local week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week-numbering year"}],"order":0},"pure":true,"isFPFn":false,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"},{"type":{"names":["Object"]},"optional":true,"description":"an object with options.","name":"options","props":[{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true}]}],"relatedDocs":{"default":"startOfWeekYear","fp":"fp/startOfWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeekYear = require('date-fns/startOfWeekYear')"},"es2015":{"title":"ES 2015","code":"import startOfWeekYear from 'date-fns/startOfWeekYear'"},"esm":{"title":"ESM","code":"import { startOfWeekYear } from 'date-fns'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","umd","es2015","esm"],"syntax":"startOfWeekYear(date, [options])"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfWeekYear","category":"Week-Numbering Year Helpers","title":"startOfWeekYear","description":"Return the start of a local week-numbering year for the given date.","content":{"id":"startOfWeekYear","longname":"startOfWeekYear","name":"startOfWeekYear","kind":"member","scope":"global","description":"Return the start of a local week-numbering year.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeekYear"},"summary":"Return the start of a local week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Date","Number"]},"description":"the original date","name":"date"}],"generatedFrom":"startOfWeekYear","relatedDocs":{"default":"startOfWeekYear","fp":"fp/startOfWeekYear"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeekYear = require('date-fns/fp/startOfWeekYear')"},"es2015":{"title":"ES 2015","code":"import startOfWeekYear from 'date-fns/fp/startOfWeekYear'"},"esm":{"title":"ESM","code":"import { startOfWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfWeekYear(date)"},{"type":"jsdoc","kind":"function","urlId":"fp/startOfWeekYearWithOptions","category":"Week-Numbering Year Helpers","title":"startOfWeekYearWithOptions","description":"Return the start of a local week-numbering year for the given date.","content":{"id":"startOfWeekYearWithOptions","longname":"startOfWeekYearWithOptions","name":"startOfWeekYearWithOptions","kind":"member","scope":"global","description":"Return the start of a local week-numbering year.\nThe exact calculation depends on the values of\n`options.weekStartsOn` (which is the index of the first day of the week)\nand `options.firstWeekContainsDate` (which is the day of January, which is always in\nthe first week of the week-numbering year)\n\nWeek numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n\n### v2.0.0 breaking changes:\n\n- [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).","params":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"options.firstWeekContainsDate"},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"options.weekStartsOn"},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"options.locale"},{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options"},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"examples":"See [FP Guide](https://date-fns.org/docs/FP-Guide) for more information","category":"Week-Numbering Year Helpers","exceptions":[{"type":{"names":["TypeError"]},"description":"1 argument required"},{"type":{"names":["RangeError"]},"description":"`options.weekStartsOn` must be between 0 and 6"},{"type":{"names":["RangeError"]},"description":"`options.firstWeekContainsDate` must be between 1 and 7"}],"meta":{"lineno":6,"filename":"index.js","path":"/Users/jalal/Projects/date-fns/src/startOfWeekYear"},"summary":"Return the start of a local week-numbering year for the given date.","returns":[{"type":{"names":["Date"]},"description":"the start of a week-numbering year"}],"order":0},"pure":true,"isFPFn":true,"args":[{"type":{"names":["Object"]},"optional":false,"description":"an object with options.","name":"options","props":[{"type":{"names":["1","2","3","4","5","6","7"]},"optional":true,"defaultvalue":1,"description":"the day of January, which is always in the first week of the year","name":"firstWeekContainsDate","isProperty":true},{"type":{"names":["0","1","2","3","4","5","6"]},"optional":true,"defaultvalue":0,"description":"the index of the first day of the week (0 - Sunday)","name":"weekStartsOn","isProperty":true},{"type":{"names":["Locale"]},"optional":true,"defaultvalue":"defaultLocale","description":"the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}","name":"locale","isProperty":true}]},{"type":{"names":["Date","Number"]},"description":"the original date","name":"date","optional":false}],"generatedFrom":"startOfWeekYear","relatedDocs":{"default":"startOfWeekYear","fp":"fp/startOfWeekYear","fpWithOptions":"fp/startOfWeekYearWithOptions"},"usage":{"commonjs":{"title":"CommonJS","code":"var startOfWeekYear = require('date-fns/fp/startOfWeekYear')"},"es2015":{"title":"ES 2015","code":"import startOfWeekYear from 'date-fns/fp/startOfWeekYear'"},"esm":{"title":"ESM","code":"import { startOfWeekYear } from 'date-fns/esm//fp'","text":"See [ECMAScript Modules guide](https://date-fns.org/docs/ECMAScript-Modules) for more information"}},"usageTabs":["commonjs","es2015","esm"],"syntax":"startOfWeekYear(options)(date)"}]}